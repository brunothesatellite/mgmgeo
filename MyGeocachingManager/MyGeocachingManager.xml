<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MyGeocachingManager</name>
    </assembly>
    <members>
        <member name="T:MyGeocachingManager.Geocaching.CacheStatus">
            <summary>
            Class to handle status of caches in MGM (found)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.CacheStatus._dicoCacheFound">
            <summary>
            Key: username
            Value: list of found caches codes
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.CacheStatus.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Default
            </summary>
            <param name="daddy">MainWindows</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.CacheStatus.SaveCacheStatus">
            <summary>
            Save information into xml file
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.CacheStatus.LoadCacheStatus">
            <summary>
            Load information from xml file
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.CacheStatus.ToString">
            <summary>
            ToString override
            </summary>
            <returns>String version of the object</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.CacheStatus.DeclareFoundCache(System.String,System.String)">
            <summary>
            Declare a cache found for a specific user
            </summary>
            <param name="name">username</param>
            <param name="code">cache code</param>
            <returns>true if success</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.CacheStatus.IsFoundCache(System.String,System.String)">
            <summary>
            Check if cache is found for a specific user
            </summary>
            <param name="name">username</param>
            <param name="code">cache code</param>
            <returns>true if success</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.CacheStatus.GetCacheFoundFromUser(System.String)">
            <summary>
            Return list of cache found for a user
            </summary>
            <param name="name">username</param>
            <returns>null if no cache found</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Filters.CustomFilterCode">
            <summary>
            Display only caches whose code is contained within a provided list
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterCode.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Constructor
            </summary>
            <param name="codes">list of matching codes</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterCode.ToBeDisplayed(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check if a cache shall be displayed based on filter definition
            </summary>
            <param name="cache">Cache to be checked</param>
            <returns>true if cache shall be displayed (passes the filter definition)</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Filters.CustomFilterDateCreation">
            <summary>
            Display only caches whose date of creation ends with one provided value
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterDateCreation.#ctor(System.String[])">
            <summary>
            Constructor
            </summary>
            <param name="dates">list of matching dates (mm-dd)</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterDateCreation.ToBeDisplayed(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check if a cache shall be displayed based on filter definition
            </summary>
            <param name="cache">Cache to be checked</param>
            <returns>true if cache shall be displayed (passes the filter definition)</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Filters.CustomFilterListOfMissingDT">
            <summary>
            Description of CustomFilterListOfMissingDT.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterListOfMissingDT.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Constructor
            </summary>
            <param name="missingDT">list of missing DT</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterListOfMissingDT.ToBeDisplayed(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check if a cache shall be displayed based on filter definition
            </summary>
            <param name="cache">Cache to be checked</param>
            <returns>true if cache shall be displayed (passes the filter definition)</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Filters.CustomFilterAltitude">
            <summary>
            Display all caches based on their altitude
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterAltitude.#ctor(System.Double,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="altitude">Altitude to check against, in meters</param>
            <param name="comparison">Comparison to perform
            0: cache altitude shall be >= provided altitude
            1: cache altitude shall be = provided altitude
            2: cache altitude shall be inferior or equal to provided altitude
            </param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterAltitude.ToBeDisplayed(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check if a cache shall be displayed based on filter definition
            </summary>
            <param name="cache">Cache to be checked</param>
            <returns>true if cache shall be displayed (passes the filter definition)</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Filters.CustomFilterExcludeMissingCaches">
            <summary>
            This filter will display only caches that are missing OR only caches that are not missing.
            To identify caches that are potentially missing, MGM uses the following criteria:
            If within the 5 last logs:
            - there is at least _minNbDNF negative conditions
            - and no positive condition more recent than the last negative condition
            Then the cache is flagged missing
            Note : Logs are ordered from the most recent to the most older
            
            Negative conditions are:
            0 : "didn't find it"
            1 : "needs archived"
            2 : "needs maintenance"
            
            Positive conditions are:
            0 : "found it"
            1 : "enable listing"
            2 : "owner maintenance"
            3 : "update coordinates"
            4 : "unarchive"
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterExcludeMissingCaches.#ctor(System.Boolean[],System.Boolean[],System.Int32,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="tConditionsNegatives">List of negative conditions to be used, based on this order:
            0 : "didn't find it"
            1 : "needs archived"
            2 : "needs maintenance"
            </param>
            <param name="tConditionsPositives">List of positive conditions to be used, based on this order:
            0 : "found it"
            1 : "enable listing"
            2 : "owner maintenance"
            3 : "update coordinates"
            4 : "unarchive"
            </param>
            <param name="minNbDNF">Minimum number of negative conditions</param>
            <param name="bDisplayOnlyExcluded">
            If true, display only missing caches,
            If false, exlcudes missing caches.</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterExcludeMissingCaches.ToBeDisplayed(System.Boolean[],System.Boolean[],System.Int32,MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check if a cache shall be displayed based on filter definition
            </summary>
            <param name="tConditionsNegatives">List of negative conditions to be used, based on this order:
            0 : "didn't find it"
            1 : "needs archived"
            2 : "needs maintenance"
            </param>
            <param name="tConditionsPositives">List of positive conditions to be used, based on this order:
            0 : "found it"
            1 : "enable listing"
            2 : "owner maintenance"
            3 : "update coordinates"
            4 : "unarchive"
            </param>
            <param name="minNbDNF">Minimum number of negative conditions</param>
            <param name="cache">Cache to be checked</param>
            <returns>True if cache can be displayed</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterExcludeMissingCaches.ToBeDisplayed(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check if a cache shall be displayed based on filter definition
            </summary>
            <param name="cache">Cache to be checked</param>
            <returns>true if cache shall be displayed (passes the filter definition)</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Filters.CustomFilterExcludeSelection">
            <summary>
            Display all caches
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterExcludeSelection.#ctor(System.Collections.Generic.HashSet{System.String})">
            <summary>
            Constructor
            </summary>
            <param name="hs">List of caches codes that shall be excluded from display</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterExcludeSelection.ToBeDisplayed(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check if a cache shall be displayed based on filter definition
            </summary>
            <param name="cache">Cache to be checked</param>
            <returns>true if cache shall be displayed (passes the filter definition)</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Filters.CustomFilterNoStats">
            <summary>
            Display all caches without popularity
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterNoStats.ToBeDisplayed(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check if a cache shall be displayed based on filter definition
            </summary>
            <param name="cache">Cache to be checked</param>
            <returns>true if cache shall be displayed (passes the filter definition)</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Filters.CustomFilterWithSpoiler">
            <summary>
            Display all caches which have downloaded spoilers
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterWithSpoiler.ToBeDisplayed(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check if a cache shall be displayed based on filter definition
            </summary>
            <param name="cache">Cache to be checked</param>
            <returns>true if cache shall be displayed (passes the filter definition)</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Filters.CustomFilterNonTranslated">
            <summary>
            Display all caches that are not translated
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterNonTranslated.ToBeDisplayed(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check if a cache shall be displayed based on filter definition
            </summary>
            <param name="cache">Cache to be checked</param>
            <returns>true if cache shall be displayed (passes the filter definition)</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Filters.CustomFilterModified">
            <summary>
            Display all caches that have been modified by MGM
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterModified.ToBeDisplayed(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check if a cache shall be displayed based on filter definition
            </summary>
            <param name="cache">Cache to be checked</param>
            <returns>true if cache shall be displayed (passes the filter definition)</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Filters.CustomFilterNoDescription">
            <summary>
            Display all caches without neither short description nor long description
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterNoDescription.ToBeDisplayed(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check if a cache shall be displayed based on filter definition
            </summary>
            <param name="cache">Cache to be checked</param>
            <returns>true if cache shall be displayed (passes the filter definition)</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Filters.ChainedFiltersAND">
            <summary>
            Filter that will execute several filters
            A cache will be displayed if ALL filter authorize this cache to be displayed
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.ChainedFiltersAND.#ctor(System.Windows.Forms.CheckedListBox.CheckedItemCollection)">
            <summary>
            Constructor
            </summary>
            <param name="items">Collection of checked filters in the associated TabPage</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.ChainedFiltersAND.#ctor(System.Windows.Forms.CheckedListBox.CheckedItemCollection,MyGeocachingManager.CacheFilter)">
            <summary>
            Constructor
            </summary>
            <param name="items">Collection of checked filters in the associated TabPage</param>
            <param name="fltForPlaceholder">Filter to use if placeholder is found in collection</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.ChainedFiltersAND.#ctor(System.Collections.Generic.List{MyGeocachingManager.CacheFilter})">
            <summary>
            Constructor
            </summary>
            <param name="items">List of CacheFilter to be used (order will defines order of execution)</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.ChainedFiltersAND.#ctor(MyGeocachingManager.CacheFilter[])">
            <summary>
            Constructor
            </summary>
            <param name="items">List of CacheFilter to be used (order will defines order of execution)</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.ChainedFiltersAND.ToBeDisplayed(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check if a cache shall be displayed based on filter definition
            </summary>
            <param name="cache">Cache to be checked</param>
            <returns>true if cache shall be displayed (passes the filter definition)</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Filters.CustomFilterArea">
            <summary>
            Display all caches that are within a defined area
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterArea.#ctor(System.Collections.Generic.List{System.Collections.Generic.List{GMap.NET.PointLatLng}})">
            <summary>
            Constructor
            </summary>
            <param name="areas">List of list of points defining the area</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterArea.ToBeDisplayed(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check if a cache shall be displayed based on filter definition
            </summary>
            <param name="cache">Cache to be checked</param>
            <returns>true if cache shall be displayed (passes the filter definition)</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterArea.PointInPolygon(GMap.NET.PointLatLng,GMap.NET.PointLatLng[])">
            <summary>
            Check if a point is inside a polygon
            </summary>
            <param name="p">point to check</param>
            <param name="poly">polygon</param>
            <returns>true if point is present inside the polygon</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Filters.CustomFilterBookmarked">
            <summary>
            Display all caches that are bookmarked (_bBookmarked of OfflineCacheData)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Filters.CustomFilterBookmarked._od">
            <summary>
            Reference to OfflineData object
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterBookmarked.ToBeDisplayed(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check if a cache shall be displayed based on filter definition
            </summary>
            <param name="cache">Cache to be checked</param>
            <returns>true if cache shall be displayed (passes the filter definition)</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Filters.CustomFilterNoOfflineData">
            <summary>
            Display all caches without offline data (no valid OfflineCacheData attribute)
            OfflineCacheData contains many extra information for caches, such as statistics, spoilers, images, etc... 
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Filters.CustomFilterNoOfflineData._od">
            <summary>
            reference to an OfflineData element, shall contains the list of OfflineCacheData stored in MainWindow
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.CustomFilterNoOfflineData.ToBeDisplayed(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check if a cache shall be displayed based on filter definition
            </summary>
            <param name="cache">Cache to be checked</param>
            <returns>true if cache shall be displayed (passes the filter definition)</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Filters.ChainedFiltersOR">
            <summary>
            Filter that will execute several filters
            A cache will be displayed if AT LEAST ONE filter authorize this cache to be displayed
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.ChainedFiltersOR.#ctor(System.Windows.Forms.CheckedListBox.CheckedItemCollection)">
            <summary>
            Constructor
            </summary>
            <param name="items">Collection of checked filters in the associated TabPage</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.ChainedFiltersOR.#ctor(System.Windows.Forms.CheckedListBox.CheckedItemCollection,MyGeocachingManager.CacheFilter)">
            <summary>
            Constructor
            </summary>
            <param name="items">Collection of checked filters in the associated TabPage</param>
            <param name="fltForPlaceholder">Filter to use if placeholder is found in collection</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.ChainedFiltersOR.#ctor(System.Collections.Generic.List{MyGeocachingManager.CacheFilter})">
            <summary>
            Constructor
            </summary>
            <param name="items">List of CacheFilter to be used (order will defines order of execution)</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.ChainedFiltersOR.#ctor(MyGeocachingManager.CacheFilter[])">
            <summary>
            Constructor
            </summary>
            <param name="items">List of CacheFilter to be used (order will defines order of execution)</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Filters.ChainedFiltersOR.ToBeDisplayed(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check if a cache shall be displayed based on filter definition
            </summary>
            <param name="cache">Cache to be checked</param>
            <returns>true if cache shall be displayed (passes the filter definition)</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.GeocachingConstants">
            <summary>
            Holds Geocaching constants.
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.GeocachingConstants._FalseDatePattern">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.GeocachingConstants.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Default constructor
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.GeocachingConstants.GetSupportedCacheTypes">
            <summary>
            Return list of supported cache types
            </summary>
            <returns>list of supported cache types</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.GeocachingConstants.CheckIfCoordinatesCanBemodifiedOnGC(System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.GeocachingConstants.GetSupportedCacheSize">
            <summary>
            Return list of supported cache size
            </summary>
            <returns>list of supported cache size</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.GeocachingConstants.GetDicoTypeCheckbox">
            <summary>
            Return dictionary Cache Type / Associated Checkbox
            </summary>
            <returns>Return dictionary Cache Type / Associated Checkbox</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.GeocachingConstants.GetDicoSizeCheckbox">
            <summary>
            Return dictionary Cache Type / Associated Checkbox
            </summary>
            <returns>Return dictionary Cache Type / Associated Checkbox</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.GeocachingConstants.GetDicoTypeCategory">
            <summary>
            Return dictionary Cache Type / Associated category
            </summary>
            <returns>Return dictionary Cache Type / Associated category</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.GeocachingConstants.GetDicoTypeSmallIcon">
            <summary>
            Return dictionary Cache Type / Associated small icon ~13x13
            </summary>
            <returns>Return dictionary Cache Type / Associated small icon</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.GeocachingConstants.ConvertContainerToInt(System.String)">
            <summary>
            Convert container to int
            </summary>
            <param name="container">container name</param>
            <returns>int</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.GeocachingConstants.ConvertContainerToOpenCachingValues(System.String)">
            <summary>
            Perform cache container conversion from Geocaching to Opencaching
            </summary>
            <param name="container">container geocaching size</param>
            <returns>Opencaching size</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.GeocachingConstants.ConvertContainerToString(System.String)">
            <summary>
            Convert container int (string format) to string name
            </summary>
            <param name="container">int value</param>
            <returns>container name</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.GeocachingConstants.GetSupportedWaypointsType">
            <summary>
            Return list of supported waypoints types
            </summary>
            <returns>list of supported waypoints types</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.GeocachingConstants.CreateListOfWaypointTypes(System.Collections.Generic.List{System.String})">
            <summary>
            
            </summary>
            <param name="lsttype"></param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.GeocachingConstants.RetrieveWaypointTypeAndPrefix(System.String,System.String@,System.String@)">
            <summary>
            
            </summary>
            <param name="sType"></param>
            <param name="sWptType"></param>
            <param name="sWptTypePrefix"></param>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.MGMDataBase">
            <summary>
            All operations related to MGM database
            </summary>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.MGMDataBase.DBinfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.MGMDataBase.DBinfo.latmin">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.MGMDataBase.DBinfo.lonmin">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.MGMDataBase.DBinfo.latmax">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.MGMDataBase.DBinfo.lonmax">
            <summary>
            
            </summary>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.MGMDataBase.DBType">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.MGMDataBase.DBType.GeocacheFull">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.MGMDataBase.DBType.Log">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.MGMDataBase.DBType.Waypoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.MGMDataBase.DBType.TravelBug">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.MGMDataBase.DBType.Area">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.MGMDataBase.#ctor(MyGeocachingManager.MainWindow,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <param name="file"></param>
            <param name="create"></param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.MGMDataBase.GetArea(GMap.NET.PointLatLng@,GMap.NET.PointLatLng@)">
            <summary>
            
            </summary>
            <param name="topleft"></param>
            <param name="bottomright"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.MGMDataBase.GetFullCount">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.MGMDataBase.GetCount(MyGeocachingManager.Geocaching.MGMDataBase.DBType)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.MGMDataBase.HasColumn(System.Data.SQLite.SQLiteDataReader,System.String)">
            <summary>
            
            </summary>
            <param name="dr"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.MGMDataBase.PerformSelect(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="stm"></param>
            <param name="dbname"></param>
            <param name="updatedaddy"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.MGMDataBase.PerformSelectNoMapsUpdate(MyGeocachingManager.MainWindow,System.String,System.String,System.Collections.Generic.Dictionary{System.String,MyGeocachingManager.Geocaching.Geocache}@,System.String)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <param name="cs"></param>
            <param name="stm"></param>
            <param name="dicoCacheCache"></param>
            <param name="dbname"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.MGMDataBase.InsertGeocaches(System.Collections.Generic.List{MyGeocachingManager.Geocaching.Geocache},System.Boolean,HtmlAgilityPack.HtmlDocument,MyGeocachingManager.Geocaching.MGMDataBase.DBinfo@)">
            <summary>
            
            </summary>
            <param name="caches"></param>
            <param name="striphtml"></param>
            <param name="doc"></param>
            <param name="dbi"></param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.MGMDataBase.InsertLogs(System.Collections.Generic.List{MyGeocachingManager.Geocaching.CacheLog},System.Boolean,HtmlAgilityPack.HtmlDocument)">
            <summary>
            
            </summary>
            <param name="logs"></param>
            <param name="striphtml"></param>
            <param name="doc"></param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.MGMDataBase.InsertWaypoints(System.Collections.Generic.List{MyGeocachingManager.Geocaching.Waypoint},System.Boolean,HtmlAgilityPack.HtmlDocument)">
            <summary>
            
            </summary>
            <param name="wpts"></param>
            <param name="striphtml"></param>
            <param name="doc"></param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.MGMDataBase.InsertTBs(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.String,System.String}})">
            <summary>
            
            </summary>
            <param name="tbs"></param>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.NotificationsManager">
            <summary>
            Description of NotificationsManager.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.NotificationsManager.GeneratePostString(MyGeocachingManager.MainWindow,System.String,System.Double,System.Double,System.Int32,System.String,System.Tuple{System.Int32,System.String,System.Collections.Generic.List{System.String}},System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <param name="post_response"></param>
            <param name="dlat"></param>
            <param name="dlon"></param>
            <param name="distance"></param>
            <param name="name"></param>
            <param name="tyo"></param>
            <param name="email"></param>
            <param name="checknotif"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.NotificationsManager.GeneratePostRequets(MyGeocachingManager.MainWindow,System.String,System.String,System.Net.CookieContainer)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <param name="url"></param>
            <param name="post_string"></param>
            <param name="cookieJar"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.NotificationsManager.RetrieveNotificationsList(MyGeocachingManager.MainWindow,System.Collections.Generic.List{System.String}@,System.Windows.Forms.ImageList@,System.Collections.Generic.List{System.Tuple{System.String,System.String,System.Boolean,System.String,System.String,System.String}}@,System.Collections.Generic.List{System.String}@)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <param name="options"></param>
            <param name="imglist"></param>
            <param name="lsentries"></param>
            <param name="checkedvalues"></param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.NotificationsManager.DeleteNotifications(MyGeocachingManager.MainWindow)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.NotificationsManager.DeleteNotificationsImpl(MyGeocachingManager.MainWindow,System.String,System.Net.CookieContainer)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <param name="id"></param>
            <param name="cookieJar"></param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.NotificationsManager.ToggleNotifications(MyGeocachingManager.MainWindow)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.NotificationsManager.ToggleNotificationsImpl(MyGeocachingManager.MainWindow,System.String,System.Net.CookieContainer)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <param name="id"></param>
            <param name="cookieJar"></param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.NotificationsManager.UpdateNotificationsImpl(MyGeocachingManager.MainWindow,System.String,System.Net.CookieContainer,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <param name="id"></param>
            <param name="cookieJar"></param>
            <param name="dlat"></param>
            <param name="dlon"></param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.NotificationsManager.GetNotificationData(MyGeocachingManager.MainWindow,System.String,System.String@)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <param name="id"></param>
            <param name="post_response"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.NotificationsManager.MapNotifications(MyGeocachingManager.MainWindow)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.NotificationsManager.MapNotificationsImpl(MyGeocachingManager.MainWindow,System.Collections.Generic.List{System.String})">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <param name="ids"></param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.NotificationsManager.CreateNotifications(MyGeocachingManager.MainWindow)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.NotificationsManager.CheckValidationMessage(MyGeocachingManager.MainWindow,System.String)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.NotificationsManager.CheckWarningMessage(MyGeocachingManager.MainWindow,System.String)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.NotificationsManager.ListNotifsGroup(MyGeocachingManager.MainWindow)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.GCNotification">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.GCNotification.id">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.GCNotification.dlat">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.GCNotification.dlon">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.GCNotification.distance">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.GCNotification.name">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.GCNotification.email">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.GCNotification.data">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.GCNotification.kindofnotifnames">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.GCNotification.checknotif">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.GCNotification.Tag">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.GCNotification.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.GCNotification.GetTypeKeyInEnglish">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.GCNotification.GetIcon(GMap.NET.WindowsForms.Markers.GMarkerGoogleType@,System.Drawing.Color@)">
            <summary>
            
            </summary>
            <param name="gtype"></param>
            <param name="c"></param>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.ProfileMgr">
            <summary>
            Class to handle MGM profiles (user specific information)
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.ProfileMgr.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Default
            </summary>
            <param name="daddy">Mainwindow</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.ProfileMgr.GetListOfProfiles">
            <summary>
            Return list of profiles name
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.ProfileMgr.UpdateMGMFromProfile(MyGeocachingManager.MainWindow,System.String)">
            <summary>
            Update MGM conf based on profile name
            </summary>
            <param name="name">profile name</param>
            <param name="daddy">main windows</param>
            <returns>true if profile found</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.ProfileMgr.UpdateBasedOnMGMCurrentProfile(MyGeocachingManager.MainWindow)">
            <summary>
            Add current profile from MGM into profile list
            <param name="daddy">main windows</param>
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.ProfileMgr.LoadProfiles">
            <summary>
            Load information from xml file
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.ProfileMgr.SaveProfiles">
            <summary>
            Save information into xml file
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.ProfileMgr.ToString">
            <summary>
            ToString override
            </summary>
            <returns>String version of the object</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.UserInfo">
            <summary>
            User information
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.UserInfo._owner">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.UserInfo._ownerpassword">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.UserInfo._mylocationlat">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.UserInfo._mylocationlon">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.UserInfo._ignorefounds">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.UserInfo._key">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.UserInfo.ToString">
            <summary>
            ToString override
            </summary>
            <returns>String version of the object</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.OV2Reader">
            <summary>
            Parser of OV2 format (TomTom POI)
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.OV2Reader.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.OV2Reader.ProcessFileSuperPP(System.Data.SQLite.SQLiteConnection,System.Data.SQLite.SQLiteCommand,System.String,System.String)">
            <summary>
            Create a list of empty geocaches from an OV2 file from SuperPP.
            SuperPP is a geocacher producing OV2 exports for France,
            see http://www.geocaching.com/profile/default.aspx?guid=05b50a82-2ae6-404b-958f-f184100acf25
            DB will be populated with the following valid attributes:
            - Code
            - Name
            - Type
            - Latitude
            - Longitude
            - Difficulty
            - Terrain
            </summary>
            <param name="con">SQLiteConnection</param>
            <param name="cmd">SQLiteCommand</param>
            <param name="filename">OV2 file</param>
            <param name="sType">Type of Geocache to be created (Traditional, etc...)</param>
            <returns>Number of inserted row into DB</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.OV2Reader.ProcessFile(MyGeocachingManager.MainWindow,System.String,System.String,System.Boolean)">
            <summary>
            Create a list of empty geocaches from an OV2 file.
            Empty geocache will have the following valid attributes:
            - Longitude
            - Latitude
            - Type
            - Difficulty (only for SuperPP format)
            - Terrain (only for SuperPP format)
            All other attributes will have default values.
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
            <param name="filename">OV2 file</param>
            <param name="sType">Type of Geocache to be created (Traditional, etc...)</param>
            <param name="bFromSuperPP">true if OV2 is generated by SuperPP
            SuperPP is a geocacher producing OV2 exports for France,
            see http://www.geocaching.com/profile/default.aspx?guid=05b50a82-2ae6-404b-958f-f184100acf25</param>
            <returns>List of created geocaches</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.CacheLog">
            <summary>
            Class for a geocache log
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.CacheLog._Date">
            <summary>
            Log date
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.CacheLog._Type">
            <summary>
            Log type
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.CacheLog._User">
            <summary>
            User who logged
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.CacheLog._Text">
            <summary>
            Log text
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.CacheLog._Encoded">
            <summary>
            True if the log is encoded (ROT13)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.CacheLog._SortingKey">
            <summary>
            Internal key, not serialized to fasten log chronological sort
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.CacheLog._LogId">
            <summary>
            Log id for GPX export usage only
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.CacheLog._FinderId">
            <summary>
            Finder id for GPX export usage only
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.CacheLog.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Constructor
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.CacheLog.CreateLogTypeTranslationKey(System.String)">
            <summary>
            Create a translator key for log type
            </summary>
            <param name="logType">log type</param>
            <returns>key to be used with a translator</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.CacheLog.ToHTML">
            <summary>
            Create a HTML bloc for this log (old fashioned)
            </summary>
            <returns>HTML bloc for this log (old fashioned)</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.CacheLog.ToGPXChunk">
            <summary>
            Return an XML "groundspeak:log" structure for the log, compliant with Geocaching GPX format
            </summary>
            <returns>XML "groundspeak:log" structure for the log, compliant with Geocaching GPX format</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.CacheLog.ToString">
            <summary>
            ToString override
            </summary>
            <returns>String version of the object</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.CacheLog.Clone">
            <summary>
            Clone current object
            </summary>
            <returns>cloned object</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.CacheLog.ToShortString">
            <summary>
            ToString without text
            </summary>
            <returns>String version of the object</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Geocache">
            <summary>
            Main classe of MGM :-)
            This is the class defining a Geocache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._DateExport">
            <summary>
            Last export date of Geocache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._Code">
            <summary>
            Geocaching code
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._Name">
            <summary>
            Cache name
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._Url">
            <summary>
            Cache url
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._Owner">
            <summary>
            Cache owner
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._DateCreation">
            <summary>
            Cache creation date
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._ShortDescription">
            <summary>
            Cache short decription
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._LongDescription">
            <summary>
            Cache long decription
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._D">
            <summary>
            Cache difficulty
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._T">
            <summary>
            Cache terrain
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._Latitude">
            <summary>
            Cache latitude
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._Longitude">
            <summary>
            Cache longitude
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._Type">
            <summary>
            Cache type
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._Available">
            <summary>
            Cache availability
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._Archived">
            <summary>
            Cache archived status
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._Container">
            <summary>
            Cache container size
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._Hint">
            <summary>
            Cache hint (decoded)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._Attributes">
            <summary>
            Cache attributes
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._Logs">
            <summary>
            Cache logs
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._bFound">
            <summary>
            True if cache has been found (information from GPX)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._bFoundInMGM">
            <summary>
            True if cache has been found (information declared in MGM)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._bOwned">
            <summary>
            True if cache is owned by user
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._bManualSelection">
            <summary>
            True if cache is manually selected by user in MGM
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._listTB">
            <summary>
            List of associated Travel bugs / Geocoins
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._waypoints">
            <summary>
            List of associated waypoints
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._waypointsFromMGM">
            <summary>
            List of extra waypoints : CUSTOM or MODIFIED origin
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._Ocd">
            <summary>
            Reference to associated OfflineCacheData
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.IsFound">
            <summary>
            Return true if _bFound or _bFoundInMGM
            </summary>
            <returns>true if _bFound or _bFoundInMGM</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.GetWaypointOrigin(MyGeocachingManager.Geocaching.Waypoint)">
            <summary>
            Retrieve origin of waypoint (_waypoints or _waypointsFromMGM)
            </summary>
            <param name="wpt">Waypoint to test</param>
            <returns>origin</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.GetListOfWaypoints">
            <summary>
            Retrieve merged list of waypoints (_waypoints and _waypointsFromMGM)
            </summary>
            <returns>merged dictionary</returns>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._dLatitude">
            <summary>
            Cache latitude
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._dLongitude">
            <summary>
            Cache longitude
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._ShortDescriptionInHTML">
            <summary>
            Cache short description in HTML format
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._LongDescriptionInHTML">
            <summary>
            Cache long description in HTML format
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._txtAttributes">
            <summary>
            Cache attributes (readable)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._CacheId">
            <summary>
            Cache identifier
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._OwnerId">
            <summary>
            Cache owner identifier
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._Country">
            <summary>
            Cache country
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._State">
            <summary>
            Cache state (from Country)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._PlacedBy">
            <summary>
            Name of geocacher who placed the cache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._ShortDescHTML">
            <summary>
            Indicates if short desciption is available in HTML format
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._LongDescHTML">
            <summary>
            Indicates if long desciption is available in HTML format
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._listTBId">
            <summary>
            List of Travel bugs / geocoins identifiers
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._listAttributesId">
            <summary>
            List of attributes identifiers
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._origin">
            <summary>
            List of files containing this cache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._dtDateCreation">
            <summary>
            Cache date of creation
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._dtDateLastLog">
            <summary>
            Cache date of last log
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Geocache._Modifications">
            <summary>
            Contains modification keywords
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.InsertModification(System.String)">
            <summary>
            Add a new modification
            </summary>
            <param name="key">modification keyword</param>
            <returns>1 if cache modified for the first time, 0 otherwise</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.RemoveModification(System.String)">
            <summary>
            Remove a modification
            </summary>
            <param name="key">modification keyword</param>
            <returns>1 if cache not modified anymore, 0 otherwise</returns>
        </member>
        <member name="P:MyGeocachingManager.Geocaching.Geocache.HasBeenModified">
            <summary>
            True if a cache has been modified
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Constructor
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.ManualFound">
            <summary>
             Manually find a cache
            </summary>
            <returns>number of modifications applied to the cache</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.ToGPXChunk(System.Boolean,System.Int32@)">
            <summary>
            Return an XML "wpt" structure for the geocache, compliant with Geocaching GPX format
            </summary>
            <param name="bWithWaypoint">indicates if we want to include Geocache waypoints in export</param>
            <param name="iLengthWaypointBloc">return length of Waypoints bloc in bytes, used for GGZ export (index file generation)</param>
            <returns>XML "wpt" structure for the geocache, compliant with Geocaching GPX format</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.UpdatePrivateData(System.String)">
            <summary>
            Update internal data after object creation, initialisation or modification
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.getArchived">
            <summary>
            True is cache is archived
            </summary>
            <returns>True is cache is archived</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.getAvailable">
            <summary>
            True is cache is available
            </summary>
            <returns>True is cache is available</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.getA">
            <summary>
            Return awesomeness
            </summary>
            <returns>awesomeness</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.getD">
            <summary>
            Return difficulty
            </summary>
            <returns>difficulty</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.getT">
            <summary>
            Return terrain
            </summary>
            <returns>terrain</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.ReturnLongDescriptionInHTMLWithWpts">
            <summary>
            Integrate waypoints list in geocache long description
            </summary>
            <returns>long description with waypoints integrated</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.ToHTML(System.Boolean,MyGeocachingManager.OfflineCacheData,System.Boolean)">
            <summary>
            Convert geocache in HTML for display in internal browser
            </summary>
            <param name="bUseKm">If true, distance will be in kilometers
            If false they will be in miles</param>
            <param name="ocd">Associated OfflineCacheData</param>
            <param name="bUseOfflineData">Indicate if OfflineCacheData shall be used</param>
            <returns>HTML string</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.ToString">
            <summary>
            ToString override
            </summary>
            <returns>String version of the object</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.ToShortString">
            <summary>
            ToString without descriptions
            </summary>
            <returns>String version of the object</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.UpdateDistanceToHome(System.Double,System.Double)">
            <summary>
            Compute distance from home based on provided home location 
            </summary>
            <param name="homeLat">Home latitude</param>
            <param name="homeLon">Home longitude</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.DistanceToCoord(System.Double,System.Double)">
            <summary>
            Compute distance from location based on provided location in kilometer
            </summary>
            <param name="ptLat">Location latitude</param>
            <param name="ptLon">Location longitude</param>
            <returns>distance from location based on provided location in kilometer</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.DistanceToHome">
            <summary>
            Return distance to home in kilometer
            </summary>
            <returns>distance to home in kilometer</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.DistanceToHomeMi">
            <summary>
            Return distance to home in miles
            </summary>
            <returns>distance to home in miles</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.ShouldBeCompleted">
            <summary>
            Check if cache should be completed, i.e. its description if empty
            </summary>
            <returns>true if cache description is empty</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.IsEventType">
            <summary>
            Check if cache is of event type (Event, Mega, Giga, CITO)
            </summary>
            <returns>True if cache is of event type</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.IsWebcamType">
            <summary>
            Check if cache is of event type (Event, Mega, Giga, CITO)
            </summary>
            <returns>True if cache is of event type</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.Clone">
            <summary>
            Clone a Geocache
            </summary>
            <returns>Cloned Geocache WITHOUT OCD NOR OPENCACHE !!!</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Geocache.Update(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            
            </summary>
            <param name="geo"></param>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.MiniGeocache">
            <summary>
            Mini instance of a Geocache with vital information
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.MiniGeocache._Code">
            <summary>
            Geocaching code
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.MiniGeocache._Name">
            <summary>
            Cache name
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.MiniGeocache._Type">
            <summary>
            Cache type
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.MiniGeocache._Container">
            <summary>
            Cache container size
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.MiniGeocache._D">
            <summary>
            Cache difficulty
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.MiniGeocache._T">
            <summary>
            Cache terrain
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.MiniGeocache.ToString">
            <summary>
            ToString override
            </summary>
            <returns>String version of the object</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.ROT13">
            <summary>
            Simple ROT13 encoder/decoder
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.ROT13.Transform(System.String)">
            <summary>
            Encode/Decode in ROT13
            </summary>
            <param name="value">string to encode/decode</param>
            <returns>encoded/decoded string</returns>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Waypoint">
            <summary>
            Class defining a geocaching Waypoint
            </summary>
        </member>
        <member name="T:MyGeocachingManager.Geocaching.Waypoint.WaypointOrigin">
            <summary>
            Enumeration defining which type waypoint we are dealing with
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Waypoint.WaypointOrigin.GPX">
            <summary>
            Waypoint comes from a GPX file
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Waypoint.WaypointOrigin.MODIFIED">
            <summary>
            Waypoint comes from a GPX file and is modified
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Waypoint.WaypointOrigin.CUSTOM">
            <summary>
            Waypoint is a user created waypoint
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Waypoint._eOrigin">
            <summary>
            Waypoint origin
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Waypoint._GCparent">
            <summary>
            Geocaching code of parent cache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Waypoint._lat">
            <summary>
            Waypoint latitude
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Waypoint._lon">
            <summary>
            Waypoint longitude
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Waypoint._time">
            <summary>
            Waypoint time of creation (from GPX)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Waypoint._name">
            <summary>
            Waypoint name (geocaching code)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Waypoint._cmt">
            <summary>
            Waypoint comment
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Waypoint._desc">
            <summary>
            Waypoint description
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Waypoint._url">
            <summary>
            Waypoint readable name
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Waypoint._urlname">
            <summary>
            Waypoint url (from Geocaching.com)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Waypoint._sym">
            <summary>
            Waypoint symbol
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Waypoint._type">
            <summary>
            Waypoint type
            </summary>
        </member>
        <member name="F:MyGeocachingManager.Geocaching.Waypoint._DateExport">
            <summary>
            Last time waypoint was exported by MGM 
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Waypoint.ToString">
            <summary>
            ToString override
            </summary>
            <returns>String version of the object</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Waypoint.PostTreatmentData(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Shall be called after waypoint creation and initialisation.
            Will Compute parent geocache code based on waypoint name.
            Will also translate waypoint types in Geocaching "English", needed if waypoint is created by C:Geo
            </summary>
            <param name="tableWptsTypeTranslated">table of translated waypoint types, to cope with C:Geo wird habit of translating types...</param>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Waypoint.ToGPXChunk">
            <summary>
            Return an XML "wpt" structure for the waypoint, compliant with Geocaching GPX format
            </summary>
            <returns>XML "wpt" structure for the waypoint, compliant with Geocaching GPX format</returns>
        </member>
        <member name="M:MyGeocachingManager.Geocaching.Waypoint.Clone">
            <summary>
            Create a clone of the waypoint
            </summary>
            <returns>Cloned waypoint</returns>
        </member>
        <member name="T:MyGeocachingManager.HMI.BrowserWrapper">
            <summary>
            Description of BrowserWrappe.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.BrowserWrapper.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
        </member>
        <member name="M:MyGeocachingManager.HMI.BrowserWrapper.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:MyGeocachingManager.HMI.CacheCache">
            <summary>
            Class dedicated to CacheCache.db management
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.CacheCache._dbCacheCachePath">
            <summary>
            path to DB
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.CacheCache._dicoCacheCache">
            <summary>
            dico of feteched caches
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.CacheCache._bEnableCacheCache">
            <summary>
            True if cachecache enabled
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.CacheCache._bUseCacheCacheFull">
            <summary>
            True if cachecachefull shall be used for PlayCacheCache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.CacheCache._workerCacheCache">
            <summary>
            Worker that fetch DB and update map and other stuffs
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.CacheCache.#ctor(MyGeocachingManager.MainWindow,MyGeocachingManager.CacheDetail)">
            <summary>
            CacheCache constructor
            </summary>
            <param name="daddy">reference to MainWindow</param>
            <param name="cd">reference to CacheDetail</param>
        </member>
        <member name="M:MyGeocachingManager.HMI.CacheCache.CreateSelectString(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Tuple{System.String,System.String}},System.Int32)">
            <summary>
            Create SQL SELECT syntax for specific filter values
            </summary>
            <param name="uselitedb">if true, used GeocacheLite table instead of GeocacheFull</param>
            <param name="code">if null or empty, ignored. Otherwise can use wildcard % or _</param>
            <param name="name">if null or empty, ignored. Otherwise can use wildcard % or _</param>
            <param name="type">if null or empty, ignored. Otherwise can use wildcard % or _</param>
            <param name="compD">comparaison string</param>
            <param name="valD">if null or empty or "_", ignored.</param>
            <param name="compT">comparaison string</param>
            <param name="valT">if null or empty or "_", ignored.</param>
            <param name="matrixHoles">List or (D,T) couples</param>
            <param name="maxresults">Max result for SQL</param>
            <returns>SQL SELECT syntax for specific filter values</returns>
        </member>
        <member name="M:MyGeocachingManager.HMI.CacheCache.GetGeocacheDateAndAge(System.DateTime@,System.String@,System.Int32@)">
            <summary>
            Returns database date of generation and age
            </summary>
            <param name="dt">date of generation</param>
            <param name="age">age in days</param>
            <param name="count">count of entries</param>
        </member>
        <member name="M:MyGeocachingManager.HMI.CacheCache.GetGeocacheCountInBase(System.String)">
            <summary>
            Return number of geocaches in database
            </summary>
            <returns>number of geocaches in database, -1 if error</returns>
        </member>
        <member name="M:MyGeocachingManager.HMI.CacheCache.PerformSelect(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="dbpath"></param>
            <param name="stm"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.HMI.CacheCache.PlayCacheCache(MyGeocachingManager.HMI.WorkerCacheCacheData.WhoLaunched)">
            <summary>
            Run background worker that will populate from cache if not busy
            </summary>
            <param name="launcher">identify who launched the game</param>
        </member>
        <member name="M:MyGeocachingManager.HMI.CacheCache.CheckForUpdate(System.Windows.Forms.Form)">
            <summary>
            
            </summary>
            <returns>true if there is an update downloading</returns>
        </member>
        <member name="M:MyGeocachingManager.HMI.CacheCache.CheckDatabaseAvailability(System.Windows.Forms.Form)">
            <summary>
            Return true if database is available
            Alos perofrms update check and propose to download if newer or missing DB
            </summary>
            <returns>True if DB available</returns>
        </member>
        <member name="M:MyGeocachingManager.HMI.CacheCache.ToggleCacheCache">
            <summary>
            Toggle cachecache function
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.CacheCache.GetAvailableDB(MyGeocachingManager.MainWindow,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@,System.Boolean)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <param name="listDBNames"></param>
            <param name="listDBPath"></param>
            <param name="verbose"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.HMI.CacheCache.FilterDatabase">
            <summary>
            Execute a custom filter on database with user input information
            </summary>
        </member>
        <member name="T:MyGeocachingManager.HMI.WorkerCacheCacheData">
            <summary>
            Data for CacheCache worker
            </summary>
        </member>
        <member name="T:MyGeocachingManager.HMI.WorkerCacheCacheData.WhoLaunched">
            <summary>
            Identify who launched the worker
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.WorkerCacheCacheData.WhoLaunched.MAPDRAG">
            <summary>
            Map dragged event
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.WorkerCacheCacheData.WhoLaunched.ZOOMCHANGE">
            <summary>
            Zoom changed event
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.WorkerCacheCacheData.cache">
            <summary>
            Cache to display
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.WorkerCacheCacheData.overlay">
            <summary>
            Overlay to display on
            </summary>
        </member>
        <member name="T:MyGeocachingManager.HMI.KmlManager">
            <summary>
            Description of FranceKml.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.FilterOnFrenchArea(System.Int32)">
            <summary>
            
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.GetFranceAreasDB(System.Int32)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.DouglasPeuckerReduction(System.Collections.Generic.List{GMap.NET.PointLatLng},System.Double)">
            <summary>
            Uses the Douglas Peucker algorithm to reduce the number of points.
            http://www.codeproject.com/Articles/18936/A-Csharp-Implementation-of-Douglas-Peucker-Line-Ap
            </summary>
            <param name="Points">The points.</param>
            <param name="Tolerance">The tolerance.</param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.DouglasPeuckerReduction(System.Collections.Generic.List{GMap.NET.PointLatLng},System.Int32,System.Int32,System.Double,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Douglases the peucker reduction.
            </summary>
            <param name="points">The points.</param>
            <param name="firstPoint">The first point.</param>
            <param name="lastPoint">The last point.</param>
            <param name="tolerance">The tolerance.</param>
            <param name="pointIndexsToKeep">The point index to keep.</param>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.PerpendicularDistance(GMap.NET.PointLatLng,GMap.NET.PointLatLng,GMap.NET.PointLatLng)">
            <summary>
            The distance of a point from a line made from point1 and point2.
            </summary>
            <param name="Point1">The PT1.</param>
            <param name="Point2">The PT2.</param>
            <param name="Point">The p.</param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.GenerateFranceAreasDB(System.Boolean,System.Int32,System.Double,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="usesmalldepartmentsifavail"></param>
            <param name="forcedecimation"></param>
            <param name="forcetolerance"></param>
            <param name="typedeb"></param>
            <param name="typeend"></param>
            <param name="silent"></param>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.GenerateFranceCoverage">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.DisplayFranceCoverage">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.DisplayWorldCoverage">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.DisplayWorldCoverageHighResSimple">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:MyGeocachingManager.HMI.KmlManager.TypeKML">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.KmlManager.TypeKML.World_ISO2">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.KmlManager.TypeKML.FRA_adm">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.KmlManager.TypeKML.Dpts">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.ReadKml(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Collections.Generic.List{GMap.NET.PointLatLng}}}@,MyGeocachingManager.HMI.KmlManager.TypeKML)">
            <summary>
            
            </summary>
            <param name="filename"></param>
            <param name="dico"></param>
            <param name="typekml"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.DisplayWorldCoverageHighResFull">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.DisplayWorldCoverageLowRes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.DisplayFranceCoverageImpl(System.Int32,System.Collections.Generic.List{System.Tuple{System.Int32,System.String,System.Collections.Generic.List{GMap.NET.WindowsForms.GMapPolygon}}}@,MyGeocachingManager.HMI.TrackSelector.ColorType,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="allZones"></param>
            <param name="colorType"></param>
            <param name="clearOverlay"></param>
            <param name="createthreadwait"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.FilterOnCountryImplLowRes">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.FilterOnCountryImplHighRes">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.FilterOnCountry">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.AnimateMyFinds">
            <summary>
            
            </summary>
        </member>
        <member name="T:MyGeocachingManager.HMI.KmlManager.TypeTest">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.KmlManager.TypeTest.TESTDECIMATION">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.KmlManager.TypeTest.TESTGENDBAREA">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.KmlManager.TypeTest.TESTREADDBAREA">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.KmlManager.TypeTest.TESTDISPLAYCOVERAGE">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.KmlManager.DoTest(MyGeocachingManager.HMI.KmlManager.TypeTest)">
            <summary>
            
            </summary>
            <param name="typetest"></param>
        </member>
        <member name="T:MyGeocachingManager.HMI.MatrixDT">
            <summary>
            Description of MatrixDT.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.MatrixDT.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Default constructor
            </summary>
            <param name="daddy">Daddy</param>
        </member>
        <member name="M:MyGeocachingManager.HMI.MatrixDT.GetMatrixHoles(MyGeocachingManager.MainWindow)">
            <summary>
            Returns list of matrix holes
            </summary>
            <param name="daddy">Mainwindow</param>
            <returns>null of list of (D,T) missing in D/T Matrix</returns>
        </member>
        <member name="F:MyGeocachingManager.HMI.MatrixDT.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.MatrixDT.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.HMI.MatrixDT.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.HMI.NotificationCreation">
            <summary>
            Description of NotificationCreation.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.NotificationCreation.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
        </member>
        <member name="F:MyGeocachingManager.HMI.NotificationCreation.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.NotificationCreation.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.HMI.NotificationCreation.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.HMI.NotificationGroup">
            <summary>
            Description of NotificationGroup.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.NotificationGroup.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
        </member>
        <member name="F:MyGeocachingManager.HMI.NotificationGroup.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.NotificationGroup.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.HMI.NotificationGroup.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.HMI.PQCheckHMI">
            <summary>
            Description of PQCheckHMI.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.HMI.PQCheckHMI.PQData">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.PQCheckHMI.PQData.Url">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.PQCheckHMI.PQData.Checked">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.PQCheckHMI.PQData.Index">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.PQCheckHMI.PQData.#ctor(System.String,System.Boolean,System.Int32)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="check"></param>
            <param name="index"></param>
        </member>
        <member name="M:MyGeocachingManager.HMI.PQCheckHMI.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
        </member>
        <member name="F:MyGeocachingManager.HMI.PQCheckHMI.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.PQCheckHMI.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.HMI.PQCheckHMI.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.HMI.ToolbarConfiguration">
            <summary>
            Description of ToolbarConfiguration.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.ToolbarConfiguration.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
        </member>
        <member name="M:MyGeocachingManager.HMI.ToolbarConfiguration.CreateToolbar(MyGeocachingManager.MainWindow)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
        </member>
        <member name="F:MyGeocachingManager.HMI.ToolbarConfiguration.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.ToolbarConfiguration.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.HMI.ToolbarConfiguration.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.HMI.WaypointsMgr">
            <summary>
            Form to manage cache waypoints
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.WaypointsMgr.#ctor(MyGeocachingManager.MainWindow,MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Construction
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
            <param name="geo">Associated geocache</param>
        </member>
        <member name="F:MyGeocachingManager.HMI.WaypointsMgr.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.WaypointsMgr.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.HMI.WaypointsMgr.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.HMI.Diagnostics">
            <summary>
            Form to perform and display MGM diagnostics
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.Diagnostics.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Constructor
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="F:MyGeocachingManager.HMI.Diagnostics.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.Diagnostics.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.HMI.Diagnostics.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.HMI.MyPanel">
            <summary>
            Custom panel to draw graphs on it
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.MyPanel._Colors">
            <summary>
            List of colors
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.MyPanel._Points">
            <summary>
            List of points to draw
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.MyPanel._Names">
            <summary>
            List of names for legend
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.MyPanel._Min">
            <summary>
            List of Minimum value of points
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.MyPanel._Max">
            <summary>
            List of Maximum value of points
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.MyPanel._MinL">
            <summary>
            List of Minimum value of points - string for legend
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.MyPanel._MaxL">
            <summary>
            List of Maximum value of points - string for legend
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.MyPanel._Index">
            <summary>
            Index position of cursor (refers to list of points)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.MyPanel._CallbackMethodMouseMove">
            <summary>
            Callback method called during OnMouseMove on this control
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.MyPanel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.MyPanel.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Draw a vertical bar under cursor and call _CallbackMethodMouseMove
            with index as parameter
            DOES NOT refresh or draw anything on the control !
            SIMPLY updates _Index
            </summary>
            <param name="sender">sender</param>
            <param name="e">event</param>
        </member>
        <member name="M:MyGeocachingManager.HMI.MyPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            OpPaint override
            </summary>
            <param name="pe">paint event</param>
        </member>
        <member name="T:MyGeocachingManager.HMI.BetaDownload">
            <summary>
            Form to download beta version of MGM from any official MGM website
            - Official website
            - Failover website
            - Any website manually entered in configuration ;-)
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.BetaDownload.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Construction
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="M:MyGeocachingManager.HMI.BetaDownload.GetMoreRecentBetaAvailable(System.String,MyGeocachingManager.MainWindow)">
            <summary>
            Return list of all beta version more recent than the current one
            </summary>
            <param name="url">Url of serveur to check</param>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
            <returns>the highest available beta (key = version, value = full url)</returns>
        </member>
        <member name="F:MyGeocachingManager.HMI.BetaDownload.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.BetaDownload.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.HMI.BetaDownload.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.HMI.PluginsDownload">
            <summary>
            Form to download a plugin from any official MGM website
            - Official website
            - Failover website
            - Any website manually entered in configuration ;-)
            This forms displays also local plugins not present on website
            and allows deletion of local / downloaded plugin
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.PluginsDownload.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Constructor
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="F:MyGeocachingManager.HMI.PluginsDownload.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.PluginsDownload.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.HMI.PluginsDownload.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.HMI.TrackSelector">
            <summary>
            Form to display a GPX track,
            to select a part of this track, with direct callback on CacheDetail map
            </summary>
        </member>
        <member name="T:MyGeocachingManager.HMI.TrackSelector.ColorType">
            <summary>
            Enumeration defining which kind of color will be used for the road
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.TrackSelector.ColorType.GreenRed">
            <summary>
            Green-Red gradient
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.TrackSelector.ColorType.HSL">
            <summary>
            HSL colors
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HMI.TrackSelector.ColorType.SingleColor">
            <summary>
            Single color
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.TrackSelector.EmptyAssociatedDecorations">
            <summary>
            Delete all associated decorations from map display
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.TrackSelector.#ctor(MyGeocachingManager.MainWindow,System.Collections.Generic.List{GMap.NET.PointLatLng},System.Collections.Generic.List{System.DateTime},System.Collections.Generic.List{System.Double},System.Boolean,MyGeocachingManager.HMI.TrackSelector.ColorType,System.Drawing.Color)">
            <summary>
            Constructor
            pts and times shall have the same items count
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
            <param name="pts">All the points of the track</param>
            <param name="times">All the DateTime associated to a point of the track</param>
            <param name="elevations">All the elevations (in meters) associated to a point of the track</param>
            <param name="bComputeSpeed">If true, speed will be computed from time and positions</param>
            <param name="speedColorType">Color type that will be used on road to display speed (only useful if bComputeSpeed is true)</param>
            <param name="singlecolor">Color value that will be used on road (only useful if bComputeSpeed is true and speedColorType is SingleValue or if bComputeSpeed is false)</param>
        </member>
        <member name="M:MyGeocachingManager.HMI.TrackSelector.CallbackMethodMouseMove(System.Int32)">
            <summary>
            Callback of OnMouseMove (MyPanel)
            </summary>
            <param name="index">index under cursor</param>
            <returns>true if callback successuflly executed (always true here)</returns>
        </member>
        <member name="M:MyGeocachingManager.HMI.TrackSelector.RequestParameters(MyGeocachingManager.MainWindow,System.Boolean@,MyGeocachingManager.HMI.TrackSelector.ColorType@,System.Drawing.Color@)">
            <summary>
            Display an HMI requesting parameters need for this form
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
            <param name="bComputeSpeed">out, If true, speed will be computed from time and positions</param>
            <param name="speedColorType">out, Color type that will be used on road to display speed (only useful if bComputeSpeed is true)</param>
            <param name="singlecolor">out, Color value that will be used on road (only useful if bComputeSpeed is true and speedColorType is SingleValue or if bComputeSpeed is false)</param>
            <returns>True if parameters successfuly filled</returns>
        </member>
        <member name="F:MyGeocachingManager.HMI.TrackSelector.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HMI.TrackSelector.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.HMI.TrackSelector.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.FieldNotesHMI">
            <summary>
            Form to handle field notes
            </summary>
        </member>
        <member name="F:MyGeocachingManager.FieldNotesHMI._mnuContextMenu">
            <summary>
            Context menu of a list
            </summary>
        </member>
        <member name="F:MyGeocachingManager.FieldNotesHMI._imageList">
            <summary>
            La liste d'images pour les types de caches
            </summary>
        </member>
        <member name="M:MyGeocachingManager.FieldNotesHMI.DisplayContextMenu(System.Drawing.Point)">
            <summary>
            Display context menu of a tab page
            </summary>
            <param name="pt">Point to display the menu</param>
        </member>
        <member name="M:MyGeocachingManager.FieldNotesHMI.LoadFieldNotes(MyGeocachingManager.MainWindow,MyGeocachingManager.FieldNotesHMI)">
            <summary>
            Load field notes and display HMI if not visible
            </summary>
            <param name="daddy">Mainframe</param>
            <param name="fn">reference to existing FieldNotesHMI, can be null</param>
        </member>
        <member name="M:MyGeocachingManager.FieldNotesHMI.LoadFieldNotesC(MyGeocachingManager.MainWindow,System.Collections.Generic.List{MyGeocachingManager.Geocaching.Geocache})">
            <summary>
            Load field notes and display HMI if not visible
            </summary>
            <param name="daddy">Mainframe</param>
            <param name="caches">list of caches to load</param>
        </member>
        <member name="M:MyGeocachingManager.FieldNotesHMI.GetEncoding(System.String)">
            <summary>
            Determines a text file's encoding by analyzing its byte order mark (BOM).
            Defaults to ASCII when detection of the text file's endianness fails.
            </summary>
            <param name="filename">The text file to analyze.</param>
            <returns>The detected encoding.</returns>
        </member>
        <member name="M:MyGeocachingManager.FieldNotesHMI.#ctor(MyGeocachingManager.MainWindow,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
            <param name="filename">field notes file (only Garmin geocaches_visit.txt supported at the moment)</param>
        </member>
        <member name="M:MyGeocachingManager.FieldNotesHMI.#ctor(MyGeocachingManager.MainWindow,System.Collections.Generic.List{MyGeocachingManager.Geocaching.Geocache})">
            <summary>
            Constructor
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
            <param name="caches">selection of caches</param>
        </member>
        <member name="F:MyGeocachingManager.FieldNotesHMI._ID_DATE">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.FieldNotesHMI._ID_NUM">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.FieldNotesHMI._ID_RCRT">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.FieldNotesHMI.TranslateForm">
            <summary>
            Automatically translate form labels
            </summary>
        </member>
        <member name="M:MyGeocachingManager.FieldNotesHMI.SelectLogTypeMethode(System.String)">
            <summary>
            Choice of log method selection : From a new template common for all, Automatically from existing info, Manually one by one
            </summary>
            <param name="titleKeyLabel">Translation key for title</param>
            <returns>1: From a new template common for all, 2: Automatically from existing info, 3: Manually one by one</returns>
        </member>
        <member name="M:MyGeocachingManager.FieldNotesHMI.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Handler to process key pressed
            Deals with CTRL+A to select all caches
            </summary>
            <param name="msg">message</param>
            <param name="keyData">key data</param>
            <returns>true</returns>
        </member>
        <member name="F:MyGeocachingManager.FieldNotesHMI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.FieldNotesHMI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.FieldNotesHMI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.LogExtraInfo">
            <summary>
            Class to handle extra log info such as TBs visited/dropped, favorite points added
            </summary>
        </member>
        <member name="F:MyGeocachingManager.LogExtraInfo._bUseDateAndType">
            <summary>
            True if _iLogType and _logDate shall be used
            </summary>
        </member>
        <member name="F:MyGeocachingManager.LogExtraInfo._iLogType">
            <summary>
            Log type
            </summary>
        </member>
        <member name="F:MyGeocachingManager.LogExtraInfo._logDate">
            <summary>
            Log date
            </summary>
        </member>
        <member name="F:MyGeocachingManager.LogExtraInfo._dicoTBs">
            <summary>
            key : TB code, id; value : 1 dropped, 2 visited 
            </summary>
        </member>
        <member name="F:MyGeocachingManager.LogExtraInfo._dicoImages">
            <summary>
            images to attach to the log (key is complete filename, value is (title, description))
            </summary>
        </member>
        <member name="F:MyGeocachingManager.LogExtraInfo._bFavorited">
            <summary>
            True if favorite awarded
            </summary>
        </member>
        <member name="T:MyGeocachingManager.ListViewColumnSorter">
            <summary>
            This class is an implementation of the 'IComparer' interface.
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ListViewColumnSorter.ColumnToSort">
            <summary>
            Specifies the column to be sorted
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ListViewColumnSorter.OrderOfSort">
            <summary>
            Specifies the order in which to sort (i.e. 'Ascending').
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ListViewColumnSorter.ObjectCompare">
            <summary>
            Case insensitive comparer object
            </summary>
        </member>
        <member name="M:MyGeocachingManager.ListViewColumnSorter.#ctor(MyGeocachingManager.FieldNotesHMI)">
            <summary>
            Class constructor.  Initializes various elements
            </summary>
        </member>
        <member name="M:MyGeocachingManager.ListViewColumnSorter.Compare(System.Object,System.Object)">
            <summary>
            This method is inherited from the IComparer interface.  It compares the two objects passed using a case insensitive comparison.
            </summary>
            <param name="x">First object to be compared</param>
            <param name="y">Second object to be compared</param>
            <returns>The result of the comparison. "0" if equal, negative if 'x' is less than 'y' and positive if 'x' is greater than 'y'</returns>
        </member>
        <member name="P:MyGeocachingManager.ListViewColumnSorter.SortColumn">
            <summary>
            Gets or sets the number of the column to which to apply the sorting operation (Defaults to '0').
            </summary>
        </member>
        <member name="P:MyGeocachingManager.ListViewColumnSorter.Order">
            <summary>
            Gets or sets the order of sorting to apply (for example, 'Ascending' or 'Descending').
            </summary>
        </member>
        <member name="T:MyGeocachingManager.GCLogHMI">
            <summary>
            Form to log a geocache
            </summary>
        </member>
        <member name="T:MyGeocachingManager.GCLogHMI.TemplateType">
            <summary>
            Template type for the log :
            None: standard log
            Simple: only text is allowed
            Complex: can change text, log type
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI.TemplateType.None">
            <summary>
            None: standard log
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI.TemplateType.Simple">
            <summary>
            Simple: can change text, TBs, favorite
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI.TemplateType.Complex">
            <summary>
            Complex: can change text, date, log type, TBs, favorite
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI.TemplateType.TB">
            <summary>
            TB: only TB / Geocoins
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI.TemplateType.TextOnly">
            <summary>
            TextOnly : can change text only
            </summary>
        </member>
        <member name="T:MyGeocachingManager.GCLogHMI.SubmitResult">
            <summary>
            Result of SubmitLog function
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI.SubmitResult.Success">
            <summary>
            Submit succeded
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI.SubmitResult.Error">
            <summary>
            Submit failed
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI.SubmitResult.Retry">
            <summary>
            User decided to retry (log modification)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI._iItemPosition">
            <summary>
            Index of item within list
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI._template">
            <summary>
            Template to use for each cache log if specified
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI._iTypeReallyLogged">
            <summary>
            Type used for last log
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI._TBActionList">
            <summary>
            Action list for selected TBs
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI._overrideRunCount">
            <summary>
            If different of -1, will override runcount computed value
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI._overrideRunTotal">
            <summary>
            If different of -1, will override runtotal computed value
            </summary>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.BaseGCLogHMI(MyGeocachingManager.MainWindow,System.Boolean)">
            <summary>
            Default constructor block for ANY constructor !
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
            <param name="translate">If true, TranslateForm is called</param>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.GetDicoSmileys(MyGeocachingManager.MainWindow)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.#ctor(MyGeocachingManager.MainWindow,System.Collections.Generic.List{MyGeocachingManager.Geocaching.Geocache},MyGeocachingManager.GCLogHMI.TemplateType,System.Boolean,System.String,System.Int32,System.Int32)">
            <summary>
            Constructor standard
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
            <param name="caches">caches to log</param>
            <param name="templateType">use this form for template</param>
            <param name="bSilent">Display only error message</param>
            <param name="template">Default text log (template)</param>
            <param name="overrideruncount">If different of -1, override runcount value</param>
            <param name="overrideruntotal">If different of -1, override runttoal value</param>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Constructor only for TB template !
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.#ctor(MyGeocachingManager.MainWindow,MyGeocachingManager.GCLogHMI.TemplateType)">
            <summary>
            Constructor only for template appliance !
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
            <param name="templateType">use this form for template</param>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.Reload(MyGeocachingManager.Geocaching.Geocache,System.DateTime,System.String,System.Int32,MyGeocachingManager.GCLogHMI.TemplateType,System.Boolean,System.Boolean,System.String,MyGeocachingManager.LogExtraInfo,System.Int32,System.Int32)">
            <summary>
            Load/Reload a simple cache with preexisting log info
            </summary>
            <param name="cache">cache to log</param>
            <param name="date">Log date</param>
            <param name="fieldnote">Field note if applicable</param>
            <param name="iLogType">Log type</param>
            <param name="templateType">use this form for template type</param>
            <param name="bSilent">Display only error message</param>
            <param name="template">Default text log (template)</param>
            <param name="infos">Log extra infos</param>
            <param name="overrideruncount">If different of -1, override runcount value</param>
            <param name="overrideruntotal">If different of -1, override runttoal value</param>
            <param name="bAutologBasedOnFieldNotes">Form is not displayed, log is automatically done based on provided information</param>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.#ctor(MyGeocachingManager.MainWindow,MyGeocachingManager.Geocaching.Geocache,System.DateTime,System.String,System.Int32,MyGeocachingManager.GCLogHMI.TemplateType,System.Boolean,System.Boolean,System.String,MyGeocachingManager.LogExtraInfo,System.Int32,System.Int32)">
            <summary>
            Constructor to log a simple cache with preexisting log info
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
            <param name="cache">cache to log</param>
            <param name="date">Log date</param>
            <param name="fieldnote">Field note if applicable</param>
            <param name="iLogType">Log type</param>
            <param name="templateType">use this form for template type</param>
            <param name="bSilent">Display only error message</param>
            <param name="template">Default text log (template)</param>
            <param name="infos">Log extra infos</param>
            <param name="overrideruncount">If different of -1, override runcount value</param>
            <param name="overrideruntotal">If different of -1, override runttoal value</param>
            <param name="bAutologBasedOnFieldNotes">Form is not displayed, log is automatically done based on provided information</param>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.SelectLogType(System.Int32)">
            <summary>
            Select the right log type in HMI
            </summary>
            <param name="iLogType">log type</param>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.GetDefaultLogTextFileName">
            <summary>
            Return name of default log text file (template_logheader.txt)
            </summary>
            <returns>Return name of default log text file</returns>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.LoadDefaultLogHeader">
            <summary>
            Load a default file, if present in the exe directory (template_logheader.txt)
            and insert its content in front of each log
            </summary>
            <returns>log header</returns>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.TranslateForm">
            <summary>
            Automatically translate form labels
            </summary>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.HttpUploadFile(System.String,System.String,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Net.WebProxy,System.Net.CookieContainer)">
            <summary>
            Updload an image to an existing log
            </summary>
            <param name="url">url for upload</param>
            <param name="paramName">parameter name for file</param>
            <param name="file">filename (complete path)</param>
            <param name="contentType">file content type</param>
            <param name="nvc">list of post params</param>
            <param name="proxy">proxy (can be null)</param>
            <param name="cookieJar">cookies for authentication</param>
            <returns>true if successful</returns>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.PostImage(MyGeocachingManager.MainWindow,System.Net.CookieContainer,System.String,System.String,System.String,System.String)">
            <summary>
            Post an image to an existing log
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
            <param name="cookieJar">Authentication cookies</param>
            <param name="logpage">content of log page</param>
            <param name="imagefile">complete filename to image (JPG only !)</param>
            <param name="txtname">image title</param>
            <param name="txtdesc">image description</param>
            <returns>true if successful</returns>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.PostImages(MyGeocachingManager.MainWindow,System.Net.CookieContainer,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Post images to an existing log
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
            <param name="cookieJar">Authentication cookies</param>
            <param name="logpage">content of log page</param>
            <param name="images">images to attach to the log (key is complete filename, value is (title, description))</param>
            <returns>true if successful</returns>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.LogCache(MyGeocachingManager.MainWindow,MyGeocachingManager.Geocaching.Geocache,System.DateTime,System.String,System.Boolean,System.Int32,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean,System.Int32,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Log a cache on geocaching website
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
            <param name="cache">Geocache to log</param>
            <param name="date">Log date</param>
            <param name="logtext">Log text</param>
            <param name="bFav">True if cache shall be favorited</param>
            <param name="iLogType">Log type</param>
            <param name="tbs">List of TBs to drop of visit</param>
            <param name="bDiscardAlreadyDroppedTBs">If true, TBs marked "Dropped Off will not be dropped off again</param>
            <param name="runcount">Cache number within a batch (used for %runcount)</param>
            <param name="runtotal">Number of caches that will be logged during a batch (used for %runtotal)</param>
            <param name="images">images to attach to the log (key is complete filename, value is (title, description))</param>
            <returns>True if log is successful</returns>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.ExportImages">
            <summary>
            Export list images for log
            </summary>
            <returns>images to attach to the log (key is complete filename, value is (title, description))</returns>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.ImportImages(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Import list images for log
            </summary>
            <param name="images">images to attach to the log (key is complete filename, value is (title, description))</param>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.ExportTBs">
            <summary>
            Export list of visited / dropped off TBs
            </summary>
            <returns>key : TB code, id; value : 1 dropped, 2 visited </returns>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.ImportTBs(System.Collections.Generic.Dictionary{System.Collections.Generic.KeyValuePair{System.String,System.String},System.Int32})">
            <summary>
            Import list of visited / dropped off TBs and updated HMI
            </summary>
            <param name="tbs">key : TB code, id; value : 1 dropped, 2 visited </param>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.SubmitLog(System.Boolean)">
            <summary>
            Submit a log
            </summary>
            <param name="offerRetryOnError">If true, retry will be offered on error on log lenght</param>
            <returns>SubmitResult status</returns>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.UpdateLogPreviewMarkdown">
            <summary>
            Update log preview in Markdown
            </summary>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.DefinePreviousAndNextButtons(System.Boolean,System.Boolean,System.Action{MyGeocachingManager.GCLogHMI,System.Int32},System.Action{MyGeocachingManager.GCLogHMI,System.Int32},System.Action{MyGeocachingManager.GCLogHMI,System.Int32},System.Int32)">
            <summary>
            Define handlers called for next and previous caches
            </summary>
            <param name="previous">true if previous button available</param>
            <param name="next">true if next button available</param>
            <param name="handlerPrevious">handler to previous</param>
            <param name="handlerNext">handler to next</param>
            <param name="handlerSave">handler to save</param>
            <param name="pos">index of displayed item within list</param>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.GCLogHMI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI.cbLogTypeloghmi">
            <summary>
            combo to select log type
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI.cbFavsloghmi">
            <summary>
            Checkbox for favorite award
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI.txtCommentsloghmi">
            <summary>
            Text for comment
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GCLogHMI.dtPickerloghmi">
            <summary>
            Log date
            </summary>
        </member>
        <member name="T:MyGeocachingManager.TBInfo">
            <summary>
            Stupid class to hold TB info
            </summary>
        </member>
        <member name="F:MyGeocachingManager.TBInfo._code">
            <summary>
            TB code
            </summary>
        </member>
        <member name="F:MyGeocachingManager.TBInfo._id">
            <summary>
            TB id (from log page)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.TBInfo._name">
            <summary>
            TB name
            </summary>
        </member>
        <member name="T:MyGeocachingManager.IgnoreCacheManager">
            <summary>
            Form to manage ignored caches
            </summary>
        </member>
        <member name="M:MyGeocachingManager.IgnoreCacheManager.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Constructor
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="M:MyGeocachingManager.IgnoreCacheManager.TranslateForm">
            <summary>
            Automatically translate form labels
            </summary>
        </member>
        <member name="F:MyGeocachingManager.IgnoreCacheManager.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.IgnoreCacheManager.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.IgnoreCacheManager.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.PopupNotifier">
             <summary>
             Non-visual component to show a notification window in the right lower
             corner of the screen.
             </summary>
            [ToolboxBitmapAttribute(typeof(PopupNotifier), "Icon.ico")]
        </member>
        <member name="F:MyGeocachingManager.PopupNotifier.ImgGrip">
            <summary>
            Image for Grip
            </summary>
        </member>
        <member name="E:MyGeocachingManager.PopupNotifier.Click">
            <summary>
            Event that is raised when the text in the notification window is clicked.
            </summary>
        </member>
        <member name="E:MyGeocachingManager.PopupNotifier.Close">
            <summary>
            Event that is raised when the notification window is manually closed.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.HeaderColor">
            <summary>
            HeaderColor
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.BodyColor">
            <summary>
            BodyColor
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.TitleColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.ContentColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.BorderColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.ButtonBorderColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.ButtonHoverColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.ContentHoverColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.GradientPower">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.ContentFont">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.TitleFont">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.ImageSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifier.ResetImageSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.Image">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.ShowGrip">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.Scroll">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.ContentText">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.TitleText">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.TitlePadding">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.ContentPadding">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.ImagePadding">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.HeaderHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.ShowCloseButton">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.ShowOptionsButton">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.OptionsMenu">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.Delay">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.AnimationDuration">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.AnimationInterval">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifier.Size">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifier.#ctor">
            <summary>
            Create a new instance of the popup component.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifier.Popup">
            <summary>
            Show the notification window if it is not already visible.
            If the window is currently disappearing, it is shown again.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifier.Hide">
            <summary>
            Hide the notification window.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifier.frmPopup_ContextMenuClosed(System.Object,System.EventArgs)">
            <summary>
            The custom options menu has been closed. Restart the timer for
            closing the notification window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifier.frmPopup_ContextMenuOpened(System.Object,System.EventArgs)">
            <summary>
            The custom options menu has been opened. The window must not be closed
            as long as the menu is open.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifier.IsClickable">
            <summary>
            True if Click event is defined
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifier.frmPopup_LinkClick(System.Object,System.EventArgs)">
            <summary>
            The text has been clicked. Raise the 'Click' event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifier.frmPopup_CloseClick(System.Object,System.EventArgs)">
            <summary>
            The close button has been clicked. Hide the notification window
            and raise the 'Close' event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifier.tmAnimation_Tick(System.Object,System.EventArgs)">
            <summary>
            Update form position and opacity to show/hide the window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifier.tmWait_Tick(System.Object,System.EventArgs)">
            <summary>
            The wait timer has elapsed, start the animation to hide the window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifier.frmPopup_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            Start wait timer if the mouse leaves the form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifier.frmPopup_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            Stop wait timer if the mouse enters the form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifier.Dispose(System.Boolean)">
            <summary>
            Dispose the notification form.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:MyGeocachingManager.PopupNotifierForm">
            <summary>
            This is the form of the actual notification window.
            </summary>
        </member>
        <member name="E:MyGeocachingManager.PopupNotifierForm.LinkClick">
            <summary>
            Event that is raised when the text is clicked.
            </summary>
        </member>
        <member name="E:MyGeocachingManager.PopupNotifierForm.CloseClick">
            <summary>
            Event that is raised when the notification window is manually closed.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifierForm.#ctor(MyGeocachingManager.PopupNotifier)">
            <summary>
            Create a new instance.
            </summary>
            <param name="parent">PopupNotifier</param>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifierForm.PopupNotifierForm_VisibleChanged(System.Object,System.EventArgs)">
            <summary>
            The form is shown/hidden.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifierForm.InitializeComponent">
            <summary>
            Used in design mode.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifierForm.Parent">
            <summary>
            Gets or sets the parent control.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifierForm.AddValueMax255(System.Int32,System.Int32)">
            <summary>
            Add two values but do not return a value greater than 255.
            </summary>
            <param name="input">first value</param>
            <param name="add">value to add</param>
            <returns>sum of both values</returns>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifierForm.DedValueMin0(System.Int32,System.Int32)">
            <summary>
            Subtract two values but do not returns a value below 0.
            </summary>
            <param name="input">first value</param>
            <param name="ded">value to subtract</param>
            <returns>first value minus second value</returns>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifierForm.GetDarkerColor(System.Drawing.Color)">
            <summary>
            Returns a color which is darker than the given color.
            </summary>
            <param name="color">Color</param>
            <returns>darker color</returns>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifierForm.GetLighterColor(System.Drawing.Color)">
            <summary>
            Returns a color which is lighter than the given color.
            </summary>
            <param name="color">Color</param>
            <returns>lighter color</returns>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifierForm.RectContentText">
            <summary>
            Gets the rectangle of the content text.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifierForm.RectClose">
            <summary>
            gets the rectangle of the close button.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.PopupNotifierForm.RectOptions">
            <summary>
            Gets the rectangle of the options button.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifierForm.PopupNotifierForm_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Update form to display hover styles when the mouse moves over the notification form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifierForm.PopupNotifierForm_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            A mouse button has been released, check if something has been clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifierForm.OptionsMenu_Closed(System.Object,System.Windows.Forms.ToolStripDropDownClosedEventArgs)">
            <summary>
            The options popup menu has been closed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifierForm.AllocateGDIObjects">
            <summary>
            Create all GDI objects used to paint the form.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifierForm.DisposeGDIObjects">
            <summary>
            Free all GDI objects.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifierForm.PopupNotifierForm_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draw the notification form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MyGeocachingManager.PopupNotifierForm.Dispose(System.Boolean)">
            <summary>
            Dispose GDI objects.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:MyGeocachingManager.DatabaseOfFiles">
            <summary>
            Database of bookmark files
            </summary>
        </member>
        <member name="F:MyGeocachingManager.DatabaseOfFiles._Name">
            <summary>
            Database name
            </summary>
        </member>
        <member name="F:MyGeocachingManager.DatabaseOfFiles._Files">
            <summary>
            List of associated files
            </summary>
        </member>
        <member name="F:MyGeocachingManager.DatabaseOfFiles._Id">
            <summary>
            DB identifier
            </summary>
        </member>
        <member name="M:MyGeocachingManager.DatabaseOfFiles.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:MyGeocachingManager.DatabaseOfFiles.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">info</param>
            <param name="ctxt">context</param>
        </member>
        <member name="M:MyGeocachingManager.DatabaseOfFiles.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization function.
            </summary>
            <param name="info">info</param>
            <param name="ctxt">context</param>
        </member>
        <member name="M:MyGeocachingManager.DatabaseOfFiles.ToString">
            <summary>
            ToString override
            </summary>
            <returns>String version of the object</returns>
        </member>
        <member name="T:MyGeocachingManager.GMapWrapper">
            <summary>
            GMap.NET wrapper with commonly used methods
            </summary>
        </member>
        <member name="M:MyGeocachingManager.GMapWrapper.gmapMarkerWithImage(GMap.NET.WindowsForms.GMapOverlay,System.Drawing.Image,System.Double,System.Double,System.String)">
            <summary>
            Create a GMapMarkerImage
            This marker can render only one image)
            </summary>
            <param name="markersOverlay">Associated overlay</param>
            <param name="markerImage">Associated image</param>
            <param name="lat">Marker latitude</param>
            <param name="lon">Marker longitude</param>
            <param name="tooltip">Marker tooltip</param>
            <returns>Created GMapMarkerImage</returns>
        </member>
        <member name="M:MyGeocachingManager.GMapWrapper.gmapMarkerWithImageAndImageTooltip(GMap.NET.WindowsForms.GMapOverlay,System.Drawing.Image,System.Double,System.Double,System.String,System.String)">
            <summary>
            Create a GMapMarkerImage
            This marker can render only one image)
            </summary>
            <param name="markersOverlay">Associated overlay</param>
            <param name="markerImage">Associated image</param>
            <param name="lat">Marker latitude</param>
            <param name="lon">Marker longitude</param>
            <param name="tooltipImagePath">Marker image that will be displayed as a tooltip tooltip (full image path)</param>
            <param name="label">label to display on top of the image</param>
            <returns>Created GMapMarkerImage</returns>
        </member>
        <member name="M:MyGeocachingManager.GMapWrapper.gmapMarkerWithImages(GMap.NET.WindowsForms.GMapOverlay,System.Collections.Generic.List{System.Drawing.Image},System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.String)">
            <summary>
            Create a GMapMarkerImages (marker with several possible images) 
            This marker will render a different image for each predefined zoom level:
            </summary>
            <param name="markersOverlay">Associated overlay</param>
            <param name="liste">Image list</param>
            <param name="indexZoomMicro">Value for Micro zoom</param>
            <param name="indexZoomMin">Value for Minimum zoom</param>
            <param name="indexZoomMed">Value for Medium zoom</param>
            <param name="indexZoomHigh">Value for High zoom</param>
            <param name="lat">Marker latitude</param>
            <param name="lon">Marker longitude</param>
            <param name="tooltip">Marker tooltip</param>
            <returns>Created GMapMarkerImage</returns>
        </member>
        <member name="M:MyGeocachingManager.GMapWrapper.gmapMarkerWithImages(GMap.NET.WindowsForms.GMapOverlay,System.Collections.Generic.List{System.Drawing.Image},System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double,MyGeocachingManager.Geocaching.Geocache,MyGeocachingManager.MainWindow)">
            <summary>
            Create a GMapMarkerImages (marker with several possible images) 
            This marker will render a different image for each predefined zoom level:
            </summary>
            <param name="markersOverlay">Associated overlay</param>
            <param name="liste">Image list</param>
            <param name="indexZoomMicro">Value for Micro zoom</param>
            <param name="indexZoomMin">Value for Minimum zoom</param>
            <param name="indexZoomMed">Value for Medium zoom</param>
            <param name="indexZoomHigh">Value for High zoom</param>
            <param name="lat">Marker latitude</param>
            <param name="lon">Marker longitude</param>
            <param name="geo">Associated geocache</param>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
            <returns>Created GMapMarkerImages</returns>
        </member>
        <member name="F:MyGeocachingManager.GMapWrapper.CIRCLES">
            <summary>
            Value of overlay containing circles
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GMapWrapper.DT">
            <summary>
            Value of overlay containing difficulty and terrain information
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GMapWrapper.BOOKMARKS">
            <summary>
            Value of overlay containing bookmarks
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GMapWrapper.CODES">
            <summary>
            Value of overlay containing geocache codes
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GMapWrapper.NAMES">
            <summary>
            Value of overlay containing geocache names
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GMapWrapper.STATS">
            <summary>
            Value of overlay containing geocache statistics
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GMapWrapper.AREA">
            <summary>
            Value of overlay containing areas
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GMapWrapper.ITINERARY">
            <summary>
            Value of overlay containing itineraries
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GMapWrapper.RESERVED1">
            <summary>
            Reserved value of overlay
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GMapWrapper.RESERVED2">
            <summary>
            Reserved value of overlay
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GMapWrapper.RESERVED3">
            <summary>
            Reserved value of overlay
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GMapWrapper.RESERVED4">
            <summary>
            Reserved value of overlay
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GMapWrapper.WAYPOINTS">
            <summary>
            Value of overlay containing waypoints
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GMapWrapper.MARKERS">
            <summary>
            Value of overlay containing markers (geocaches)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.GMapWrapper.CACHE">
            <summary>
            Value of overlay containing geocaches from cache
            </summary>
        </member>
        <member name="M:MyGeocachingManager.GMapWrapper.CreateOverlay(GMap.NET.WindowsForms.GMapControl,System.String,System.Boolean,System.Boolean,System.Int32@)">
            <summary>
            Create an overlay and associate it to the map control
            </summary>
            <param name="map">Associated map control</param>
            <param name="label">Overlay name</param>
            <param name="bCustom">If true, instanciate a GMapOverlayCustom,
            If false, instanciates a GMapOverlay</param>
            <param name="bForceHide">If true, forces this overlay to be hiden</param>
            <param name="index">Overlay z-index</param>
        </member>
        <member name="M:MyGeocachingManager.GMapWrapper.CreateOverlays(GMap.NET.WindowsForms.GMapControl)">
            <summary>
            Create all needed overlays and associate them to the map control:
            CACHE (GMapOverlayCustom),
            RESERVED3 (GMapOverlayCustom),
            CIRCLES (GMapOverlayCustom),
            DT (GMapOverlayCustom),
            BOOKMARKS,
            CODES (GMapOverlayCustom),
            NAMES (GMapOverlayCustom),
            STATS (GMapOverlayCustom),
            AREA,
            WAYPOINTS (GMapOverlayCustom),
            RESERVED4 (GMapOverlayCustom),
            MARKERS,
            ITINERARY
            RESERVED1 (GMapOverlayCustom),
            RESERVED2 (GMapOverlayCustom)
            </summary>
            <param name="map">map control</param>
        </member>
        <member name="M:MyGeocachingManager.GMapWrapper.HandleOverlaysVisibility(GMap.NET.WindowsForms.GMapControl,System.Int32,System.Double)">
            <summary>
            Hide overlays of a map control if needed.
            Some overlays will be hiden for low zoom levels
            </summary>
            <param name="gmap">Map control</param>
            <param name="iz">Zoom level, different from map control zoom level:
            0 if map control zoom level inferior or equal to GMapMarkerImages.VAL_ZOOM_MICRO
            1 if map control zoom level inferior or equal to GMapMarkerImages.VAL_ZOOM_MINIMUM
            2 if map control zoom level inferior or equal to GMapMarkerImages.VAL_ZOOM_MEDIUM
            3 otherwise
            <param name="zoom">Map zoom</param>
            </param>
        </member>
        <member name="M:MyGeocachingManager.GMapWrapper.HandleOverlaysVisibility(GMap.NET.WindowsForms.GMapControl)">
            <summary>
            Hide overlays of a map control if needed.
            Some overlays will be hiden for low zoom levels
            Zoom level will be automatically retrieved from map control
            </summary>
            <param name="gmap">Map control</param>
        </member>
        <member name="M:MyGeocachingManager.GMapWrapper.OnMapZoomChanged(GMap.NET.WindowsForms.GMapControl)">
            <summary>
            Handler for zoom level change.
            This handler will deal with overlays visibility, change MARKERS images according to zoom level.
            </summary>
            <param name="gmap">Map control</param>
        </member>
        <member name="T:MyGeocachingManager.IScriptV2">
            <summary>
            New plugin interface providing much more finctionnalities
            With this one a plugin can declare several functions that will 
            create the same number of menu entries in MGM
            </summary>
        </member>
        <member name="P:MyGeocachingManager.IScriptV2.Name">
            <summary>
            Get plugin name
            </summary>
        </member>
        <member name="P:MyGeocachingManager.IScriptV2.Description">
            <summary>
            Get plugin description
            </summary>
        </member>
        <member name="P:MyGeocachingManager.IScriptV2.Version">
            <summary>
            Get plugin version
            </summary>
        </member>
        <member name="P:MyGeocachingManager.IScriptV2.MinVersionMGM">
            <summary>
            Get minimum version of MGM required for this plugin
            </summary>
        </member>
        <member name="P:MyGeocachingManager.IScriptV2.Functions">
            <summary>
            Get list of plugin functions:
            Key: Function name (displayed in MGM menu entry)
            Value: Function name in source code
            </summary>
        </member>
        <member name="M:MyGeocachingManager.IScriptV2.Initialize(MyGeocachingManager.MainWindow)">
            <summary>
            alled when the plugin is initialized
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="M:MyGeocachingManager.IScriptV2.Close">
            <summary>
            alled when the plugin is closed (disposed)
            </summary>
        </member>
        <member name="T:MyGeocachingManager.IScriptV2Function">
            <summary>
            Class associated to a specific IScriptV2 plugin function
            </summary>
        </member>
        <member name="F:MyGeocachingManager.IScriptV2Function.fctName">
            <summary>
            Function name in source code
            </summary>
        </member>
        <member name="F:MyGeocachingManager.IScriptV2Function.script">
            <summary>
            Parent IScriptV2
            </summary>
        </member>
        <member name="T:MyGeocachingManager.PQDownloadHMI">
            <summary>
            form to download Pocket Queries GPX from official GC.com website
            GC.com account and password shall be provided in MGM
            </summary>
        </member>
        <member name="F:MyGeocachingManager.PQDownloadHMI._bAutoDwnloadUpdatedPQsOnStart">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.PQDownloadHMI.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Constructor
            </summary>
            <param name="daddy">reference to MainForm, for callbacks</param>
        </member>
        <member name="M:MyGeocachingManager.PQDownloadHMI.Populate(System.String,System.Boolean)">
            <summary>
            Populate list from main window, using html retrieven from GC.com
            </summary>
            <param name="htmlcontent">source code of PQ download page</param>
            <param name="diagnostic">If true, will only perform a diagnostic of the function</param>
            <returns>Number of available PQs</returns>
        </member>
        <member name="M:MyGeocachingManager.PQDownloadHMI.CreatePQ(MyGeocachingManager.MainWindow)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.PQDownloadHMI.DeletePQ(MyGeocachingManager.MainWindow,System.String)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <param name="pqurl"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.PQDownloadHMI.CreateSplitPQ(MyGeocachingManager.MainWindow,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <param name="name"></param>
            <param name="runtype"></param>
            <param name="enabledonly"></param>
            <param name="excludefound"></param>
            <param name="excludeowned"></param>
            <param name="coord"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.PQDownloadHMI.CreatePQDate(MyGeocachingManager.MainWindow)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <returns></returns>
        </member>
        <member name="F:MyGeocachingManager.PQDownloadHMI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.PQDownloadHMI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.PQDownloadHMI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.FavManager">
            <summary>
            Form to manage bookmarks
            </summary>
        </member>
        <member name="M:MyGeocachingManager.FavManager.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Contructor
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="F:MyGeocachingManager.FavManager.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.FavManager.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.FavManager.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MyGeocachingManager.FavManager.favmgrbutton1">
            <summary>
            First button (OK)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.FavManager.favmgrbutton2">
            <summary>
            Second button (Cancel)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.FavManager.label1">
            <summary>
            First label (Name)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.FavManager.label2">
            <summary>
            Second label (Latitude)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.FavManager.favmgrbutton3">
            <summary>
            Third button (center on map)
            </summary>
        </member>
        <member name="T:MyGeocachingManager.ListTextCoord">
            <summary>
            Wrapper for bookmarks
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ListTextCoord._TextCoords">
            <summary>
            List of bookmarks
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ListTextCoord._Databases">
            <summary>
            List of associated bookmark files
            </summary>
        </member>
        <member name="M:MyGeocachingManager.ListTextCoord.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:MyGeocachingManager.ListTextCoord.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">info</param>
            <param name="ctxt">context</param>
        </member>
        <member name="M:MyGeocachingManager.ListTextCoord.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization function.
            </summary>
            <param name="info">info</param>
            <param name="ctxt">context</param>
        </member>
        <member name="M:MyGeocachingManager.ListTextCoord.Serialize(System.String)">
            <summary>
            Open a file and serialize the object into it in binary format.
            EmployeeInfo.osl is the file that we are creating. 
            Note:- you can give any extension you want for your file
            If you use custom extensions, then the user will now 
              that the file is associated with your program.
            </summary>
            <param name="file">file to serialize to</param>
        </member>
        <member name="M:MyGeocachingManager.ListTextCoord.Deserialize(System.String)">
            <summary>
            Deserialize
            </summary>
            <param name="file">file to deserialize from</param>
            <returns>Deserialized instance</returns>
        </member>
        <member name="T:MyGeocachingManager.TextCoord">
            <summary>
            Bookmark definition.
            </summary>
        </member>
        <member name="F:MyGeocachingManager.TextCoord._Lon">
            <summary>
            Bookmark longitude
            </summary>
        </member>
        <member name="F:MyGeocachingManager.TextCoord._Lat">
            <summary>
            Bookmark latitude
            </summary>
        </member>
        <member name="F:MyGeocachingManager.TextCoord._Name">
            <summary>
            Bookmark name
            </summary>
        </member>
        <member name="F:MyGeocachingManager.TextCoord._Uid">
            <summary>
            Bookmark unique identifier
            </summary>
        </member>
        <member name="M:MyGeocachingManager.TextCoord.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:MyGeocachingManager.TextCoord.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor
            </summary>
            <param name="info">info</param>
            <param name="ctxt">context</param>
        </member>
        <member name="M:MyGeocachingManager.TextCoord.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization function
            </summary>
            <param name="info">info</param>
            <param name="ctxt">context</param>
        </member>
        <member name="T:MyGeocachingManager.AboutBox">
            <summary>
            "About" class Form, including an easter-egg ;-)
            A Konami sequence?
            A double click on something?
            </summary>
        </member>
        <member name="M:MyGeocachingManager.AboutBox.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Constructor
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="P:MyGeocachingManager.AboutBox.TextBoxDescription">
            <summary>
            Set general description
            </summary>
        </member>
        <member name="P:MyGeocachingManager.AboutBox.AssemblyTitle">
            <summary>
            Get assembly title
            </summary>
        </member>
        <member name="P:MyGeocachingManager.AboutBox.AssemblyVersion">
            <summary>
            Assembly version of MGM
            </summary>
        </member>
        <member name="P:MyGeocachingManager.AboutBox.AssemblyDescription">
            <summary>
            Get assembly version
            </summary>
        </member>
        <member name="P:MyGeocachingManager.AboutBox.AssemblyProduct">
            <summary>
            Get assembly product
            </summary>
        </member>
        <member name="P:MyGeocachingManager.AboutBox.AssemblyCopyright">
            <summary>
            Get assembly copyright
            </summary>
        </member>
        <member name="P:MyGeocachingManager.AboutBox.AssemblyCompany">
            <summary>
            Get assembly company
            </summary>
        </member>
        <member name="F:MyGeocachingManager.AboutBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.AboutBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.AboutBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.AttributeImage">
            <summary>
            Class used for cache attributes display
            </summary>
        </member>
        <member name="F:MyGeocachingManager.AttributeImage._PictureBox">
            <summary>
            Associated picture box for this attribute
            </summary>
        </member>
        <member name="F:MyGeocachingManager.AttributeImage._Images">
            <summary>
            List of images to be used:
            - Disabled attribute
            - Enabled attribute (positive, such as "dogs allowed")
            - Enabled attribute (negative, such as "dogs NOT allowed")
            </summary>
        </member>
        <member name="F:MyGeocachingManager.AttributeImage._Index">
            <summary>
            Image index
            0 Disabled attribute
            1 Enabled attribute (positive, such as "dogs allowed")
            2 Enabled attribute (negative, such as "dogs NOT allowed")
            </summary>
        </member>
        <member name="F:MyGeocachingManager.AttributeImage._Key">
            <summary>
            Attribute key name, used to retrieve picture, translation, etc.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.CacheDetail">
            <summary>
            Main Form to display caches information, any html content, map.
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail._bInitialized">
            <summary>
            Used to indicate if the form is totally initialized
            i.e. if all its controls are initialized.
            The main driver is the WebBrowser.
            As long as this one is not initialized and loaded with a dummy document,
            we wait...
            True : initialized and ready
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail._dicoAggregateProviders">
            <summary>
            Key : prefix to identify aggregate
            ToolStripMenuItem : Associated submenu
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail._gmap">
            <summary>
            Map control used to display any map related information in the CacheDetail Form
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail.btnCacheCacheConfigure">
            <summary>
            Button to enable cachecache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail.area_PointsClicked">
            <summary>
            Current list of points that are forming an area being drawn
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail._bDoingMeasure">
            <summary>
            True if measurment is in progress
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Constructor
            </summary>
            <param name="daddy">reference to MainForm, for callback purposes</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.DisplayCenterCoord">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.cachedetail_OnMapDrag">
            <summary>
            Raise each time the map is move
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.DefinePointOfAMeasure(GMap.NET.PointLatLng)">
            <summary>
            Create or extend an existing measure by adding a new point to it
            This measure is displayed in the map control
            The measure shall contain at minimum 2 points to be drawn
            </summary>
            <param name="pt">New point of the measure</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.DefinePointOfARoute(GMap.NET.PointLatLng)">
            <summary>
            Create or extend an existing route by adding a new point to it
            This route is displayed in the map control
            The route shall contain at minimum 2 points to be drawn
            </summary>
            <param name="pt">New point of the route</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.cachedetail_OnMarkerClick(GMap.NET.WindowsForms.GMapMarker,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raised when a marker on the map is clicked
            This can add (DefinePointOfARoute) this marker to a route if we are drawing a route 
            Or this can simply call the generic process (anymap_OnMarkerClickImpl)
            </summary>
            <param name="item">Clicked marker</param>
            <param name="e">Mouse event</param>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail.MENUMAPCIRCLE">
            <summary>
            Value of entry in the map menu
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail.MENUMAPDT">
            <summary>
            Value of entry in the map menu
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail.MENUMAPCODE">
            <summary>
            Value of entry in the map menu
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail.MENUMAPNAME">
            <summary>
            Value of entry in the map menu
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail.MENUMAPBIG">
            <summary>
            Value of entry in the map menu
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail.MENUMAPSTATS">
            <summary>
            Value of entry in the map menu
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail.MENUMAPWPTS">
            <summary>
            Value of entry in the map menu
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail.MENUMAPPROVIDERS">
            <summary>
            Value of entry in the map menu
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail.MENUMAPOUTILS">
            <summary>
            Value of entry in the map menu
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail.MENUMAPSCALE">
            <summary>
            Value of entry in the map menu
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail.MENUMAPNIGHT">
            <summary>
            Value of entry in the map menu
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.TranslateForm">
            <summary>
            Called when form needs to be translated
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.ToggleCacheOnly(System.Object,System.EventArgs)">
            <summary>
            Enable / disable cache only for ALL maps display
            </summary>
            <param name="sender">sender</param>
            <param name="e">params</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.CacheTileMap(System.Object,System.EventArgs)">
            <summary>
            Add current selection of map (using ALT+Right click) to
            cache image, from zoom level 1 to zoom level max.
            </summary>
            <param name="sender">sender</param>
            <param name="e">params</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.LoadRasterImage(System.Object,System.EventArgs)">
            <summary>
            Load a raster image (.ras) and place it on overlay RESERVED3
            Format of raster file (.ras), text file of 3 lines:
            - Line 1, filename (absolute, relative or local to .ras file): Fichier "filename"
            - Line 2, upper left point for which we know coordinates in decimal: HG "X" "Y" "Latitude" "Longitude" 
            - Line 3, bottom right point for which we know coordinates in decimal degrees: BD "X" "Y" "Latitude" "Longitude" 
            Sample ras file: 
            Fichier C:\Users\spaceeye\Desktop\2015-08-11_12-07-22.jpg 
            HG 68 130 48.860586 0.995904 
            BD 1315 505 48.690882 1.852302 
            </summary>
            <param name="sender">sender</param>
            <param name="e">event arg</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.EraseRasterImage(System.Object,System.EventArgs)">
            <summary>
            Erase a previously loader raster image and refresh the map
            </summary>
            <param name="sender">sender</param>
            <param name="e">event arg</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.SetImageOpacity(System.Drawing.Image,System.Single)">
            <summary>
            Set opacity of a specified image
            </summary>  
            <param name="image">image to set opacity on</param>  
            <param name="opacity">percentage of opacity</param>  
            <returns>new image with adjusted opacity</returns>  
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.SaveMapAsBitmap(System.Object,System.EventArgs)">
            <summary>
            Will save the map as an image file
            </summary>
            <param name="sender">sender</param>
            <param name="e">event</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.CopyCenterCartoCoord(System.Object,System.EventArgs)">
            <summary>
            Will copy the map center coordinates into the clipboard
            latitude then longitude, in decimal degress, separated by a space
            </summary>
            <param name="sender">sender</param>
            <param name="e">event</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.CenterCartoOnCoord(System.Object,System.EventArgs)">
            <summary>
            Will ask user to enter coordinates on which map will be centered
            </summary>
            <param name="sender">sender</param>
            <param name="e">event</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.LocateACity(System.Object,System.EventArgs)">
            <summary>
            Will ask user a city name on which map will be centered
            </summary>
            <param name="sender">sender</param>
            <param name="e">event</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.IsRoutableProvider(GMap.NET.MapProviders.GMapProvider,System.Boolean@,System.Boolean@)">
            <summary>
            Check if a map provider is routable
            So far, only Bing and OSM are routable providers
            </summary>
            <param name="provider">Provider to check</param>
            <param name="bRoutable">True if the provider is routable</param>
            <param name="bDurationAvailable">True if the provider will give a route duration (always false)</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.EnableOrNotRouting">
            <summary>
            Based on the provider "routability" (IsRoutableProvider), will activate / deactivate all routing relating functions 
            Legacy, does not perform ANYTHING
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.EmptyAllDecorationOverlays">
            <summary>
            Remove all decoration markers from map :
            - Statistics markers
            - Proximity circles
            - Difficulty and terrain
            - Cache codes
            - Cache names
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.EmptyRouteMarkers">
            <summary>
            Remove all routes and associated markers (route tooltips) from map
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.EmptyMeasureMarkers">
            <summary>
            Remove all measure and associated markers (measure tooltips) from map
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.EmptyAreaMarkers">
            <summary>
            Remove all area and associated markers (area tooltips) from map
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.EmptyStatsMarkers">
            <summary>
            Remove decoration markers from map :
            - Statistics markers
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.EmptyCircledDTCodeNameMarkers">
            <summary>
            Remove decoration markers from map :
            - Proximity circles
            - Difficulty and terrain
            - Cache codes
            - Cache names
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.gmap_OnMapZoomChanged">
            <summary>
            Triggered when zoom changed on map control
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.LoadPageTextDefault">
            <summary>
            Load a default blank page on the WebBrowser
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.LoadPageText(System.String,System.String,System.Boolean)">
            <summary>
            Load a page on the WebBrowser
            </summary>
            <param name="title">Page title</param>
            <param name="text">Text content (can be HTML)</param>
            <param name="bShow">True if page shall be shown</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.LoadPageCache(MyGeocachingManager.Geocaching.Geocache,System.Boolean,MyGeocachingManager.OfflineCacheData,System.Boolean,System.Boolean)">
            <summary>
            Display a cache in the WebBrowser. 
            </summary>
            <param name="geo">Geocache object</param>
            <param name="bUseKm">True if distance unit is Kilometer, False if Miles</param>
            <param name="ocd">Associated OCD object</param>
            <param name="bUseOfflineData">True if display cache in offline mode (using offline data)</param>
            <param name="bForceDisplayFromGPX">True if display cache based on GPX data and not on GC.com</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.LoadPage(System.String,System.String)">
            <summary>
            Display a webpage in the WebBrowser
            Call LoadPageTag with obj = null
            </summary>
            <param name="title">Page title</param>
            <param name="url">Page URL</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.LoadPageTag(System.String,System.String,System.Object)">
            <summary>
            Display a webpage in the WebBrowser
            </summary>
            <param name="title">Page title</param>
            <param name="url">Page URL</param>
            <param name="obj">Object stored in Tag attribute of the page</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.ClosePage(System.Windows.Forms.TabPage)">
            <summary>
            Close a TabPage
            </summary>
            <param name="page">TabPage to close</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.CloseCacheMap">
            <summary>
            Close map display
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.DisplayCacheMap(System.Double,System.Double)">
            <summary>
            Display map, center on coordinates
            </summary>
            <param name="lat">center latitude</param>
            <param name="lon">center longitude</param>
            <returns>tabpage of maps</returns>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.SelectAreaDrawingMode">
            <summary>
            Activate area drawing mode
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.DefineAreaFromPtsList(System.Collections.Generic.List{GMap.NET.PointLatLng},System.Int32)">
            <summary>
            Draw an area on map using provided points
            </summary>
            <param name="pts">List of points to draw</param>
            <param name="zoom">Zoom level of map (will change existing map zoom level)</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.FinishAnyExistingEdition(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Terminate polygon edition (Area definition)
            </summary>
            <param name="e">Mouse event</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.cachedetail_OnMapClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Triggered when map is clicked, in particular during any edition (route, area)
            </summary>
            <param name="e">mouse event</param>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.CacheDetail.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheDetail.tabControlCD">
            <summary>
            Custom tab control element, refers. to TabControlEx
            </summary>
        </member>
        <member name="T:MyGeocachingManager.CacheFilter">
            <summary>
            Standard filter, used in MGM. Contains all filterable Geocache elements.
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter.VERSION_FILTER">
            <summary>
            Actual version of filter. Not used in any processing
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._version">
            <summary>
            Version of the instanced object (can be different from VERSION_FILTER for older filter deserialized)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._name">
            <summary>
            Name of the filter
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._containers">
            <summary>
            List of containers we want to keep
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._types">
            <summary>
            List of sizes we want to keep
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._distMin">
            <summary>
            Minimum distance from home for a cache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._distMax">
            <summary>
            Maximum distance from home for a cache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._avail">
            <summary>
            Availability of a cache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._archi">
            <summary>
            Archived status of a cache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bOwned">
            <summary>
            Owned by user
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFound">
            <summary>
            Found by user
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._dMin">
            <summary>
            Minimum difficulty for a cache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._dMax">
            <summary>
            Maximum difficulty for a cache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._tMin">
            <summary>
            Minimum terrain for a cache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._tMax">
            <summary>
            Maximum terrain for a cache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._attributes">
            <summary>
            List of attributes we want to keep
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._attributesexcl">
            <summary>
            List of attributes we want to exclude
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterSize">
            <summary>
            Indicates if we shall perform filtering on Size
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterType">
            <summary>
            Indicates if we shall perform filtering on Type of cache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterDistance">
            <summary>
            Indicates if we shall perform filtering on distance from home
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterStatus">
            <summary>
            Indicates if we shall perform filtering on cache status
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterDifficulty">
            <summary>
            Indicates if we shall perform filtering on difficulty
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterTerrain">
            <summary>
            Indicates if we shall perform filtering on terrain
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterOwner">
            <summary>
            Indicates if we shall perform filtering on caches owned
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterOwnerDisplay">
            <summary>
            If true, display with existing caches ALL caches satisfying status and availability filter
            If false, excludes ONLY caches satisfying status and availability filter
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterAttribute">
            <summary>
            Indicates if we shall perform filtering on attributes present
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterAttributeAllOfThem">
            <summary>
            If true, all provided attributes shall be present
            If false, at least one attribute shall be present
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterAttributeOut">
            <summary>
            Indicates if we shall perform filtering on attributes not present
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterAttributeOutAllOfThem">
            <summary>
            If true, all provided attributes shall be not present
            If false, at least one attribute shall be not present
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bOnlyManualSelection">
            <summary>
            If true, only manually selected caches will be displayed (filter is inactive)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bContainsTBGC">
            <summary>
            Indicates if we shall perform filtering on TB/Geocoins presence
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterArea">
            <summary>
            Indicates if we shall perform filtering on caches contained within an area
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterCountryState">
            <summary>
            Indicates if we shall perform filtering on Country and state of a cache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._sCountry">
            <summary>
            Country value of a cache to be filtered 
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._sState">
            <summary>
            State (from Country) value of a cache to be filtered
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._iNameType">
            <summary>
            Type of filter to use for the provided text name in _name
            1: Name of cache
            2: Owner
            3: GC Code
            4: Tag 
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._description">
            <summary>
            Name of the filter
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._descriptionDetails">
            <summary>
            Details on the filter (free field)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bToIgnore">
            <summary>
            true if this filter shall be ignored
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._filename">
            <summary>
            filename associated to the serialized filter
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterNear">
            <summary>
            Indicates if we shall perform filtering on caches based on proximity with coordinates
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._distMaxNear">
            <summary>
            Maximum distance between cache and reference point for Near filter (_bFilterNear)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._dLatNear">
            <summary>
            Latitude of reference point for Near filter (_bFilterNear) 
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._dLonNear">
            <summary>
            Longitude of reference point for Near filter (_bFilterNear)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterCreationDate">
            <summary>
            Indicates if we shall perform filtering on creation date
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterLastLogDate">
            <summary>
            Indicates if we shall perform filtering on last log date
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._iNbDaysCreation">
            <summary>
            Number days since creation of a cache (used by _bFilterCreationDate)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._iNbDaysLastLog">
            <summary>
            Number days since last log of a cache (used by _bFilterLastLogDate)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bIsCreationInferiorOrEqual">
            <summary>
            If true, date of creation shall be inferior or equal to _iNbDaysCreation
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bIsLastLogInferiorOrEqual">
            <summary>
            If true, date of last log shall be inferior or equal to _iNbDaysLastLog
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterFavorites">
            <summary>
            Indicates if we shall perform filtering on favorites
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._iNbFavorites">
            <summary>
            Number favorites of a cache (used by _bFilterFavorites)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bIsFavoritesSuperiorOrEqual">
            <summary>
            If true, favorites shall be superior or equal to _iNbFavorites
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bFilterPopularity">
            <summary>
            Indicates if we shall perform filtering on Popularity
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._dPopularity">
            <summary>
            Number popularity of a cache (used by _bFilterPopularity)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._bIsPopularitySuperiorOrEqual">
            <summary>
            If true, favorites shall be superior or equal to _dPopularity
            </summary>
        </member>
        <member name="F:MyGeocachingManager.CacheFilter._ratingSimplePopularity">
            <summary>
            If true, comparison will be made against rating simple of a cache (Geocaching value)
            If false, comparison will be made against complexe rating of a cache (Lower bound of Wilson score confidence interval for a Bernoulli parameter, Project-GC value)
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheFilter.#ctor">
            <summary>
            Default constructor (initializes attributes)
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheFilter.ToSQLSelect(System.Int32)">
            <summary>
            Return an SQL select request using for supported part of the filter
            </summary>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.CacheFilter.IsAreaDefined">
            <summary>
            Indicates if area for filter is defined
            </summary>
            <returns>true if area used for filter is defined</returns>
        </member>
        <member name="M:MyGeocachingManager.CacheFilter.GetArea">
            <summary>
            return area used for filter
            </summary>
            <returns>all the points coordinates composing the area</returns>
        </member>
        <member name="M:MyGeocachingManager.CacheFilter.GetAreaZoom">
            <summary>
            zoom level at which area was created (legacy) 
            </summary>
            <returns>zoom level (integer as an string)</returns>
        </member>
        <member name="M:MyGeocachingManager.CacheFilter.SetAreaZoom(System.String)">
            <summary>
            defines zoom level at which area was created
            </summary>
            <param name="zoom">zoom level (integer as an string)</param>
        </member>
        <member name="M:MyGeocachingManager.CacheFilter.GetAreaArray">
            <summary>
            return area used for filter
            </summary>
            <returns>all the points coordinates composing the area</returns>
        </member>
        <member name="M:MyGeocachingManager.CacheFilter.GetAreaArrayGMapNET">
            <summary>
            return area used for filter, format used by GMap.Net
            </summary>
            <returns>all the points coordinates composing the area</returns>
        </member>
        <member name="M:MyGeocachingManager.CacheFilter.ResetArea">
            <summary>
            Reset (empty) area used for filter
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheFilter.DefineArea(System.String)">
            <summary>
            Defines an area for filter
            </summary>
            <param name="atext">all the points coordinates composing the new area</param>
            <returns>true if area is valid (at least 3 points)</returns>
        </member>
        <member name="M:MyGeocachingManager.CacheFilter.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor
            Performs version control
            </summary>
            <param name="info">info</param>
            <param name="ctxt">context</param>
        </member>
        <member name="M:MyGeocachingManager.CacheFilter.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization function
            </summary>
            <param name="info">info</param>
            <param name="ctxt">context</param>
        </member>
        <member name="M:MyGeocachingManager.CacheFilter.CreateClone">
            <summary>
            Clone current instance and properly copies filter information
            </summary>
            <returns>new cloned instance</returns>
        </member>
        <member name="M:MyGeocachingManager.CacheFilter.Serialize(System.String)">
            <summary>
            Open a file and serialize the object into it in binary format.
            EmployeeInfo.osl is the file that we are creating. 
            Note: you can give any extension you want for your file
            If you use custom extensions, then the user will now 
              that the file is associated with your program.
            </summary>
            <param name="file">file to serialize to</param>
        </member>
        <member name="M:MyGeocachingManager.CacheFilter.Deserialize(System.String)">
            <summary>
            Deserialize a filter
            </summary>
            <param name="file">serialized filter file</param>
            <returns>Instance of the deserialized filter</returns>
        </member>
        <member name="M:MyGeocachingManager.CacheFilter.ToBeDisplayed(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check if a cache shall be displayed based on filter definition
            </summary>
            <param name="cache">Cache to be checked</param>
            <returns>true if cache shall be displayed (passes the filter definition)</returns>
        </member>
        <member name="M:MyGeocachingManager.CacheFilter.DefaultFilter">
            <summary>
            Set default values for filter
            This filter will authorize any cache
            </summary>
        </member>
        <member name="M:MyGeocachingManager.CacheFilter.ToString">
            <summary>
            ToString  implementation for this class
            </summary>
            <returns>String version of the object</returns>
        </member>
        <member name="T:MyGeocachingManager.LanguageItem">
            <summary>
            Class definining a language translation in MGM
            </summary>
        </member>
        <member name="F:MyGeocachingManager.LanguageItem._path">
            <summary>
            Path to translation file
            </summary>
        </member>
        <member name="F:MyGeocachingManager.LanguageItem._name">
            <summary>
            Language name in target language (i.e. Français)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.LanguageItem._ename">
            <summary>
            Language name in English (i.e. French)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.LanguageItem._locale">
            <summary>
            Language locale (i.e. fr-FR)
            </summary>
        </member>
        <member name="T:MyGeocachingManager.ImageExportDialog">
            <summary>
            Form to select Image export options
            </summary>
        </member>
        <member name="M:MyGeocachingManager.ImageExportDialog.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Constructor
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="F:MyGeocachingManager.ImageExportDialog.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.ImageExportDialog.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:MyGeocachingManager.ImageExportDialog.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ImageExportDialog.button2">
            <summary>
            Cancel button
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ImageExportDialog.button1">
            <summary>
            OK button
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ImageExportDialog.groupBox1">
            <summary>
            Export target
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ImageExportDialog.radioButton2imgexport">
            <summary>
            Export target : Geocacoded
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ImageExportDialog.radioButton1imgexport">
            <summary>
            Export target : Garmin
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ImageExportDialog.textBoxStatus">
            <summary>
            Detail on export target
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ImageExportDialog.radioButton3imgexport">
            <summary>
            Export target : Magellan Explorist GC
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ImageExportDialog.groupBox2">
            <summary>
            Limit export to spoilers
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ImageExportDialog.radioButton5imgexport">
            <summary>
            Limit export to spoilers : no
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ImageExportDialog.radioButton6imgexport">
            <summary>
            Limit export to spoilers : yes
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ImageExportDialog.groupBox3">
            <summary>
            Filter spoilers using keywords
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ImageExportDialog.radioButton4imgexport">
            <summary>
            Filter spoilers using keywords : no
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ImageExportDialog.radioButton7imgexport">
            <summary>
            Filter spoilers using keywords : yes
            </summary>
        </member>
        <member name="F:MyGeocachingManager.ImageExportDialog.cbSpoilerGarminNormalimgexport">
            <summary>
            Indicate if Garmin spoilers shall be considered as normal pictures
            true: image is visible by default on the Garmin device
            </summary>
        </member>
        <member name="T:MyGeocachingManager.HtmlExportDialog">
            <summary>
            Form to select options for HTML export
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HtmlExportDialog.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Constructor
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="F:MyGeocachingManager.HtmlExportDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.HtmlExportDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.HtmlExportDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HtmlExportDialog.radioButton2htmlexport">
            <summary>
            Show cache description : no
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HtmlExportDialog.button2">
            <summary>
            Cancel button
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HtmlExportDialog.radioButton1htmlexport">
            <summary>
            Show cache description : yes
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HtmlExportDialog.groupBox1">
            <summary>
            Show cache description
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HtmlExportDialog.button1">
            <summary>
            OK button
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HtmlExportDialog.groupBox2">
            <summary>
            Create a map of caches
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HtmlExportDialog.radioButton3htmlexport">
            <summary>
            Create a map of caches : no
            </summary>
        </member>
        <member name="F:MyGeocachingManager.HtmlExportDialog.radioButton4htmlexport">
            <summary>
            Create a map of caches : yes
            </summary>
        </member>
        <member name="T:MyGeocachingManager.IScript">
            <summary>
            Legacy plugin interface.
            Provides low functionnalities.
            Deprecated.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.IScript.Name">
            <summary>
            Get plugin name
            </summary>
        </member>
        <member name="P:MyGeocachingManager.IScript.Description">
            <summary>
            Get plugin description
            </summary>
        </member>
        <member name="M:MyGeocachingManager.IScript.Initialize(MyGeocachingManager.MainWindow)">
            <summary>
            Called when the plugin is initialized
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="M:MyGeocachingManager.IScript.DoIt">
            <summary>
            Method that is called when the plugin is click in MGM
            </summary>
            <returns>Returns true if command executed without any exception (exceptions are caught)</returns>
        </member>
        <member name="M:MyGeocachingManager.IScript.Close">
            <summary>
            Called when the plugin is closed (disposed)
            </summary>
        </member>
        <member name="T:MyGeocachingManager.SpoilerKeywords">
            <summary>
            Form to configure images and spoiler download:
            - Configure list of spoilers keywords
            - Configure delay between two images download
            - Configure usage of keywords for spoiler detection
            </summary>
        </member>
        <member name="F:MyGeocachingManager.SpoilerKeywords._sSpoilerDefaultKeywords">
            <summary>
            List of spoiler keywords, separated by ¤
            </summary>
        </member>
        <member name="M:MyGeocachingManager.SpoilerKeywords.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Construction
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="M:MyGeocachingManager.SpoilerKeywords.GetKeywords">
            <summary>
            Return list of spoiler keywords, separated by a ¤
            Case insensitive
            </summary>
            <returns>list of spoiler keywords, separated by a ¤</returns>
        </member>
        <member name="M:MyGeocachingManager.SpoilerKeywords.ConsiderSpoilerKeywords">
            <summary>
            Check if keywords shall be considered for spoiler detection
            checked : spoiler keywords will be used
            </summary>
        </member>
        <member name="F:MyGeocachingManager.SpoilerKeywords.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.SpoilerKeywords.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.SpoilerKeywords.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MyGeocachingManager.SpoilerKeywords.button2">
            <summary>
            OK button
            </summary>
        </member>
        <member name="F:MyGeocachingManager.SpoilerKeywords.button1">
            <summary>
            Cancel button
            </summary>
        </member>
        <member name="F:MyGeocachingManager.SpoilerKeywords.textBox1spoilerkw">
            <summary>
            Textbox to enter a new keyword
            </summary>
        </member>
        <member name="F:MyGeocachingManager.SpoilerKeywords.checkBox1spoilerkw">
            <summary>
            If checked, spoiler keywords will be used
            </summary>
        </member>
        <member name="F:MyGeocachingManager.SpoilerKeywords.comboBox1spoilerkw">
            <summary>
            Combo to select delay between two images download
            </summary>
        </member>
        <member name="F:MyGeocachingManager.SpoilerKeywords.checkBoxGallery">
            <summary>
            
            </summary>
        </member>
        <member name="T:MyGeocachingManager.StartupFilesConfig">
            <summary>
            Form to configure list of files that will be loaded on MGM startup
            It can also be used to load a subpart of all available GPX files
            </summary>
        </member>
        <member name="F:MyGeocachingManager.StartupFilesConfig._FilesToload">
            <summary>
            List of files to load, separated by ;
            </summary>
        </member>
        <member name="M:MyGeocachingManager.StartupFilesConfig.GetKeyFromFilename(System.String,System.String)">
            <summary>
            Return key associated to a file
            </summary>
            <param name="pathdb">Path where GPX are stored</param>
            <param name="filename">File</param>
            <returns>key associated to a file</returns>
        </member>
        <member name="M:MyGeocachingManager.StartupFilesConfig.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Constructor
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="M:MyGeocachingManager.StartupFilesConfig.GetListOfExcludedFiles">
            <summary>
            Return a list of excluded files (i.e. that will not be loaded)
            </summary>
            <returns>List of excluded files (i.e. that will not be loaded)</returns>
        </member>
        <member name="F:MyGeocachingManager.StartupFilesConfig.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.StartupFilesConfig.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.StartupFilesConfig.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.TagManager">
            <summary>
            Form to manage tags (labels) on caches
            </summary>
        </member>
        <member name="M:MyGeocachingManager.TagManager.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Constructor
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="F:MyGeocachingManager.TagManager.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.TagManager.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.TagManager.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MyGeocachingManager.TagManager.label1">
            <summary>
            Label of text field
            </summary>
        </member>
        <member name="F:MyGeocachingManager.TagManager.button2tagmgr">
            <summary>
            Cancel button
            </summary>
        </member>
        <member name="F:MyGeocachingManager.TagManager.button1tagmgr">
            <summary>
            OK button
            </summary>
        </member>
        <member name="T:MyGeocachingManager.SpecialFeatures.SpecialFeaturesMgt">
            <summary>
            Description of SpecialFeaturesMgt.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.SpecialFeatures.SpecialFeaturesMgt.AreSpecialFeaturesEnabled">
            <summary>
            Handle special features
            </summary>
            <returns>true if they are enabled</returns>
        </member>
        <member name="M:MyGeocachingManager.SpecialFeatures.SpecialFeaturesMgt.GenerateKey(System.String)">
            <summary>
            
            </summary>
            <param name="owner"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.SpecialFeatures.SpecialFeaturesMgt.EnterSpecialFeaturesKey(MyGeocachingManager.MainWindow)">
            <summary>
            
            </summary>
            <param name="daddy"></param>
            <returns></returns>
        </member>
        <member name="T:MyGeocachingManager.DownloadWorker">
            <summary>
            Worker used to pilot caches images / spoilers download
            </summary>
        </member>
        <member name="F:MyGeocachingManager.DownloadWorker.bGetFromGallery">
            <summary>
            If true, image will ge grabed from complete caches gallery
            </summary>
        </member>
        <member name="F:MyGeocachingManager.DownloadWorker.threadprogress">
            <summary>
            Associated ThreadProgress object for notification and abort
            </summary>
        </member>
        <member name="F:MyGeocachingManager.DownloadWorker.ocds">
            <summary>
            List of OfflineCacheData to download
            </summary>
        </member>
        <member name="F:MyGeocachingManager.DownloadWorker.keywordsspoiler">
            <summary>
            List of spoilers keywords to use to detect spoiler images
            </summary>
        </member>
        <member name="F:MyGeocachingManager.DownloadWorker.delay">
            <summary>
            Delay in secondes between two downloads
            </summary>
        </member>
        <member name="F:MyGeocachingManager.DownloadWorker.cookieJar">
            <summary>
            GC account cookie, can be null (anonymous download)
            </summary>
        </member>
        <member name="M:MyGeocachingManager.DownloadWorker.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Default constructor
            </summary>
            <param name="daddy">Mainwindow</param>
        </member>
        <member name="M:MyGeocachingManager.DownloadWorker.GetImageFromParsing(MyGeocachingManager.OfflineCacheData)">
            <summary>
            Fetch geocache base on ocd._Code and download HTML page to list images to grab
            Images will be stored in ocd._ImageFilesSpoilers
            </summary>
            <param name="ocd">OCD object to complete</param>
        </member>
        <member name="M:MyGeocachingManager.DownloadWorker.GetImageFromParsingImpl(MyGeocachingManager.OfflineCacheData,System.Boolean,System.String)">
            <summary>
            Fetch geocache base on ocd._Code and download HTML page to list images to grab
            Images will be stored in ocd._ImageFilesSpoilers
            </summary>
            <param name="ocd">OCD object to complete</param>
            <param name="bUseKeyWords">If true, spoilers will be downloaded based on keywords provided in keywordsspoiler</param>
            <param name="htmlCode">Cache html page</param>
        </member>
        <member name="M:MyGeocachingManager.DownloadWorker.DoWork">
            <summary>
            This method will be called when the thread is started.
            Perform download
            </summary>
        </member>
        <member name="M:MyGeocachingManager.DownloadWorker.RequestStop">
            <summary>
            Request stop / abort of the download worker.
            Worker will stop as soon as possible
            </summary>
        </member>
        <member name="T:MyGeocachingManager.MainWindow">
            <summary>
            Main form for MGM
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.AssemblySubVersion">
            <summary>
            Assembly subversion, used for beta version only
            Usually is RCx with x on 1 digit
            Refers to release candidate
            If null, official released version of MGM
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._geocachingConstants">
            <summary>
            Holds all various geocaching constants
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._shortcutToolstrip">
            <summary>
            Toolbar for shortcuts
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._cookieJar">
            <summary>
            Saved authentication cookie
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._dbmgm">
            <summary>
            MGMDataBase
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.UserIsPremium">
            <summary>
            Indicates if user is premium
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._bForceClose">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.GROUNDSPEAK_NAMESPACE">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._od">
            <summary>
            List of offline data for caches
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._odfile">
            <summary>
            path to OfflineData file
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._ignoreList">
            <summary>
            List of ignore GC code
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._ignorefile">
            <summary>
            Path to ignore file
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.bOfflineDownloadInProgress">
            <summary>
            true if image download is in progress
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._bUseFilter">
            <summary>
            True if filter used
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._filterOverride">
            <summary>
            Custom filter to override _filter
            </summary>
        </member>
        <member name="P:MyGeocachingManager.MainWindow.Filter">
            <summary>
            Current filter
            </summary>
        </member>
        <member name="P:MyGeocachingManager.MainWindow.FilterOrOverride">
            <summary>
            Current filter or override
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._cacheStatus">
            <summary>
            List of cache status
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._profileMgr">
            <summary>
            List of profiles
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._caches">
            <summary>
            list of currently loaded caches
            key: cache GC code
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._waypointsLoaded">
            <summary>
            list of currently loaded waypoints
            key: waypoint name
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._waypointsMGM">
            <summary>
            list of currently loaded waypoints, specifically created by MGM
            key: waypoint name
            </summary>
        </member>
        <member name="P:MyGeocachingManager.MainWindow.HomeLat">
            <summary>
            Get Home Latitude
            </summary>
        </member>
        <member name="P:MyGeocachingManager.MainWindow.HomeLon">
            <summary>
            Get Home Longitude
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._listViewCaches">
            <summary>
            List of currently displayed EXListViewItem objects
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._cacheDetail">
            <summary>
            Reference to CacheDetail instanced object
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._cachecache">
            <summary>
            Cachecache DB
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._imgMenus">
            <summary>
            /
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._listExistingTags">
            <summary>
            List of available tags for cache tagging
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._bUseKm">
            <summary>
            True if distance will be displayed in Kilometers
            False if distance will be displayed in Miles
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._bUseGCPopularity">
            <summary>
            True: cache popularity uses GC.com formula (siple one)
            False: Popularity of geocache, based on Project-GC formula (Lower bound of Wilson score confidence interval for a Bernoulli parameter)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._dConvKmToMi">
            <summary>
            Constant to convert kilometers to miles (0.621371192)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._iMinCacheIdMGM">
            <summary>
            Min cacheid for MGM generated caches
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._iCacheId">
            <summary>
            Used for all generated caches
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._iListScriptV2">
            <summary>
            List of loaded and compiled plugins (V2 format)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._ThreadProgressBarTitle">
            <summary>
            Title of currently displayed progress bar
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._ThreadProgressBar">
            <summary>
            Reference to current progress bar
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetInternetStatus">
            <summary>
            Return internet status
            Shall be previously updated with checkinternetaccess if needed
            </summary>
            <returns>true if internet available</returns>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._iNbModifiedCaches">
            <summary>
            Number of modified caches still unsaved in MGM
            </summary>
        </member>
        <member name="P:MyGeocachingManager.MainWindow.IsLinux">
            <summary>
            True if platform if Linux
            False if Windows (or Mac OS ???)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._menuEntriesRequiringSpecialFeatures">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetTooltipsTranslator">
            <summary>
            returns a reference to a tooltips translator
            </summary>
            <returns>reference to a tooltips translator</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetTranslator">
            <summary>
            returns a reference to a language translator
            </summary>
            <returns>reference to a language translator</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetTranslatorStatic">
            <summary>
            returns a reference to a language translator
            </summary>
            <returns>reference to a language translator</returns>
        </member>
        <member name="P:MyGeocachingManager.MainWindow.LvGeocaches">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateThreadProgressBar(System.Int32)">
            <summary>
            Creates a progress bar for long processing
            </summary>
            <param name="delay"></param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateThreadProgressBarEnh">
            <summary>
            Creates an enhanced progress bar for long processing
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.KillThreadProgressBar">
            <summary>
            Kill current progress bar
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.KillThreadProgressBarEnh">
            <summary>
            Kill current enhanced progress bar
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.MSG(System.Object)">
            <summary>
            Simple methode to disply an object (uses MyMessageBox)
            </summary>
            <param name="o">object to display</param>
        </member>
        <member name="T:MyGeocachingManager.MainWindow.MenuItemConstraintType">
            <summary>
            /
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.MenuItemConstraintType.REQUIRE_INTERNET">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.MenuItemConstraintType.REQUIRE_DISPLAYED_CACHES">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.MenuItemConstraintType.REQUIRE_SELECTED_CACHES">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.MenuItemConstraintType.REQUIRE_SELECTED_ONE_CACHE">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.#ctor(System.String)">
            <summary>
            Constructor, performs all intialisations
            </summary>
            <param name="dotnet">highest installed .net version</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.UpdateMapProviderImpl(GMap.NET.WindowsForms.GMapControlCustom)">
            <summary>
            Change map provider, update configuration and map controls
            </summary>
            <param name="map">map control</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ActivateDebugBtn(System.Boolean)">
            <summary>
            Activates / Deactivate debug and information buttons
            FOR DEV ONLY!!!
            You never know what's behind the button and what will occur... You're warned!
            </summary>
            <param name="bActivate">if true, displays the buttons, false will hide the buttons</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.DisplayHideDebugBtn">
            <summary>
            Toggle information / debug button visibility
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.UpdateMenuWithDB">
            <summary>
            Update File menu with existing caches databases
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.UpdateHMIForGC">
            <summary>
            Enable GC.com menu if password defined
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateListStringTags">
            <summary>
            Create list of tags
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CheckInternetAccess">
            <summary>
            Check if internet access is available
            </summary>
            <returns>True if internet is accessible</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.KillSplashAndShow">
            <summary>
            Kill splashscreen and show main window
            Taadaaaa!
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateAttributeTranslationKey(System.String)">
            <summary>
            Create translation key of a cache attribute
            </summary>
            <param name="attributeValue">cache attribute name</param>
            <returns>key usable with translation manager</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.UpdateConfFile(System.String,System.String)">
            <summary>
            Update a configuration entry in the configuration file
            </summary>
            <param name="entry">entry to update</param>
            <param name="value">new value</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetInternalDataPath">
            <summary>
            Return path where data are stored
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetUserDataPath">
            <summary>
            Return path where user data are stored
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetDBDataFile">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetResourcesDataPath">
            <summary>
            Return path where resources data are stored
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.TranslateFilterNearKmMi">
            <summary>
            Translate "Near" filter, based on Km or Mi usage
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateTSMI(System.String,System.Drawing.Image,System.Action{System.Object,System.EventArgs},System.Boolean)">
            <summary>
            Create a ToolStripMenuItem using a translation key and an event handler
            Mandatory method to handle tooltips
            </summary>
            <param name="keytrans">Translation key</param>
            <param name="img">image</param>
            <param name="target">event handler</param>
            <param name="enabled">enable or not menu item</param>
            <returns>ToolStripMenuItem</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateTSMI(System.String,System.Drawing.Image,System.Action{System.Object,System.EventArgs})">
            <summary>
            Create a ToolStripMenuItem using a translation key and an event handler
            Mandatory method to handle tooltips
            </summary>
            <param name="keytrans">Translation key</param>
            <param name="img">image</param>
            <param name="target">event handler</param>
            <returns>ToolStripMenuItem</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateTSMI(System.String,System.Action{System.Object,System.EventArgs})">
            <summary>
            Create a ToolStripMenuItem using a translation key and an event handler
            Mandatory method to handle tooltips
            </summary>
            <param name="keytrans">Translation key</param>
            <param name="target">event handler</param>
            <returns>ToolStripMenuItem</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateTSMI(System.String,System.Action{System.Object,System.EventArgs},System.Boolean)">
            <summary>
            Create a ToolStripMenuItem using a translation key and an event handler
            Mandatory method to handle tooltips
            </summary>
            <param name="keytrans">Translation key</param>
            <param name="target">event handler</param>
            <param name="enabled">enable or not menu item</param>
            <returns>ToolStripMenuItem</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateTSMI(System.String)">
            <summary>
            Create a ToolStripMenuItem using a translation key
            Mandatory method to handle tooltips
            </summary>
            <param name="keytrans">Translation key</param>
            <returns>ToolStripMenuItem</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Handler to process key pressed
            Deals with CTRL+A to select all caches
            </summary>
            <param name="msg">message</param>
            <param name="keyData">key data</param>
            <returns>true</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.RefreshMenuEnableStatus">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.RemoveAssociationOcdCache(System.String)">
            <summary>
            Remove an OCD from OfflineData
            </summary>
            <param name="code">cache code</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.RemoveAssociationOcdCache(System.String,MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Remove an OCD from OfflineData and cross reference in Geocache object
            </summary>
            <param name="code">cache code</param>
            <param name="cache">geocache</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.AssociateOcdCache(System.String,MyGeocachingManager.OfflineCacheData,MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Associate an OCD object to a cache
            </summary>
            <param name="code">cache code</param>
            <param name="ocd">OCD object</param>
            <param name="cache">cache</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.getImageFromIndex(System.Int32)">
            <summary>
            Returns image from index (from _listImagesSized)
            </summary>
            <param name="index">image index</param>
            <returns>image</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.getIndexImages(System.String)">
            <summary>
            Returns image index from its key (from _listImagesSized)
            If key is not found, return [Fail] image index
            </summary>
            <param name="key">image key</param>
            <returns>image index</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetImageSized(System.String)">
            <summary>
            Returns image index from its key (from _listImagesSized)
            </summary>
            <param name="key">image key</param>
            <returns>image</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetVisualEltFromCacheCode(System.String)">
            <summary>
            Returns listviewitem from Geocache code
            </summary>
            <param name="code">geocache code</param>
            <returns>listviewitem from Geocache code, can be null</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.RemoveVisualElt(SpaceEyeTools.EXControls.EXImageListViewItem)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.BuildListViewCache">
            <summary>
            Create all list view cache elements and populate the list
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.BuildListViewCache(System.Collections.Generic.List{MyGeocachingManager.Geocaching.Geocache})">
            <summary>
            Create all list view cache elements and populate the list
            </summary>
            <param name="caches">caches</param>
            <returns>list of created items</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.RatingToImageStar(System.Double)">
            <summary>
            Converts rating in percentage to image
            Used to display popularity
            </summary>
            <param name="r">rating in percentage (from 0.0 to 1.0)</param>
            <returns>star image key</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetListImageTags(MyGeocachingManager.OfflineCacheData)">
            <summary>
            Get all tags from an OCD
            </summary>
            <param name="ocd">OCD</param>
            <returns>list of tags</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetImageTag(System.String)">
            <summary>
            Convert a tag into an image
            </summary>
            <param name="tag">tag</param>
            <returns>image</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ConvertOXValueToDecimal(System.String)">
            <summary>
            Converts OpenCaching double value to fixed decimale values (Geocaching compatibility)
            </summary>
            <param name="soxv">Opencaching double value</param>
            <returns>Geocaching compliant value</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.PopulateListViewCacheAddList(System.Collections.Generic.List{SpaceEyeTools.EXControls.EXImageListViewItem})">
            <summary>
            Redraw list view of caches
            </summary>
            <param name="list">List of objects to be added to the list</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.PopulateListViewCache(System.Collections.Generic.List{SpaceEyeTools.EXControls.EXListViewItem})">
            <summary>
            Redraw list view of caches
            </summary>
            <param name="forcedList">If provided, force display of these objects, otherwise (if null), recreates all objects from loaded caches</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.DisplayCacheOnMaps(MyGeocachingManager.Geocaching.Geocache,GMap.NET.WindowsForms.GMapOverlay,GMap.NET.WindowsForms.GMapOverlay,GMap.NET.WindowsForms.GMapOverlay,System.Boolean)">
            <summary>
            Display a cache on all the maps
            </summary>
            <param name="cache">cache to display</param>
            <param name="overlay">overlay for markers on map preview</param>
            <param name="overlaybigview">overlay for markers on map display</param>
            <param name="overlaywpts">overlay for waypoints on map preview</param>
            <param name="onlypureicons">if true display only pure icons</param>
            <returns>List of the two create markers if available, can be null</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.BuildCacheMapNew(System.Collections.Generic.List{MyGeocachingManager.Geocaching.Geocache})">
            <summary>
            Redraw list of caches on maps
            </summary>
            <param name="theCaches">list of caches to redraw</param>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._ID_LVPlaced">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._ID_LVTag">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetImageWithWhiteBackground(System.Boolean,System.String,System.Int32,System.Int32)">
            <summary>
            Create an image with a white background (optional) and image will be resized
            </summary>
            <param name="bEnable">If true, white background will be created, otherwise image will simply be resized</param>
            <param name="type">image key</param>
            <param name="resize1">new squared size of image</param>
            <param name="resize2">new squared size of white background</param>
            <returns>new image</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateListImageDTRed">
            <summary>
            Create static list of D/T images combinations
            </summary>
            <returns>list of D/T images combinations</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ParseImageFolderForMenus(System.String,System.String,System.Boolean)">
            <summary>
            Parse a folder, looking for images and add them to list of usable images for MENUS
            Image filename without extension will be the key to retrieve it
            </summary>
            <param name="folder">folder path</param>
            <param name="filter">image filter (e.g. "*.jpg")</param>
            <param name="bLower">if true, key will be lower case </param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ParseImageFolder(System.String,System.String,System.Boolean)">
            <summary>
            Parse a folder, looking for images and add them to list of usable images
            Image filename without extension will be the key to retrieve it
            </summary>
            <param name="folder">folder path</param>
            <param name="filter">image filter (e.g. "*.jpg")</param>
            <param name="bLower">if true, key will be lower case </param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.Log(System.Object)">
            <summary>
            Log an object into the log file (if activated)
            </summary>
            <param name="o">object to log</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.Log(System.String)">
            <summary>
            Log a string into the log file (if activated)
            </summary>
            <param name="txt">text to log</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.JoinWptsGC">
            <summary>
            Assign loaded waypoints to loaded geocaches
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ChangeCacheStatusBasedonMGM(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Check single cache status from MGM and set it to found if needed
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ChangeCacheStatusBasedonMGM">
            <summary>
            Check cache status from MGM and set it to found if needed
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.LoadGCFile(System.String,System.Collections.Generic.Dictionary{System.String,MyGeocachingManager.Geocaching.Geocache}@,System.Collections.Generic.List{MyGeocachingManager.Geocaching.Waypoint}@)">
            <summary>
            This is the heart of MGM
            Load a **GEOCACHING*** GPX file and returns a cache list
            Opencaching is NOT supported by this function
            Waypoints are DISCARDED by this function
            Loaded caches are not added to the list view by this function!
            </summary>
            <param name="f">GPX file (.gpx)</param>
            <param name="localCaches">dictionnary will be populated with caches present in the GPX file (index is cache Code). WARNING: waypoints will not be associated to geocache!</param>
            <param name="localWaypoints">list will be populated with waypoints present in the GPX file</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.LoadFile(System.String)">
            <summary>
            This is the heart of MGM
            Load a GPX file and populate cache internal database
            Loaded caches are not displayed by this function!
            </summary>
            <param name="f">GPX file (.gpx)</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.DisplayFastCacheDetail(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Display cache detail in the fast cache WebBrowser in main form
            </summary>
            <param name="geo">Geocache to display</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.DisplayDetailFromSelection(MyGeocachingManager.Geocaching.Geocache,System.Boolean)">
            <summary>
            Display cache details from a cache
            </summary>
            <param name="geo">cache to display</param>
            <param name="bUseOfflineData">If true, will use offline saved data</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.DoFilter">
            <summary>
            Execute filter
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.UpdateFilter">
            <summary>
            Update current filter from HMI
            </summary>
            <returns>true if successful update</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CompilePlugin(System.String,System.CodeDom.Compiler.CompilerResults@)">
            <summary>
            Compile a plugin
            </summary>
            <param name="sourceName">plugin source file (C# or VB#)</param>
            <param name="cr">compilation result</param>
            <returns>true if compilation succeeded</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetPlugins(System.Reflection.Assembly,System.Boolean)">
            <summary>
            Extract a plugin from the compiled assembly and add it to plugin internal list
            </summary>
            <param name="assembly">Compiled assembly</param>
            <param name="bRemoveDuplicates">if true remove duplicated plugin</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreatePluginMenu">
            <summary>
            (Re)Create the plugin menu
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetSelecteditemsAtts(System.Boolean)">
            <summary>
            Get list of selected attributes (Geocaching), to be used with CacheFilter._attributes / _attributesexcl
            </summary>
            <param name="bIn">If true, retrieve attributes that shall be present in the cache, otherwise attributes that shall NOT be present in the cache</param>
            <returns>attribute list</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.SetSelecteditemsAtts(System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Select in HIM a list of attributes (Geocaching)
            </summary>
            <param name="bIn">If true, retrieve attributes that shall be present in the cache, otherwise attributes that shall NOT be present in the cache</param>
            <param name="atts">attributes list</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CompleteSelectedCaches(System.Boolean[])">
            <summary>
            Complete informations of selected caches.
            If parameters is null, all attributes will be completed, otherwise, indicates true for attributes
            that shall be completed in the array:
            00 : All
            01 : DateCreation
            02 : Owner
            03 : Status
            04 : Difficulty
            05 : Terrain
            06 : Description
            07 : Container
            08 : Hint
            09 : Attributes
            10 : Logs
            11 : Contry
            12 : State
            13 : Statistics
            14 : Basic info (name, url, coordinates)
            15 : Personal notes
            </summary>
            <param name="parameters">
            If parameters is null, all attributes will be completed, otherwise, indicates true for attributes
            that shall be completed in the array:
            00 : All
            01 : DateCreation
            02 : Owner
            03 : Status
            04 : Difficulty
            05 : Terrain
            06 : Description
            07 : Container
            08 : Hint
            09 : Attributes
            10 : Logs
            11 : Contry
            12 : State
            13 : Statistics
            14 : Basic info (name, url, coordinates)
            15 : Personal notes
            </param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CompleteSelectedCaches(System.Collections.Generic.List{MyGeocachingManager.Geocaching.Geocache}@,System.Boolean[],System.Boolean)">
            <summary>
            Complete informations of selected caches. Impacts only the list, not MGM inner information.
            If parameters is null, all attributes will be completed, otherwise, indicates true for attributes
            that shall be completed in the array:
            00 : All
            01 : DateCreation
            02 : Owner
            03 : Status
            04 : Difficulty
            05 : Terrain
            06 : Description
            07 : Container
            08 : Hint
            09 : Attributes
            10 : Logs
            11 : Contry
            12 : State
            13 : Statistics
            14 : Basic info (name, url, coordinates)
            15 : Personal notes
            </summary>
            <param name="caches">list of caches to complete</param>
            <param name="parameters">
            If parameters is null, all attributes will be completed, otherwise, indicates true for attributes
            that shall be completed in the array:
            00 : All
            01 : DateCreation
            02 : Owner
            03 : Status
            04 : Difficulty
            05 : Terrain
            06 : Description
            07 : Container
            08 : Hint
            09 : Attributes
            10 : Logs
            11 : Contry
            12 : State
            13 : Statistics
            14 : Basic info (name, url, coordinates)
            15 : Personal notes
            /// <param name="bSilent">if true, only error messages will be displayed</param>
            </param>
            <returns>true if not aborted</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetCacheHTMLFromClientImpl(System.String,System.Net.CookieContainer)">
            <summary>
            Get HTML source of an URL, using a GC.com authentication cookie
            </summary>
            <param name="url">URL</param>
            <param name="cookieJar">GC.com authentication cookie</param>
            <returns>HTML source</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.IsPremiumCacheAndWeAreBasic(System.String)">
            <summary>
            Return true if cache is premium and we are basic
            </summary>
            <param name="html">cache html page</param>
            <returns>true if cache is premium and we are basic</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CompleteCacheFromHTML(MyGeocachingManager.Geocaching.Geocache,System.String,System.Boolean[],MyGeocachingManager.DataForStatsRetrieval,System.Boolean)">
            <summary>
            Complete a geocache by parsing the HTML source of its GC.com page
            If parameters is null, all attributes will be completed, otherwise, indicates true for attributes
            that shall be completed in the array:
            00 : All
            01 : DateCreation
            02 : Owner
            03 : Status
            04 : Difficulty
            05 : Terrain
            06 : Description
            07 : Container
            08 : Hint
            09 : Attributes
            10 : Logs
            11 : Contry
            12 : State
            13 : Statistics
            14 : Basic info (name, url, coordinates)
            15 : Personal notes
            </summary>
            <param name="geo">Geocache to complete. At least _Code SHALL be indicated</param>
            <param name="result">HTML source</param>
            <param name="parameters">
            If parameters is null, all attributes will be completed, otherwise, indicates true for attributes
            that shall be completed in the array:
            00 : All
            01 : DateCreation
            02 : Owner
            03 : Status
            04 : Difficulty
            05 : Terrain
            06 : Description
            07 : Container
            08 : Hint
            09 : Attributes
            10 : Logs
            11 : Contry
            12 : State
            13 : Statistics
            14 : Basic info (name, url, coordinates)
            15 : Personal notes
            </param>
            <param name="dataforstats">Class holding current status of completion (previously raised warning, etc.)</param>
            <param name="bDiagnostic">If true, indicates that a partial processing for diagnostic purposes will be performed</param>
            <returns>True if cache is completed successfully</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateKeyForLogSorting(MyGeocachingManager.Geocaching.CacheLog)">
            <summary>
            Create log key for sorting purposes
            </summary>
            <param name="log">Cache log</param>
            <returns>key for sorting</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.RecreateVisualElements(System.Collections.Generic.List{MyGeocachingManager.Geocaching.Geocache})">
            <summary>
            Recreate all listview cache items
            </summary>
            <param name="caches">list of caches to recreate</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.RecreateVisualElements(System.Collections.Generic.List{MyGeocachingManager.Geocaching.Geocache},System.Boolean)">
            <summary>
            Recreate all listview cache items
            </summary>
            <param name="caches">list of caches to recreate</param>
            <param name="bForceEvenIfNotDisplayed">Item will be recreated even if not currently displayed on list</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.RecreateVisualElements(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Recreate listview cache item
            </summary>
            <param name="cache">cache to recreate</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.RecreateVisualElements(MyGeocachingManager.Geocaching.Geocache,System.Boolean)">
            <summary>
            Recreate listview cache item
            </summary>
            <param name="cache">cache to recreate</param>
            <param name="bForceEvenIfNotDisplayed">Item will be recreated even if not currently displayed on list</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ModifyCacheName">
            <summary>
            Modify a cache name of selected caches based on user input
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.AddTagsToTitle">
            <summary>
            Add all cache tags before the cache name, for selected caches 
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateOverlayCircles(GMap.NET.WindowsForms.GMapControl)">
            <summary>
            Create distance circles for caches on map display
            </summary>
            <param name="gmap">map control</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateOverlayDT(GMap.NET.WindowsForms.GMapControl)">
            <summary>
            Create difficulty / terrain overlay for caches on map display
            </summary>
            <param name="gmap">map control</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateOverlayStats(GMap.NET.WindowsForms.GMapControl)">
            <summary>
            Create statistics overlay for caches on map display
            </summary>
            <param name="gmap">map control</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateWaypointTooltip(MyGeocachingManager.Geocaching.Geocache,MyGeocachingManager.Geocaching.Waypoint)">
            <summary>
            Create custom tooltip of a waypoint
            </summary>
            <param name="geo">associated geocache</param>
            <param name="w">waypoint</param>
            <returns>tooltip string</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateOverlayWpts(GMap.NET.WindowsForms.GMapControl)">
            <summary>
            Create waypoints on map display
            </summary>
            <param name="gmap">map control</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateOverlayCode(GMap.NET.WindowsForms.GMapControl,System.Boolean)">
            <summary>
            Create cache codes overlay on map display
            </summary>
            <param name="gmap">map control</param>
            <param name="bBig">if true, code will be bigger on screen</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateOverlayName(GMap.NET.WindowsForms.GMapControl,System.Boolean)">
            <summary>
            Create cache name overlay on map display
            </summary>
            <param name="gmap">map control</param>
            <param name="bBig">if true, name will be bigger on screen</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateOverlayText(System.String,System.Double,System.Double,GMap.NET.WindowsForms.GMapOverlay,System.Boolean)">
            <summary>
            Create an overlay text on map display
            </summary>
            <param name="text">text</param>
            <param name="lat">latitude</param>
            <param name="lon">longitude</param>
            <param name="overlay">gmap overlay</param>
            <param name="bBig">if true, text will be bigger on screen</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateMyFindGPX">
            <summary>
            Keep only caches where a found it is found for the provided user (HMI)
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.TranslateTooltips(System.Object,System.Windows.Forms.ToolTip)">
            <summary>
            Assign and translate all tooltips associated to a Control,
            based on tooltips files (.tips) found in MGM
            </summary>
            <param name="ctl">Control to which assign tooltips (Control, MenuItem, ToolstripMenuItem)</param>
            <param name="tip">tooltip. If null a new one will be created</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.LookForAWptCode(MyGeocachingManager.Geocaching.Geocache,System.String,System.String,System.Boolean)">
            <summary>
            Look for an unused waypoint code
            </summary>
            <param name="geo">Attached geocache</param>
            <param name="sCacheSuffix">Cache code without leading GC</param>
            <param name="sWptPrefix">Propose waypoint prefix</param>
            <param name="bIncludeWptsFromMGM">If true, _waypoints will be included in forbiden list</param>
            <returns>Valid waypoint code</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.RemoveWaypoint(MyGeocachingManager.Geocaching.Waypoint)">
            <summary>
            Remove an existing waypoint
            </summary>
            <param name="wpt">Waypoint to remove</param>
            <returns>True if modification performed</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.EditWaypoint(MyGeocachingManager.Geocaching.Waypoint)">
            <summary>
            Edit an existing waypoint
            </summary>
            <param name="w">Waypoint to edit</param>
            <returns>Edited waypoint if modified, null if unchanged</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.AddWaypointToCache(MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Add a waypoint to a cache
            </summary>
            <param name="cache">Cache to hold waypoint</param>
            <returns>Created waypoint if success</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetException(System.String,System.Exception)">
            <summary>
            nicely show an exception
            </summary>
            <param name="comment">optionnal comment (can be "")</param>
            <param name="ex">exception to display</param>
            <returns>formatted exception</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ShowException(System.String,System.String,System.Exception)">
            <summary>
            nicely show an exception
            </summary>
            <param name="title">windows title</param>
            <param name="comment">optionnal comment (can be "")</param>
            <param name="ex">exception to display</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ZouilleurdAttributsImpl(System.String,System.String[],System.String[])">
            <summary>
            Permet de zouiller les attributs d'une cache
            </summary>
            <param name="wpt">id de la cache</param>
            <param name="ids">id des attributs</param>
            <param name="yesnona">valeurs des attributs (yes, no, na)</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ZouilleurdAttributs">
            <summary>
            Permet de zouiller les attributs d'une cache
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetBuildTime">
            <summary>
            Return build time
            </summary>
            <returns>MMddHHmmss format</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.FastChoice(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="title"></param>
            <param name="nb"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.FastChoice(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="title"></param>
            <param name="vals"></param>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.MsgActionOk(System.Windows.Forms.Form,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="msg"></param>
            <param name="newstyle"></param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.MsgActionDone(System.Windows.Forms.Form,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="msg"></param>
            <param name="newstyle"></param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.MsgActionWarning(System.Windows.Forms.Form,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="msg"></param>
            <param name="newstyle"></param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.MsgActionError(System.Windows.Forms.Form,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="msg"></param>
            <param name="newstyle"></param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.MsgActionCanceled(System.Windows.Forms.Form,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="msg"></param>
            <param name="newstyle"></param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetInitialCoordinates">
            <summary>
            Returns center of map if valid or home coordinates
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetInitialCoordinates(System.Double@,System.Double@)">
            <summary>
            Returns center of map if valid or home coordinates
            </summary>
            <param name="lat"></param>
            <param name="lon"></param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ToolStripButtonGenericClick(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CreateRoutableShunks(GMap.NET.WindowsForms.GMapControl,GMap.NET.WindowsForms.GMapOverlay,GMap.NET.WindowsForms.GMapRoute,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Create and display a route on map display
            </summary>
            <param name="map">map control</param>
            <param name="overlay">gmap overlay</param>
            <param name="originalRoute">route to display</param>
            <param name="avoidHighways">if true, route will avoid highways</param>
            <param name="walkingMode">if true, route is computed for a pedestrian</param>
            <param name="bCreateMarkers">if true, intermediate markers will be created</param>
        </member>
        <member name="T:MyGeocachingManager.MainWindow.YandexLng">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.MainWindow.YandexLng.dirs">
            <summary>
            
            </summary>
        </member>
        <member name="T:MyGeocachingManager.MainWindow.YandexRes">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.MainWindow.YandexRes.code">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.MainWindow.YandexRes.lang">
            <summary>
            
            </summary>
        </member>
        <member name="P:MyGeocachingManager.MainWindow.YandexRes.text">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExportCaches(System.Boolean)">
            <summary>
            Export caches in a supported format
            </summary>
            <param name="selection">if true, only selection will be exported</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExportHtmlWrap(System.Windows.Forms.SaveFileDialog,System.Boolean)">
            <summary>
            Export caches in HTML
            </summary>
            <param name="saveFileDialog1">save dialog for export destination</param>
            <param name="selection">if true, only selection will be exported</param>
            <returns>export file name</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExportGGZ(System.String,System.Boolean)">
            <summary>
            Export caches in a GGZ file
            </summary>
            <param name="theFileName">target filename</param>
            <param name="selection">if true, only selected caches will be exported</param>
            <returns>export file name</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExportGGZ(System.String,System.Collections.Generic.List{MyGeocachingManager.Geocaching.Geocache})">
            <summary>
            Export caches in a GGZ file
            </summary>
            <param name="theFileName">target filename</param>
            <param name="cachestoprocess">list of caches to export</param>
            <returns>export file name</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExportGGZ(System.String,System.Collections.Generic.List{MyGeocachingManager.Geocaching.Geocache},System.DateTime)">
            <summary>
            Export caches in a GGZ file
            </summary>
            <param name="theFileName">target filename</param>
            <param name="cachestoprocess">list of caches to export</param>
            <param name="exportDate">export date that will be indicated in the GGZ</param>
            <returns>export file name</returns>
        </member>
        <member name="T:MyGeocachingManager.MainWindow.MyEncoder">
            <summary>
            Utilisé pour corriger le problème de ZipFile qui ne respecte pas la norme en mettrant des \\ au lieu de / dans les fichiers !
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExportCSV(System.String,System.Boolean)">
            <summary>
            Export caches into a CSV file
            CSV columns are the one currently displayed in MGM
            </summary>
            <param name="thefilename">target file name</param>
            <param name="selection">if true, only selected caches are exported</param>
            <returns>export file name</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExportOV2(System.String,System.Boolean)">
            <summary>
            Export caches in OV2 (TomTom) format
            </summary>
            <param name="thefilename">export file name</param>
            <param name="selection">if true, only selected caches are exported</param>
            <returns>export file name</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExportSQL(System.String,System.Boolean,System.Boolean)">
            <summary>
            Export caches in SQLite format
            </summary>
            <param name="thefilename">export file name</param>
            <param name="selection">if true, only selected caches are exported</param>
            <param name="striphtml">if true, remove HTML tags (smaller DB, longer process)</param>
            <returns>export file name</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExportGPXFromList(System.String,System.Collections.Generic.List{MyGeocachingManager.Geocaching.Geocache},System.Boolean)">
            <summary>
            Export caches into a GPX
            </summary>
            <param name="filename">export file name</param>
            <param name="cachestoprocess">list of caches to export</param>
            <param name="bSilent">if true, silent mode</param>
            <returns>export file name</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExportGPX(System.Windows.Forms.SaveFileDialog,System.Boolean)">
            <summary>
            Export caches into a GPX
            </summary>
            <param name="saveFileDialog1">target save file dialog</param>
            <param name="selection">if true, only selected caches are exported</param>
            <returns>export file name</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExportGPXBrutal(System.String)">
            <summary>
            Export all caches into a GPX
            </summary>
            <param name="fileRadix">target export file</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExportGPXBrutal(System.Boolean,System.String,System.Func{MyGeocachingManager.Geocaching.Geocache,System.String,System.Boolean,System.Boolean,System.String},System.Boolean,System.Boolean)">
            <summary>
            Export caches into a GPX
            </summary>
            <param name="selection">if true, only selected caches are exported</param>
            <param name="fileRadix">target file for export</param>
            <param name="fGPXInternalProcessing">function for internal processing</param>
            <param name="bOnlySpoilers">if true, only spoilers images are exported</param>
            <param name="bUseSpoilerKeywords">if true, spoiler keywords are used</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExportGPXStreamed(System.String,System.Collections.Generic.List{MyGeocachingManager.Geocaching.Geocache},System.IO.StreamWriter)">
            <summary>
            Export caches to GPX (streamed method)
            </summary>
            <param name="fileRadix">target file</param>
            <param name="caches">list of caches to export</param>
            <param name="fileIndex">file index (used for GGZ export)</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExportGPXStreamed(System.String,System.Collections.Generic.List{MyGeocachingManager.Geocaching.Geocache},System.IO.StreamWriter,System.DateTime)">
            <summary>
            Export caches to GPX (streamed method)
            </summary>
            <param name="fileRadix">target file</param>
            <param name="caches">list of caches to export</param>
            <param name="fileIndex">file index (used for GGZ export)</param>
            <param name="dateExport">export date</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ReloadPreviouslyLoadedFiles">
            <summary>
            Reload previously loaded GPX files
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.UpdateHomeInternalInformation">
            <summary>
            Update internal information related to home position based on configuration file
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetProxy">
            <summary>
            Return web proxy (null if not defined)
            </summary>
            <returns>web proxy (null if not defined)</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.DownloadAndInstallMGMVersion(System.Net.WebClient,System.String,System.String)">
            <summary>
            Download latest MGM version and install it
            </summary>
            <param name="client">webclient used for download</param>
            <param name="fupdate">update url</param>
            <param name="localfile">local file for download</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.LoadGgz(System.String)">
            <summary>
            Load a GGZ file
            </summary>
            <param name="ggzFile">path to a GGZ file</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.LoadGCZip(System.String,System.Collections.Generic.Dictionary{System.String,MyGeocachingManager.Geocaching.Geocache}@)">
            <summary>
            
            </summary>
            <param name="zipToUnpack"></param>
            <param name="caches"></param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.AssociateWaypointsToGeocaches(System.Collections.Generic.Dictionary{System.String,MyGeocachingManager.Geocaching.Geocache}@,System.Collections.Generic.List{MyGeocachingManager.Geocaching.Waypoint})">
            <summary>
            
            </summary>
            <param name="caches"></param>
            <param name="waypoints"></param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.LoadZip(System.String)">
            <summary>
            Load a zip file
            </summary>
            <param name="zipToUnpack">Path to a zip file</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CleanMGMInternals">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.LoadBatchOfFilesImpl(System.String[],System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Load a batch of GPX files (GPX, GGZ, ZIP)
            </summary>
            <param name="filenames">List of files to load</param>
            <param name="bForceReplace">If true, previously loaded caches will be erased</param>
            <param name="bUseFilter">If true, any existing activated filter will be applied at the end of the loading</param>
            <param name="bOfferToCopyFileintoDB">If true, it will be proposed to copy the files into the DB if they do not exists</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetNumberOfSelectedCaches">
            <summary>
            Return number of selected caches (fast)
            </summary>
            <returns>Number of selected caches</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetSelectedCaches">
            <summary>
            Return selected caches
            </summary>
            <returns>selected caches</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetSelectedListViewItems">
            <summary>
            Return selected listview items
            </summary>
            <returns>selected listview items</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetDisplayedCaches">
            <summary>
            Return displayed caches
            </summary>
            <returns>displayed caches</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.BeginTsp(System.Object)">
            <summary>
            Starts up the TSP class.
            This function executes on a thread pool thread.
            </summary>
            <param name="stateInfo">Not used"daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="T:MyGeocachingManager.MainWindow.DrawEventHandler">
            <summary>
            Delegate for the thread that runs the TSP algorithm.
            We use a separate thread so the GUI can redraw as the algorithm runs.
            </summary>
            <param name="sender">Object that generated this event."daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.tsp_foundNewBestTour(System.Object,Tsp.TspEventArgs)">
            <summary>
            TSP algorithm raised an event that a new best tour was found.
            We need to do an invoke on the GUI thread before doing any draw code.
            </summary>
            <param name="sender">Object that generated this event</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.DrawTour(System.Object,Tsp.TspEventArgs)">
            <summary>
            A new "best" tour from the TSP algorithm has been received.
            Draw the tour on the form, and update a couple of status labels.
            </summary>
            <param name="sender">Object that generated this event."daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
            <param name="e">Event arguments."daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.NotifyEndOfThread(MyGeocachingManager.DownloadWorker)">
            <summary>
            Notification of DownloadWorker end of work
            finalizes images download
            </summary>
            <param name="worker">download worker</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CenterOnCarto(System.String,System.String)">
            <summary>
            Center map on coordinates
            </summary>
            <param name="lat">center latitude</param>
            <param name="lon">center longitude</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.PostTreatmentLoadCache">
            <summary>
            Post treatment to call after all caches loading
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExportImagesFromCaches(System.Boolean)">
            <summary>
            Export previously downloaded images from caches
            </summary>
            <param name="selection">if true, only selected caches are used</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExportImagesExploristGC(System.Windows.Forms.FolderBrowserDialog,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Export previously downloaded images from caches (eXplorist format) 
            </summary>
            <param name="fbd">folder browser dialog</param>
            <param name="bOnlySpoilers">if true, only spoilers are exported</param>
            <param name="bUseSpoilerKeywords">if true, keywords for spoilers are used</param>
            <param name="selection">if true, only selection if exported</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExportImagesGarmin(System.Windows.Forms.FolderBrowserDialog,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Export previously downloaded images from caches (Garmin format)
            </summary>
            <param name="fbd">folder browser dialog</param>
            <param name="bLinux">if true, platform is Linux</param>
            <param name="bOnlySpoilers">if true, only spoilers are exported</param>
            <param name="bUseSpoilerKeywords">if true, keywords are used for spoiler detection</param>
            <param name="bSpoilerGarminNormal">if true, spoilers are exported as standard images and not spoilers</param>
            <param name="selection">if true, only selected caches are exported</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExportImagesGeocoded(System.Windows.Forms.FolderBrowserDialog,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Export previously downloaded images from caches(Geocoded)
            </summary>
            <param name="fbd">folder browser dialog</param>
            <param name="bOnlySpoilers">if true, only spoilers are exported</param>
            <param name="bUseSpoilerKeywords">if true, keywords are used for spoiler detection</param>
            <param name="selection">if true, only selected caches are exported</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ConfigureSpoilerDownload">
            <summary>
            Configure options for spoiler download
            </summary>
            <returns>false if operation canceled</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetBookmarks">
            <summary>
            Return bookmarks
            </summary>
            <returns>list of bookmarks</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.UpdateBookmarkOverlay(MyGeocachingManager.ListTextCoord)">
            <summary>
            Update map overlay with bookmarks
            </summary>
            <param name="bmarks">list of bookmarks</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.SaveBookmarks(MyGeocachingManager.ListTextCoord)">
            <summary>
            Save bookmarks
            </summary>
            <param name="bmarks">list of bookmarks</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetOfflineCacheData(System.String)">
            <summary>
            Get OCD from a geocache code
            </summary>
            <param name="code">geocache code</param>
            <returns>OCD object (null if not existing)</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CloseTabMap">
            <summary>
            Close map display
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ShowCacheMapInCacheDetailImpl(GMap.NET.PointLatLng)">
            <summary>
            Show map display, centered on coordinates
            </summary>
            <param name="origin">center coordinates</param>
            <returns>Tabpage of maps</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ShowCacheMapInCacheDetail">
            <summary>
            Show map display
            </summary>
            <returns>tabppage of maps</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExecuteCustomFilter(MyGeocachingManager.CacheFilter)">
            <summary>
            Execute a custom filter
            </summary>
            <param name="fltr">filter to execute</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ExecuteCustomFilterSilent(MyGeocachingManager.CacheFilter,System.Boolean)">
            <summary>
            Execute a custom filter (silent)
            </summary>
            <param name="fltr">filter to execute</param>
            <param name="executefirst">if true, existing filter is executed first</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.HandlerToDisplayCoordinates(System.Double,System.Double)">
            <summary>
            Display coordinates on carto
            </summary>
            <param name="lat">latitude</param>
            <param name="lon">longitude</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CloseCacheDetail">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetPQDownloadHTML(System.Net.CookieContainer)">
            <summary>
            Retrieve HTML source code of PQ download page on GC.com
            </summary>
            <param name="cookieJar">Authentication cookie</param>
            <returns>HTML of PQ download page</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.UpdateHttpDefaultWebProxy">
            <summary>
            Update default proxy used for HttpWebRequest
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetViewState(System.String,System.String@,System.String[]@,System.String@)">
            <summary>
            Retrieve VIEWSTATE information from a Geocaching.com webpage
            </summary>
            <param name="response">webpage to parse</param>
            <param name="__VIEWSTATEFIELDCOUNT">retrieved __VIEWSTATEFIELDCOUNT value</param>
            <param name="__VIEWSTATE">retrieved __VIEWSTATE list</param>
            <param name="__VIEWSTATEGENERATOR">retrieved __VIEWSTATEGENERATOR value</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.cachesPreviewMap_OnMapZoomChanged">
            <summary>
            Handler for map display zoom changed
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.anymap_OnMarkerClickImpl(GMap.NET.WindowsForms.GMapMarker,System.Windows.Forms.MouseEventArgs,GMap.NET.WindowsForms.GMapControlCustom)">
            <summary>
            Handler called when a marker is clicked on map display
            </summary>
            <param name="item">clicked marker</param>
            <param name="e">mouse event</param>
            <param name="parentMap">parent map control</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.SelectOnlyThisItemInlvGeocaches(SpaceEyeTools.EXControls.EXListViewItem)">
            <summary>
            Select a listviewitem in listview
            </summary>
            <param name="lstvItem">item to select</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.cachedetail_OnPolygonClick(GMap.NET.WindowsForms.GMapPolygon,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when a polygon is clicked
            </summary>
            <param name="item">clicked polygon</param>
            <param name="e">mouse event</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.cachedetail_OnRouteClick(GMap.NET.WindowsForms.GMapRoute,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when a route is clicked
            </summary>
            <param name="item">clicked route</param>
            <param name="e">mouse event</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ResetAreaFilter">
            <summary>
            Reset filter area
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.DefineFilterArea(System.Windows.Forms.Form,System.Collections.Generic.List{GMap.NET.PointLatLng},System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Define filter area
            </summary>
            <param name="caller"></param>
            <param name="pts">area points</param>
            <param name="zoom">zoom level</param>
            <param name="bIHMImpact">if true, area filter will be checked</param>
            <param name="bSilent">if true, error messages will not be displayed</param>
            <returns>true if area successfuly defined</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetAltitudes(System.Collections.Generic.List{MyGeocachingManager.Geocaching.Geocache})">
            <summary>
            Get cache altitudes using Google Maps
            </summary>
            <param name="cachestoprocess">caches to process</param>
            <returns>list of cache altitudes</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.CheckGCAccount(System.Boolean,System.Boolean)">
            <summary>
            Check geocaching account credentials
            </summary>
            <param name="silent">if true, no message box will be raised for SUCCESS</param>
            <param name="bForceRegeneration">if true, force cookie regeneration, otherwise use (if exists) a previously create cookie </param>
            <returns>authentication cookie</returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.enableGoldMode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetUserInformation(System.String)">
            <summary>
            Get user information
            Buggy and not working.... :-(
            </summary>
            <param name="userid">user geocaching identifier (not the name, not the GUID, just the identifier)</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ClearOverlay_RESERVED2">
            <summary>
            Clear all markers, routes, polygons from overlay RESERVED2 in _cacheDetail._gmap
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ReplaceIgnoreList">
            <summary>
            Overwrite ignore list of caches on hard drive with the one in MGM's memory
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.DeclareFoundCache(System.String,MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Declare found a geocache
            update _cachestatus if needed
            DO NOT save _cachestatus if needed
            DO NOT RECREATE VISUAL ELEMENTS !
            </summary>
            <param name="owner">owner</param>
            <param name="geo">geocache to declare found</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ForceDeclareFoundCache(System.String,MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Declare found a geocache and force it to appear found
            update _cachestatus if needed
            DO NOT save _cachestatus if needed
            DO NOT RECREATE VISUAL ELEMENTS !
            </summary>
            <param name="owner">owner</param>
            <param name="geo">geocache to declare found</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.BuildProfileSubMenu">
            <summary>
            (re)build profile submenu
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.ModifyCacheNameReplace">
            <summary>
            Modify a cache name of selected caches based on user input
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.GetEmptyCache(System.String)">
            <summary>
            Return an empty cache
            </summary>
            <param name="code">Code of cache</param>
            <returns>Empty cache</returns>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._lastuseddbindbfilter">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._lastlimitusedindbfilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.HMIToSelectDB(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="keylabel"></param>
            <param name="msg"></param>
            <param name="verbose"></param>
            <param name="proposeCacheCache"></param>
            <returns></returns>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.MainWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.menuStrip1">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbFilterList">
            <summary>
            Combo list for saved filters
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbSizeV">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbSizeR">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbSizeO">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbSizeS">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbSizeM">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbSizeL">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbSizeU">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbType12">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbType11">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbType10">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbType9">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbType8">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbType7">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbType4">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbType6">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbType3">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbType2">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbType5">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbType1">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.comboDMax">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.comboDMin">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.comboTMax">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.comboTMin">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbType13">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow._cachesPreviewMap">
            <summary>
            Referrence to map control used for cache display in tabcontrol
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbType15">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.cbType14">
            <summary>
            
            </summary>
        </member>
        <member name="F:MyGeocachingManager.MainWindow.btnMatrixFilterDT">
            <summary>
            
            </summary>
        </member>
        <member name="T:MyGeocachingManager.NoteForm">
            <summary>
            Form to enter a note on a cache
            </summary>
        </member>
        <member name="M:MyGeocachingManager.NoteForm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:MyGeocachingManager.NoteForm.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.NoteForm.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:MyGeocachingManager.NoteForm.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="F:MyGeocachingManager.NoteForm.label1">
            <summary>
            Label for note
            </summary>
        </member>
        <member name="F:MyGeocachingManager.NoteForm.textBox1noteform">
            <summary>
            TextBox to enter note
            </summary>
        </member>
        <member name="F:MyGeocachingManager.NoteForm.button2">
            <summary>
            Cancel button
            </summary>
        </member>
        <member name="F:MyGeocachingManager.NoteForm.button1">
            <summary>
            OK button
            </summary>
        </member>
        <member name="T:MyGeocachingManager.OfflineCacheData">
            <summary>
            Class for various extra geocache information stored within MGM database
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData.VERSION_DATA">
            <summary>
            Current implementation version
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._version">
            <summary>
            Version of deserialized instance
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._dateExport">
            <summary>
            Export date of instance
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._Code">
            <summary>
            Geocaching code of associated geocache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._Comment">
            <summary>
            Comment on geocache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._ImageFilesFromDescription">
            <summary>
            List of images present in geocache description
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._ImageFilesSpoilers">
            <summary>
            List of spoilers associated to geocache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._bAborted">
            <summary>
            If true, download process of associated image has been aborted
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._bBookmarked">
            <summary>
            True if geocache is bookmarked
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._Tags">
            <summary>
            List of user defined tags for associated cache
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._iNbFavs">
            <summary>
            Number of favorites
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._iNbFounds">
            <summary>
            Number of founds
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._iNbNotFounds">
            <summary>
            Number of DNFs
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._iNbFoundsPremium">
            <summary>
            Number of founds by premium members
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._iNbNotFoundsPremium">
            <summary>
            Number of DNF by premium members
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._dRating">
            <summary>
            Popularity of geocache, based on Geocaching.com formula (_iNbFavs/_iNbFounds)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._dRatingSimple">
            <summary>
            Popularity of geocache, based on Project-GC formula (Lower bound of Wilson score confidence interval for a Bernoulli parameter)
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._dAltiMeters">
            <summary>
            Altitude of associated geocache, in meters
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._descHTML">
            <summary>
            HTML description of geocache
            Temporary information for image download, not serialized
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineCacheData._NotDownloaded">
            <summary>
            True if no image has ever been downloaded for this cache
            </summary>
        </member>
        <member name="M:MyGeocachingManager.OfflineCacheData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:MyGeocachingManager.OfflineCacheData.GetTags">
            <summary>
            Retrieve list of user defined tags
            </summary>
            <returns>User defined tags separated by a ;</returns>
        </member>
        <member name="M:MyGeocachingManager.OfflineCacheData.AddTags(System.Collections.Generic.List{System.String})">
            <summary>
            Add a list of user defined tags
            </summary>
            <param name="tags">user defined list of tags</param>
        </member>
        <member name="M:MyGeocachingManager.OfflineCacheData.RemoveTags(System.Collections.Generic.List{System.String})">
            <summary>
            Remove a list of user defined tags
            </summary>
            <param name="tags">user defined list of tags</param>
        </member>
        <member name="M:MyGeocachingManager.OfflineCacheData.ToString">
            <summary>
            ToString override
            </summary>
            <returns>String version of the object</returns>
        </member>
        <member name="M:MyGeocachingManager.OfflineCacheData.HasStats">
            <summary>
            If true, the following values are defined:
            _iNbFavs OR
            _iNbFounds OR
            _iNbNotFounds OR
            _iNbFoundsPremium OR
            _iNbNotFoundsPremium OR
            _dRating OR
            _dRatingSimple
            OR _dAltiMeters
            </summary>
            <returns>Value of _iNbFavs OR
            _iNbFounds OR
            _iNbNotFounds OR
            _iNbFoundsPremium OR
            _iNbNotFoundsPremium OR
            _dRating OR
            _dRatingSimple OR
            _dAltiMeters</returns>
        </member>
        <member name="M:MyGeocachingManager.OfflineCacheData.IsEmpty">
            <summary>
            Indicates if instance is empty (no extra information contained)
            </summary>
            <returns>true if:
            HasStats is false AND
            _Comment is empty AND
            _bBookmarked is false AND
            _NotDownloaded is true AND
            _Tags count is 0
            </returns>
        </member>
        <member name="M:MyGeocachingManager.OfflineCacheData.HasMissingFiles(System.String)">
            <summary>
            Check if some referenced files are missing
            </summary>
            <param name="pathdata">Path containing files database</param>
            <returns>true is files are missing</returns>
        </member>
        <member name="M:MyGeocachingManager.OfflineCacheData.PurgeFiles(System.String)">
            <summary>
            Remove all associated files!
            </summary>
            <param name="pathdata">Path containing files database</param>
        </member>
        <member name="M:MyGeocachingManager.OfflineCacheData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">info</param>
            <param name="ctxt">context</param>
        </member>
        <member name="M:MyGeocachingManager.OfflineCacheData.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization function.
            </summary>
            <param name="info">info</param>
            <param name="ctxt">context</param>
        </member>
        <member name="M:MyGeocachingManager.OfflineCacheData.WriteStatsHeader(System.IO.StreamWriter)">
            <summary>
            Write stats header in a file (for export)
            </summary>
            <param name="fi">StreamWriter of open file</param>
        </member>
        <member name="M:MyGeocachingManager.OfflineCacheData.WriteStats(System.IO.StreamWriter)">
            <summary>
            Write stats in a file (for export)
            </summary>
            <param name="fi">StreamWriter of open file</param>
        </member>
        <member name="M:MyGeocachingManager.OfflineCacheData.ReadStats(System.String)">
            <summary>
            Read stats from a file (for import)
            </summary>
            <param name="line">Stats for ONE OfflineCacheData</param>
            <returns>New OfflineCacheData with stats from file</returns>
        </member>
        <member name="M:MyGeocachingManager.OfflineCacheData.MergeStats(MyGeocachingManager.OfflineCacheData)">
            <summary>
            Merge stats from existing OfflineCacheData if they are better defined
            use new stats IF
            - more _iNbFounds
            - or more _iNbNotFounds
            - or more _iNbFavs
            - don't bother using the date, it's wrong anyway
            If altitude of ocd is valid, we will merge it anyway
            </summary>
            <param name="ocd">existing OfflineCacheData with stats</param>
            <returns>true if stats have been merged</returns>
        </member>
        <member name="T:MyGeocachingManager.DataForStatsRetrieval">
            <summary>
            Structure used for stats retrieval
            </summary>
        </member>
        <member name="F:MyGeocachingManager.DataForStatsRetrieval.inbmissed">
            <summary>
            Number of previously missed stats due to an error
            </summary>
        </member>
        <member name="F:MyGeocachingManager.DataForStatsRetrieval.stopScoreRetrieval">
            <summary>
            If true, stats retrieval process will be stopped
            </summary>
        </member>
        <member name="F:MyGeocachingManager.DataForStatsRetrieval.firstQuestion">
            <summary>
            If true, question to stop retrieval has never been asked before in the current process
            </summary>
        </member>
        <member name="F:MyGeocachingManager.DataForStatsRetrieval.cookieJar">
            <summary>
            Cookie containing user authentication for GC.com
            </summary>
        </member>
        <member name="T:MyGeocachingManager.OfflineData">
            <summary>
            Container for a list of OfflineCacheData of caches
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineData._version">
            <summary>
            Version of deserialized instance
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineData._OfflineData">
            <summary>
            List of OfflineCacheData objects
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineData.VERSION_DATA">
            <summary>
            Current implementation version
            </summary>
        </member>
        <member name="M:MyGeocachingManager.OfflineData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:MyGeocachingManager.OfflineData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">info</param>
            <param name="ctxt">context</param>
        </member>
        <member name="M:MyGeocachingManager.OfflineData.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization function.
            </summary>
            <param name="info">info</param>
            <param name="ctxt">context</param>
        </member>
        <member name="M:MyGeocachingManager.OfflineData.Serialize(System.String)">
            <summary>
            Open a file and serialize the object into it in binary format.
            EmployeeInfo.osl is the file that we are creating. 
            Note:- you can give any extension you want for your file
            If you use custom extensions, then the user will now 
              that the file is associated with your program.
            </summary>
            <param name="file">file to serialize to</param>
        </member>
        <member name="M:MyGeocachingManager.OfflineData.Deserialize(System.String)">
            <summary>
            Deserialize
            </summary>
            <param name="file">file to deserialize from</param>
            <returns>Deserialized instance</returns>
        </member>
        <member name="T:MyGeocachingManager.OfflineImageWeb">
            <summary>
            Class for downloaded cache images
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineImageWeb.VERSION_DATA">
            <summary>
            Current version of implementation
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineImageWeb._version">
            <summary>
            Version of deserialized instance
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineImageWeb._dateExport">
            <summary>
            Export date of instance
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineImageWeb._name">
            <summary>
            Image name
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineImageWeb._url">
            <summary>
            Image url
            </summary>
        </member>
        <member name="F:MyGeocachingManager.OfflineImageWeb._localfile">
            <summary>
            Image local file on hard drive
            </summary>
        </member>
        <member name="M:MyGeocachingManager.OfflineImageWeb.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:MyGeocachingManager.OfflineImageWeb.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">info</param>
            <param name="ctxt">context</param>
        </member>
        <member name="M:MyGeocachingManager.OfflineImageWeb.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization function.
            </summary>
            <param name="info">info</param>
            <param name="ctxt">context</param>
        </member>
        <member name="T:MyGeocachingManager.Program">
            <summary>
            Main entry point for the application.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.Bold">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.Bullets">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.Down">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.Header1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.Header2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.Header3">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_8ball">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_angry">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_approve">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_big">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_blackeye">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_blush">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_clown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_cool">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_dead">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_dissapprove">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_evil">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_kisses">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_question">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_sad">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_shock">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_shy">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_sleepy">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_tongue">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.icon_smile_wink">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.Italic">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.Left">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.Link">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.Numbering">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.Quote">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.Right">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.Rule">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MyGeocachingManager.Properties.Resources.Up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:MyGeocachingManager.TabControlEx">
            <summary>
            Custom tab control use un CacheDetail
            </summary>
        </member>
        <member name="M:MyGeocachingManager.TabControlEx.#ctor(MyGeocachingManager.MainWindow)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:MyGeocachingManager.TabControlEx.PreRemoveTabPage">
            <summary>
            Reference to an instance of a PreRemoveTab delegate
            Can be null
            </summary>
        </member>
        <member name="F:MyGeocachingManager.TabControlEx._CloseButton">
            <summary>
            Image for close button displayed on each TabPage
            </summary>
        </member>
        <member name="F:MyGeocachingManager.TabControlEx._GearButton">
            <summary>
            Image for gear / configuration button that can be displayed on specific TabPage
            </summary>
        </member>
        <member name="F:MyGeocachingManager.TabControlEx._EarthButton">
            <summary>
            Image for earth button that can be displayed on specific TabPage
            </summary>
        </member>
        <member name="F:MyGeocachingManager.TabControlEx._fGearProcessing">
            <summary>
            Reference to a function that will be called if a gear button is pushed
            Cann be null
            </summary>
        </member>
        <member name="F:MyGeocachingManager.TabControlEx._mnuContextMenu">
            <summary>
            Context menu of a TabPage
            </summary>
        </member>
        <member name="M:MyGeocachingManager.TabControlEx.IsSpecialPage(System.Windows.Forms.TabPage)">
            <summary>
            -1 : not a special page
            1 : do not close, tab page map
            2 : action tab
            Checks if a TabPage is special
            </summary>
            <param name="page">Page to check</param>
            <returns>
            -1 : not a special page
            1 : do not close, tab page map
            2 : action tab
            </returns>
        </member>
        <member name="M:MyGeocachingManager.TabControlEx.IsSpecialPageFromTag(System.Object)">
            <summary>
            -1 : not a special page
            1 : do not close, tab page map
            2 : action tab
            Checks if a TabPage is special
            </summary>
            <param name="tag">tag associated to a page to check</param>
            <returns>
            -1 : not a special page
            1 : do not close, tab page map
            2 : action tab
            </returns>
        </member>
        <member name="M:MyGeocachingManager.TabControlEx.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Custom OnDrawItem
            </summary>
            <param name="e">mouse events</param>
        </member>
        <member name="M:MyGeocachingManager.TabControlEx.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handler for mouse click
            </summary>
            <param name="e">Mouse event</param>
        </member>
        <member name="M:MyGeocachingManager.TabControlEx.DisplayContextMenu(System.Drawing.Point)">
            <summary>
            Display context menu of a tab page
            </summary>
            <param name="pt">Point to display the menu</param>
        </member>
        <member name="M:MyGeocachingManager.TabControlEx.CloseTab(System.Int32)">
            <summary>
            Close a tab page
            If tab page is special, it will not be closed
            </summary>
            <param name="i">Tab page index</param>
        </member>
        <member name="M:MyGeocachingManager.TabControlEx.CloseTabForce(System.Int32,System.Boolean)">
            <summary>
            Close a tab page
            If tab page is special, it will be closed ony if bForce is true
            </summary>
            <param name="i">Tab page index</param>
            <param name="bForce">If tab page is special, it will be closed ony if bForce is true</param>
        </member>
        <member name="T:MyGeocachingManager.UserInfo">
            <summary>
            Class holding basic Geocaching information on a user
            </summary>
        </member>
        <member name="M:MyGeocachingManager.UserInfo.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="user">User name</param>
            <param name="avatarurl">URL to avatar image</param>
            <param name="membership">Type of membership</param>
            <param name="membersince">Date of subscription to GC.com</param>
            <param name="find">Number of found it</param>
            <param name="hide">Number of caches hiden</param>
            <param name="tb">Number of owned travel bugs : geocacoins</param>
            <param name="fav">Number of favorites in hand</param>
        </member>
        <member name="F:MyGeocachingManager.UserInfo.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyGeocachingManager.UserInfo.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyGeocachingManager.UserInfo.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GMap.NET.WindowsForms.Markers.GMapMarkerGCStatsPie">
            <summary>
            Custom marker: used for statistics display (Pie)
            </summary>
        </member>
        <member name="P:GMap.NET.WindowsForms.Markers.GMapMarkerGCStatsPie.MarkerImage">
            <summary>
            The image to display as a marker.
            </summary>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerGCStatsPie.#ctor(GMap.NET.PointLatLng,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Constructor
            </summary>
            <param name="p">marker coordinates</param>
            <param name="pop">Image for popularity</param>
            <param name="ifav">Number of favorites</param>
            <param name="ipop">Popularity value in % (60% = 60)</param>
            <param name="colorBackgroundText">Background color for text</param>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerGCStatsPie.OnRender(System.Drawing.Graphics)">
            <summary>
            Rendering function
            </summary>
            <param name="g">Graphic for rendering</param>
        </member>
        <member name="T:GMap.NET.WindowsForms.Markers.GMapMarkerGCStats">
            <summary>
            Custom marker: used for statistics display
            </summary>
        </member>
        <member name="P:GMap.NET.WindowsForms.Markers.GMapMarkerGCStats.MarkerImage">
            <summary>
            The image to display as a marker.
            </summary>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerGCStats.#ctor(GMap.NET.PointLatLng,System.Drawing.Image,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Constructor
            </summary>
            <param name="p">marker coordinates</param>
            <param name="fav">Image for favorites</param>
            <param name="scale">Image for scale display</param>
            <param name="ifav">Number of favorites</param>
            <param name="ipop">Popularity value in % (60% = 60)</param>
            <param name="colorBackgroundText">Background color for text</param>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerGCStats.OnRender(System.Drawing.Graphics)">
            <summary>
            Rendering function
            </summary>
            <param name="g">Graphic for rendering</param>
        </member>
        <member name="T:GMap.NET.WindowsForms.Markers.GMapMarkerImage">
            <summary>
            Custom marker: marker that displays a custom image
            </summary>
        </member>
        <member name="P:GMap.NET.WindowsForms.Markers.GMapMarkerImage.CurrentImage">
            <summary>
            Get/Set marker image
            </summary>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerImage.#ctor(System.Drawing.Image,GMap.NET.PointLatLng)">
            <summary>
            Constructor
            </summary>
            <param name="Image">Marker image</param>
            <param name="p">Marker coordinates</param>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerImage.OnRender(System.Drawing.Graphics)">
            <summary>
            Rendering method
            </summary>
            <param name="g">Graphic for rendering</param>
        </member>
        <member name="T:GMap.NET.WindowsForms.Markers.GMapMarkerImages">
            <summary>
            Custom marker: 
            marker that displays a custom image among a list,
            depending on map control zoom level
            </summary>
        </member>
        <member name="F:GMap.NET.WindowsForms.Markers.GMapMarkerImages.VAL_ZOOM_MICRO">
            <summary>
            Micro zoom value
            </summary>
        </member>
        <member name="F:GMap.NET.WindowsForms.Markers.GMapMarkerImages.VAL_ZOOM_MINIMUM">
            <summary>
            Minimum zoom value
            </summary>
        </member>
        <member name="F:GMap.NET.WindowsForms.Markers.GMapMarkerImages.VAL_ZOOM_MEDIUM">
            <summary>
            Medium zoom value
            </summary>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerImages.SetImage(System.Int32)">
            <summary>
            Change marker image
            </summary>
            <param name="indexImage">Image index</param>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerImages.GetGeocache">
            <summary>
            Returns associated Geocache
            </summary>
            <returns>a Geocache</returns>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerImages.SetZoomImageMicro">
            <summary>
            Automatically change marker image with the one associate to micro zoom level
            </summary>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerImages.SetZoomImageMin">
            <summary>
            Automatically change marker image with the one associate to minimum zoom level
            </summary>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerImages.SetZoomImageMed">
            <summary>
            Automatically change marker image with the one associate to medium zoom level
            </summary>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerImages.SetZoomImageHigh">
            <summary>
            Automatically change marker image with the one associate to high zoom level
            </summary>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerImages.#ctor(System.Collections.Generic.List{System.Drawing.Image},System.Int32,System.Int32,System.Int32,System.Int32,GMap.NET.PointLatLng,MyGeocachingManager.Geocaching.Geocache)">
            <summary>
            Constructor
            </summary>
            <param name="Images">Image list</param>
            <param name="indexZoomMicro">Value for Micro zoom</param>
            <param name="indexZoomMin">Value for Minimum zoom</param>
            <param name="indexZoomMed">Value for Medium zoom</param>
            <param name="indexZoomHigh">Value for High zoom</param>
            <param name="p">Marker coordinates</param>
            <param name="geo">Associated geocache</param>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerImages.OnRender(System.Drawing.Graphics)">
            <summary>
            Rendering method
            </summary>
            <param name="g">Graphic for rendering</param>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerImages.ReturnImageLevelFromZoom(System.Double)">
            <summary>
            Returns zoom level for GMapMarkerImages based on
            map control zoom level
            0 if map control zoom level inferior or equal to GMapMarkerImages.VAL_ZOOM_MICRO
            1 if map control zoom level inferior or equal to GMapMarkerImages.VAL_ZOOM_MINIMUM
            2 if map control zoom level inferior or equal to GMapMarkerImages.VAL_ZOOM_MEDIUM
            3 otherwise
            </summary>
            <param name="zoom">map control zoom level</param>
            <returns>
            0 if map control zoom level inferior or equal to GMapMarkerImages.VAL_ZOOM_MICRO
            1 if map control zoom level inferior or equal to GMapMarkerImages.VAL_ZOOM_MINIMUM
            2 if map control zoom level inferior or equal to GMapMarkerImages.VAL_ZOOM_MEDIUM
            3 otherwise
            </returns>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerImages.ChangeImageAccordingToZoom(GMap.NET.WindowsForms.Markers.GMapMarkerImages,System.Int32)">
            <summary>
            Update GMapMarkerImages according to its zoom level
            </summary>
            <param name="marker">marker to be changed</param>
            <param name="iz">zoom level
            0 if map control zoom level inferior or equal to GMapMarkerImages.VAL_ZOOM_MICRO
            1 if map control zoom level inferior or equal to GMapMarkerImages.VAL_ZOOM_MINIMUM
            2 if map control zoom level inferior or equal to GMapMarkerImages.VAL_ZOOM_MEDIUM
            3 otherwise
            </param>
        </member>
        <member name="T:GMap.NET.WindowsForms.Markers.GMapMarkerCircle">
            <summary>
            Custom marker: circular area
            </summary>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerCircle.#ctor(GMap.NET.WindowsForms.GMapControl,GMap.NET.PointLatLng,System.Int32,System.Drawing.Pen,System.Drawing.Brush,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="map">Associated map control</param>
            <param name="p">Center coordinates</param>
            <param name="radius">Radius in meters</param>
            <param name="outlinepen">Pen for border drawing</param>
            <param name="fillbrush">Brush for filling</param>
            <param name="fill">If true, marker will be filled,
            If false, only a circle will be drawn</param>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerCircle.GetBoundRect">
            <summary>
            Returns bounding rect of this marker
            </summary>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerCircle.OnRender(System.Drawing.Graphics)">
            <summary>
            Rendering method
            </summary>
            <param name="g">Graphics for rendering</param>
        </member>
        <member name="T:GMap.NET.WindowsForms.Markers.GMapMarkerText">
            <summary>
            Custom marker: text within a label
            </summary>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerText.#ctor(GMap.NET.PointLatLng,System.String,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="p">Coordinates of marker</param>
            <param name="text">Text to be drawn</param>
            <param name="penColor">Text oclor</param>
            <param name="backColor">Background color</param>
            <param name="offsetX">X Offset for marker coordinates in pixels</param>
            <param name="offsetY">Y Offset for marker coordinates in pixels</param>
            <param name="bBig">If true, text will be bigger</param>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapMarkerText.OnRender(System.Drawing.Graphics)">
            <summary>
            Rendering method
            </summary>
            <param name="g">Graphic for rendering</param>
        </member>
        <member name="T:GMap.NET.WindowsForms.Markers.GMapOverlayCustom">
            <summary>
            Custom overlay:  this one has the capability to be hiden
            </summary>
        </member>
        <member name="P:GMap.NET.WindowsForms.Markers.GMapOverlayCustom.ForceHide">
            <summary>
            Get/Set for ForceHide attribute
            If true, this overlay will be automatically hiden
            </summary>
        </member>
        <member name="M:GMap.NET.WindowsForms.Markers.GMapOverlayCustom.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="id">Overlay identifier</param>
            <param name="bForceHide">If true, this overlay will be automatically hiden</param>
        </member>
        <member name="T:GMap.NET.WindowsForms.GMapRouteGradient">
            <summary>
            A route with different colors and/or width per segment
            </summary>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapRouteGradient.#ctor(System.Collections.Generic.List{GMap.NET.PointLatLng},System.String,System.Drawing.Color[],System.Single[])">
            <summary>
            Constructor
            </summary>
            <param name="pts">Points of route</param>
            <param name="name">Route name</param>
            <param name="colors">Route colors (one per point)</param>
            <param name="fwidth">Route width (one per point - can turn ugly)</param>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapRouteGradient.OnRender(System.Drawing.Graphics)">
            <summary>
            OnRender override
            </summary>
            <param name="g">Graphic</param>
        </member>
        <member name="T:GMap.NET.WindowsForms.GMapToolTipPicture">
            <summary>
            Tooltip that will display an image
            </summary>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapToolTipPicture.#ctor(System.String,System.String,GMap.NET.WindowsForms.GMapMarker,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="label"></param>
            <param name="imagePath"></param>
            <param name="marker"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapToolTipPicture.OnRender(System.Drawing.Graphics)">
            <summary>
            Rendering method
            </summary>
            <param name="g">Graphic to render</param>
        </member>
        <member name="T:GMap.NET.WindowsForms.GMapControlCustom">
            <summary>
            Custom GMap.NET.WindowsForms.GMapControl control
            This control can provide a feedback to 2 TextBox (one for latitude, one for longitude)
            These 2 TextBox will be automatically updated with GMapControlCustom center coordinates
            when they change.
            It is also used to draw itinerary, areas will special left mouse clicks.
            </summary>
        </member>
        <member name="P:GMap.NET.WindowsForms.GMapControlCustom.Daddy">
            <summary>
            Set reference to main window (MainWindow instance), used for callback purposes
            </summary>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapControlCustom.AssignMapProvider(GMap.NET.MapProviders.GMapProvider)">
            <summary>
            
            </summary>
            <param name="provider"></param>
        </member>
        <member name="P:GMap.NET.WindowsForms.GMapControlCustom.ControlTextLatLon">
            <summary>
            Get/Set TextBox control for latitude / longitude
            </summary>
        </member>
        <member name="P:GMap.NET.WindowsForms.GMapControlCustom.ControlTextRadius">
            <summary>
            Get/Set TextBox control for circle radius
            </summary>
        </member>
        <member name="P:GMap.NET.WindowsForms.GMapControlCustom.WindowsToCheck">
            <summary>
            Reference to a Form control to give it the focus if needed
            </summary>
        </member>
        <member name="P:GMap.NET.WindowsForms.GMapControlCustom.OverrideLeftMouseClick">
            <summary>
            If true, Left mouse click will be overriden on this custom control
            </summary>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapControlCustom.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapControlCustom.#ctor(System.Windows.Forms.Control,MyGeocachingManager.MainWindow)">
            <summary>
            Constructor
            </summary>
            <param name="wndToCheck">Reference to a Form control to give it the focus if needed</param>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapControlCustom.OnMouseEnter(System.EventArgs)">
            <summary>
            OnMouseEnter event
            </summary>
            <param name="e">event</param>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapControlCustom.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnMouseClick event
            </summary>
            <param name="e">event</param>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapControlCustom.BaseOnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Callback to display coordinates in the 2 TextBox
            </summary>
            <param name="e">event</param>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapControlCustom.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            OnKeyPress event: + and - will change zoom level
            </summary>
            <param name="e">event</param>
        </member>
        <member name="F:GMap.NET.WindowsForms.GMapControlCustom.fontCustomScale">
            <summary>
            The font for the m/km markers
            </summary>
        </member>
        <member name="F:GMap.NET.WindowsForms.GMapControlCustom.fontCustomScaleBold">
            <summary>
            The font for the scale header 
            </summary>
        </member>
        <member name="F:GMap.NET.WindowsForms.GMapControlCustom.brushCustomScaleBackColor">
            <summary>
            The brush for the scale's background
            </summary>
        </member>
        <member name="F:GMap.NET.WindowsForms.GMapControlCustom.colorCustomScaleText">
            <summary>
            The Textcolor for the scale's fonts
            </summary>
        </member>
        <member name="F:GMap.NET.WindowsForms.GMapControlCustom.intScaleRectWidth">
            <summary>
            The width of the scale-rectangle
            </summary>
        </member>
        <member name="F:GMap.NET.WindowsForms.GMapControlCustom.intScaleRectHeight">
            <summary>
            The height of the scale-rectangle
            </summary>
        </member>
        <member name="F:GMap.NET.WindowsForms.GMapControlCustom.intScaleBarHeight">
            <summary>
            The height of the scale bar
            </summary>
        </member>
        <member name="F:GMap.NET.WindowsForms.GMapControlCustom.intScaleLeftPadding">
            <summary>
            The padding of the scale
            </summary>
        </member>
        <member name="F:GMap.NET.WindowsForms.GMapControlCustom.boolUseCustomScale">
            <summary>
            Usage of custom scale
            </summary>
        </member>
        <member name="F:GMap.NET.WindowsForms.GMapControlCustom.boolUseCustomScaleLabel">
            <summary>
            Usage of custom scale label
            </summary>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapControlCustom.OnPaintOverlays(System.Drawing.Graphics)">
            <summary>
            Draw extra stuff here (E.g. a legend for the map)
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapControlCustom.ZoomAndCenterPolygons(System.String)">
            <summary>
            zooms and centers all polygons
            </summary>
            <param name="overlayId">overlay id or null to check all</param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapControlCustom.ZoomAndCenterCircles(System.String)">
            <summary>
            zooms and centers all GMapMarkerCircle
            </summary>
            <param name="overlayId">overlay id or null to check all</param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapControlCustom.GetRectOfAllCircles(System.String)">
            <summary>
            gets rectangle with all GMapMarkerCircle objects inside
            </summary>
            <param name="overlayId">overlay id or null to check all</param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapControlCustom.GetRectOfAllPolygons(System.String)">
            <summary>
            gets rectangle with all polygons objects inside
            </summary>
            <param name="overlayId">overlay id or null to check all</param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapControlCustom.DrawScale(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Draw the scale
            </summary>
            <param name="g"></param>
            <param name="resLength"></param>
            <param name="availableWidth"></param>
            <param name="totalDimenson"></param>
            <param name="unit"></param>
        </member>
        <member name="T:GMap.NET.WindowsForms.GMapToolTipCustom">
            <summary>
            Custom GMapToolTip marker
            Used to render Geocache details "Geocaching.com" style
            </summary>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapToolTipCustom.#ctor(MyGeocachingManager.MainWindow,MyGeocachingManager.Geocaching.Geocache,GMap.NET.WindowsForms.GMapMarker)">
            <summary>
            Constructor
            </summary>
            <param name="daddy">Reference to main window (MainWindow instance), used for callback purposes</param>
            <param name="geo">Associated geocache</param>
            <param name="marker">Associated geocache marker</param>
        </member>
        <member name="M:GMap.NET.WindowsForms.GMapToolTipCustom.OnRender(System.Drawing.Graphics)">
            <summary>
            Rendering method
            </summary>
            <param name="g">Graphic to render</param>
        </member>
        <member name="T:GMap.NET.GMapRasterImage">
            <summary>
            Class used to display an image in place of a marker
            In this case it is used to display a raster image
            </summary>
        </member>
        <member name="P:GMap.NET.GMapRasterImage.Image">
            <summary>
            Get / Set associated image
            </summary>
        </member>
        <member name="M:GMap.NET.GMapRasterImage.#ctor(GMap.NET.PointLatLng)">
            <summary>
            Constructor
            </summary>
            <param name="p">Top Left coordinates</param>
        </member>
        <member name="M:GMap.NET.GMapRasterImage.OnRender(System.Drawing.Graphics)">
            <summary>
            Custome render
            </summary>
            <param name="g">Graphic to render</param>
        </member>
        <member name="T:GMap.NET.TilePrefetcherEnh">
            <summary>
            form helping to prefetch tiles on local db
            specialization of TilePrefetcher from GMap.NET
            </summary>
        </member>
        <member name="F:GMap.NET.TilePrefetcherEnh.LblFetchingMessageFormat">
            <summary>
            Message string format for progress
            Default template: "Fetching tile at zoom {0}/{1}: {2} of {3}, complete: {4} %"
            </summary>
        </member>
        <member name="F:GMap.NET.TilePrefetcherEnh.LblWaiting">
            <summary>
            Default: "Please wait...";
            </summary>
        </member>
        <member name="F:GMap.NET.TilePrefetcherEnh.LblAllTileSaved">
            <summary>
            Default: "all tiles saved";
            </summary>
        </member>
        <member name="F:GMap.NET.TilePrefetcherEnh.LblSavingTiles">
            <summary>
            Default: "saving tiles...";
            </summary>
        </member>
        <member name="F:GMap.NET.TilePrefetcherEnh.LblTileToSave">
            <summary>
            Default: "tiles to save...";
            </summary>
        </member>
        <member name="F:GMap.NET.TilePrefetcherEnh.LblPrefetchComplete">
            <summary>
            Default: "Prefetch Complete! => {0} of {1}";
            </summary>
        </member>
        <member name="F:GMap.NET.TilePrefetcherEnh.LblPrefetchCancelled">
            <summary>
            Default: "Prefetch Canceled! => {0} of {1}";
            </summary>
        </member>
        <member name="F:GMap.NET.TilePrefetcherEnh.zoomfinal">
            <summary>
            When consecutive TilePrefetcherEnh will be called,
            indicate the final zoom level to achieve
            Only for label progress text
            If -1 will be ignored
            </summary>
        </member>
        <member name="F:GMap.NET.TilePrefetcherEnh.ShowCompleteMessage">
            <summary>
            If true, a message box will be displayed et the end of the process
            </summary>
        </member>
        <member name="F:GMap.NET.TilePrefetcherEnh.Overlay">
            <summary>
            Associated gmap overlay in which to draw downloaded tiles
            Can be null
            </summary>
        </member>
        <member name="F:GMap.NET.TilePrefetcherEnh.Shuffle">
            <summary>
            If true, tiles will be shuffled for download
            </summary>
        </member>
        <member name="M:GMap.NET.TilePrefetcherEnh.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GMap.NET.TilePrefetcherEnh.Start(GMap.NET.RectLatLng,System.Int32,GMap.NET.MapProviders.GMapProvider,System.Int32,System.Int32)">
            <summary>
            Start prefetch
            </summary>
            <param name="area">area to download</param>
            <param name="zoom">zoom level to download</param>
            <param name="provider">gmap provider</param>
            <param name="sleep">sleep</param>
            <param name="retry">retry</param>
        </member>
        <member name="M:GMap.NET.TilePrefetcherEnh.Stop">
            <summary>
            Stop prefetch
            </summary>
        </member>
        <member name="F:GMap.NET.TilePrefetcherEnh.CachedTiles">
            <summary>
            List of cached tiles
            </summary>
        </member>
        <member name="F:GMap.NET.TilePrefetcherEnh.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GMap.NET.TilePrefetcherEnh.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GMap.NET.TilePrefetcherEnh.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpaceEyeTools.ColorRGB">
            <summary>
            A class to describe a color based on RGB values
            </summary>
        </member>
        <member name="F:SpaceEyeTools.ColorRGB.R">
            <summary>
            Red component
            </summary>
        </member>
        <member name="F:SpaceEyeTools.ColorRGB.G">
            <summary>
            Green component
            </summary>
        </member>
        <member name="F:SpaceEyeTools.ColorRGB.B">
            <summary>
            Blue component
            </summary>
        </member>
        <member name="M:SpaceEyeTools.ColorRGB.#ctor(System.Drawing.Color)">
            <summary>
            Constructor
            </summary>
            <param name="value">Color to copy</param>
        </member>
        <member name="M:SpaceEyeTools.ColorRGB.op_Implicit(SpaceEyeTools.ColorRGB)~System.Drawing.Color">
            <summary>
            Implicit operator
            </summary>
            <param name="rgb">Color to copy</param>
            <returns>Color</returns>
        </member>
        <member name="M:SpaceEyeTools.ColorRGB.op_Explicit(System.Drawing.Color)~SpaceEyeTools.ColorRGB">
            <summary>
            Explicit operator
            </summary>
            <param name="c">Color to copy</param>
            <returns>ColorRGB</returns>
        </member>
        <member name="M:SpaceEyeTools.ColorRGB.HSL2RGB(System.Double,System.Double,System.Double)">
            <summary>
            Given H,S,L in range of 0-1
            Returns a Color (RGB struct) in range of 0-255
            </summary>
            <param name="h">h value</param>
            <param name="sl">sl value</param>
            <param name="l">l value</param>
            <returns>Returns a Color (RGB struct) in range of 0-255</returns>
        </member>
        <member name="M:SpaceEyeTools.ColorRGB.RGB2HSL(SpaceEyeTools.ColorRGB,System.Double@,System.Double@,System.Double@)">
            <summary>
            Given a Color (RGB Struct) in range of 0-255
            Return H,S,L in range of 0-1
            </summary>
            <param name="rgb">RGB value</param>
            <param name="h">Return H in range of 0-1</param>
            <param name="s">Return S in range of 0-1</param>
            <param name="l">Return L in range of 0-1</param>
        </member>
        <member name="T:SpaceEyeTools.HMI.ConfigEditor">
            <summary>
            A simple form to edit configuration file
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.ConfigEditor.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.ConfigEditor.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Override escape sequence during TextBox editing
            </summary>
            <param name="msg">message</param>
            <param name="keyData">key data</param>
            <returns></returns>
        </member>
        <member name="F:SpaceEyeTools.HMI.ConfigEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.ConfigEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.ConfigEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpaceEyeTools.HMI.CoordConvHMI">
            <summary>
            Form that perform coordinates conversion
            Also holds statis methods to perform conversions
            DD.DDDDDD : 48.769408 1.967473
            DD° MM.MMM : N 48° 46.164 E 01° 58.048
            DD° MM' SS.SSS : N 48° 46' 9.9 E 01° 58' 2.9
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.CoordConvHMI._sErrorValue">
            <summary>
            Error value during a conversion
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.CoordConvHMI.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.CoordConvHMI.LoadCoordDDD(System.Double,System.Double)">
            <summary>
            Load coordinates in decimal degrees
            E.g. N 48° 46.409 E 001° 58.029
            LoadCoordDDD(48.77348, 1.96715)
            </summary>
            <param name="lat">latitude</param>
            <param name="lon">longitude</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.CoordConvHMI.LoadCoordDDMMM(System.String,System.String)">
            <summary>
            Load coordinates in this format:
            N 48° 46.164 E 01° 58.048
            </summary>
            <param name="lat">latitude</param>
            <param name="lon">longitude</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.CoordConvHMI.DDMMSSStoDDD(System.String,System.String@,System.String@)">
            <summary>
            converts coordinates from DDMMM to DDD
            From DD.DDDDDD : 48.769408 1.967473
            To DD° MM' SS.SSS : N 48° 46' 9.9 E 01° 58' 2.9
            </summary>
            <param name="LatLonDDMMSSS">coordinates to convert</param>
            <param name="sLat">output, N or S</param>
            <param name="sLon">output, E or W</param>
            <returns>true if coordinates are valid</returns>
        </member>
        <member name="M:SpaceEyeTools.HMI.CoordConvHMI.DDMMMtoDDD(System.String,System.String@,System.String@)">
            <summary>
            converts coordinates from DDMMM to DDD
            From DD° MM.MMM : N 48° 46.164 E 01° 58.048
            To DD.DDDDDD : 48.769408 1.967473
            </summary>
            <param name="LatLonDDMMM">coordinates to convert</param>
            <param name="sLat">output, N or S</param>
            <param name="sLon">output, E or W</param>
            <returns>true if coordinates are valid</returns>
        </member>
        <member name="M:SpaceEyeTools.HMI.CoordConvHMI.ConvertDegreesToDDMMSSTT(System.Double,System.Boolean)">
            <summary>
            Convert decimal degrees to minutes, seconds, tenths of seconds
            </summary>
            <param name="decimal_degrees">value to convert</param>
            <param name="bLat">true if value is a latitude</param>
            <returns>converted coordinate</returns>
        </member>
        <member name="M:SpaceEyeTools.HMI.CoordConvHMI.ConvertDegreesToDDMM(System.Double,System.Boolean)">
            <summary>
            Convert one degree value in DDMM
            </summary>
            <param name="value">value to convert</param>
            <param name="bLat">true if value is a latitude</param>
            <returns>converted coordinate</returns>
        </member>
        <member name="M:SpaceEyeTools.HMI.CoordConvHMI.ConvertDegreesToDDMMSSTT(System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            Convert decimal degrees to minutes, seconds, tenths of seconds
            NO SAFETY CHECK HERE !!!
            </summary>
            <param name="decimal_degrees">decimal degrees</param>
            <param name="minutes">minutes</param>
            <param name="seconds">seconds</param>
            <param name="tenths">tenths of seconds</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.CoordConvHMI.CheckLonLatValidity(System.String,System.Boolean)">
            <summary>
            Check if longitude and latitude in decimal degrees are within valid range
            </summary>
            <param name="decimal_degrees">longitude or latitude</param>
            <param name="bLat">True if latitude</param>
            <returns>true if value is correct</returns>
        </member>
        <member name="M:SpaceEyeTools.HMI.CoordConvHMI.CheckLonLatValidity(System.String,System.String)">
            <summary>
            Check if longitude and latitude in decimal degrees are within valid range
            </summary>
            <param name="decimal_degrees_lon">longitude in decimal degrees (-180 / +180)</param>
            <param name="decimal_degrees_lat">latitude in decimal degrees (-90 / +90)</param>
            <returns>true if both values are correct</returns>
        </member>
        <member name="M:SpaceEyeTools.HMI.CoordConvHMI.CheckLonLatValidity(System.Double,System.Boolean)">
            <summary>
            Check if longitude and latitude in decimal degrees are within valid range
            </summary>
            <param name="decimal_degrees">longitude or latitude</param>
            <param name="bLat">True if latitude</param>
            <returns>true if value is correct</returns>
        </member>
        <member name="M:SpaceEyeTools.HMI.CoordConvHMI.CheckLonLatValidity(System.Double,System.Double)">
            <summary>
            Check if longitude and latitude in decimal degrees are within valid range
            </summary>
            <param name="decimal_degrees_lon">longitude in decimal degrees (-180 / +180)</param>
            <param name="decimal_degrees_lat">latitude in decimal degrees (-90 / +90)</param>
            <returns>true if both values are correct</returns>
        </member>
        <member name="F:SpaceEyeTools.HMI.CoordConvHMI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.CoordConvHMI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.CoordConvHMI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpaceEyeTools.HMI.NamespaceReflector">
            <summary>
            Mwahaha, a form that performs reflection on the loaded assembly
            Exposes all public elements of this assembly in a tree and display associated documentation
            as a tooltip
            A true masterpiece ;-)
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.Reflection_Namespace">
            <summary>
            Image used for namespace
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.Reflection_Class">
            <summary>
            Image used for class
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.Reflection_Method">
            <summary>
            Image used for method
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.Reflection_Constructor">
            <summary>
            Image used for constructor
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.Reflection_Field">
            <summary>
            Image used for field
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.Reflection_Property">
            <summary>
            Image used for property
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.Reflection_Interface">
            <summary>
            Image used for interface
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.Reflection_Enum">
            <summary>
            Image used for enumeration
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.Reflection_EnumValue">
            <summary>
            Image used for enumeration value
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.AuthorizedNamespaces">
            <summary>
            List of namespaces authorized for parsing and reflection
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.NamespaceReflector.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="title">form title</param>
            <param name="docfile">path to document file in XML standard documentation format</param>
        </member>
        <member name="T:SpaceEyeTools.HMI.NamespaceReflector.ReflectionImage_Type">
            <summary>
            Enumeration defining which type of parameter shall be created
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.ReflectionImage_Type.Reflection_Namespace">
            <summary>
            Value of enum for namespace
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.ReflectionImage_Type.Reflection_Class">
            <summary>
            Value of enum for class
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.ReflectionImage_Type.Reflection_Method">
            <summary>
            Value of enum for method
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.ReflectionImage_Type.Reflection_Constructor">
            <summary>
            Value of enum for constructor
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.ReflectionImage_Type.Reflection_Field">
            <summary>
            Value of enum for field
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.ReflectionImage_Type.Reflection_Property">
            <summary>
            Value of enum for property
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.ReflectionImage_Type.Reflection_Interface">
            <summary>
            Value of enum for interface
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.ReflectionImage_Type.Reflection_Enum">
            <summary>
            Value of enum for enumeration
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.ReflectionImage_Type.Reflection_EnumValue">
            <summary>
            Value of enum for enum value
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.NamespaceReflector.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.NamespaceReflector.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.NamespaceReflector.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpaceEyeTools.HMI.NodeSorter">
            <summary>
            Sorter for nodes
            Performs comparison on node Tag value
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.NodeSorter.Compare(System.Object,System.Object)">
            <summary>
            Comparer methode
            </summary>
            <param name="x">first object</param>
            <param name="y">second object</param>
            <returns>-1 if x inferior to Y, 0 if equals, +1 if superior to y</returns>
        </member>
        <member name="T:SpaceEyeTools.HMI.ColorChooser">
            <summary>
            Form to select a color among the KnownColor enumeration.
            Not used in MGM ;-)
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.ColorChooser.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ColorChooser.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.ColorChooser.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.ColorChooser.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpaceEyeTools.HMI.ComboItem">
            <summary>
            Custom combobox item
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ComboItem.Text">
            <summary>
            Get / Set item text
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ComboItem.Value">
            <summary>
            Get / Set item value
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.ComboItem.ToString">
            <summary>
            ToString overrid
            </summary>
            <returns>Returns Text attribute</returns>
        </member>
        <member name="T:SpaceEyeTools.HMI.ParametersChanger">
            <summary>
            Custom form to display as many input controls with associated labels for various value types
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParametersChanger.OpenfileTitle">
            <summary>
            
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParametersChanger.OpenfileBtn">
            <summary>
            
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParametersChanger.CtrlCallbackCoordinates">
            <summary>
            Get the first control that handle coordinates (if applicable)
            Can be used to be automatically modified during a callback
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParametersChanger.CtrlCallbackRadius">
            <summary>
            Get the first control that handle radius (if applicable)
            Can be used to be automatically modified during a callback
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParametersChanger.HandlerDisplayCoord">
            <summary>
            Set handler to display coordinates (lat, lon)
            Also set an icon
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParametersChanger.DisplayCoordImage">
            <summary>
            Set an icon for button to display coordinates
            Also set an handler to display coordinates (lat, lon)
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParametersChanger.Parameters">
            <summary>
            Get / Set list of parameters to modify
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParametersChanger.Title">
            <summary>
            Set form title
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParametersChanger.ErrorFormater">
            <summary>
            Set message string format for error display
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParametersChanger.ErrorTitle">
            <summary>
            Set error title label
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParametersChanger.BtnOK">
            <summary>
            Set ok button label
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParametersChanger.BtnCancel">
            <summary>
            Set cancel button label
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.ParametersChanger.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.ParametersChanger.ConvertCoordinates(System.String)">
            <summary>
            Convert coordinnates from any supported format to three formats
            </summary>
            <param name="coords">Coordinates to convert</param>
            <returns>Converted coordinates (with #ERR if error)</returns>
        </member>
        <member name="M:SpaceEyeTools.HMI.ParametersChanger.CreateControls">
            <summary>
            Force controls creation before OnLoad
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ParametersChanger.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.ParametersChanger.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.ParametersChanger.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpaceEyeTools.HMI.ParameterObject">
            <summary>
            Parameter class used with ParametersChanger
            </summary>
        </member>
        <member name="T:SpaceEyeTools.HMI.ParameterObject.ParameterType">
            <summary>
            Enumeration defining which type of parameter shall be created
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ParameterObject.ParameterType.None">
            <summary>
            Default type, shall not be used except for initialisation
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ParameterObject.ParameterType.String">
            <summary>
            Parameter is a String
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ParameterObject.ParameterType.TextBox">
            <summary>
            Parameter is a multiline String
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ParameterObject.ParameterType.Password">
            <summary>
            Parameter is a String but password style (only dots are visible)
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ParameterObject.ParameterType.Bool">
            <summary>
            Parameter is a Boolean
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ParameterObject.ParameterType.Int">
            <summary>
            Parameter is an Interger 32 bits
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ParameterObject.ParameterType.Double">
            <summary>
            Parameter is a Double 32 bits
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ParameterObject.ParameterType.Coordinates">
            <summary>
            Parameter is a coordinate un decimal degrees, DD MM.MMM or DD MM SSS
            First logitude, then latitude
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ParameterObject.ParameterType.List">
            <summary>
            Parameter is a List
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ParameterObject.ParameterType.Label">
            <summary>
            Parameter is a text Label
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ParameterObject.ParameterType.Color">
            <summary>
            Parameter is a color dialog picker
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ParameterObject.ParameterType.Date">
            <summary>
            Parameter is a date picker
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ParameterObject.ParameterType.CheckList">
            <summary>
            Parameter is a multi check item list
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ParameterObject.ParameterType.Radius">
            <summary>
            Parameter is a positive integer for radius (used with Coordinates)
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ParameterObject.ParameterType.OpenFile">
            <summary>
            Parameter is an existing file
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParameterObject.ImagesForCheckList">
            <summary>
            Get / Set list of images for a CheckList only
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParameterObject.ReadOnly">
            <summary>
            Set Readonly status
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParameterObject.Disabled">
            <summary>
            Get disabled status
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParameterObject.ListForbidenValues">
            <summary>
            Get list of forbiden values if defined
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParameterObject.Ctrl">
            <summary>
            Set a specific control for this parameter
            Control shall ba aligned with parameter type
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParameterObject.eType">
            <summary>
            Get parameter type (enum)
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParameterObject.Type">
            <summary>
            Get parameter type (string)
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParameterObject.DisplayName">
            <summary>
            Get name to display for this parameter
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParameterObject.TooltipText">
            <summary>
            Get tooltiptext
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParameterObject.DefaultListValue">
            <summary>
            Get / Set default list value for List parameter
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParameterObject.ListCheckedValue">
            <summary>
            Get / Set default checked values for CheckList parameter
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParameterObject.InternalKey">
            <summary>
            Get internal key for this parameter
            Not really used
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParameterObject.Value">
            <summary>
            Get parameter value as a string
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParameterObject.ValueIndex">
            <summary>
            Get index of selected value
            Only representative for ParameterType.List
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParameterObject.ValueIndexes">
            <summary>
            Get index of selected valuees
            Only representative for ParameterType.CheckList
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ParameterObject.ValueO">
            <summary>
            Get parameter value as an object
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.ParameterObject.#ctor(SpaceEyeTools.HMI.ParameterObject.ParameterType,System.Object,System.String,System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="type">parameter type</param>
            <param name="value">parameter initial value</param>
            <param name="sKey">parameter key</param>
            <param name="sName">parameter display name</param>
            <param name="disabled">if true parameter is disabled</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.ParameterObject.#ctor(SpaceEyeTools.HMI.ParameterObject.ParameterType,System.Object,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="type">parameter type</param>
            <param name="value">parameter initial value</param>
            <param name="sKey">parameter key</param>
            <param name="sName">parameter display name</param>
            <param name="sTooltipText">tooltip display value (can be null)</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.ParameterObject.#ctor(SpaceEyeTools.HMI.ParameterObject.ParameterType,System.Object,System.String,System.String,System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            Constructor
            </summary>
            <param name="type">parameter type</param>
            <param name="value">parameter initial value</param>
            <param name="sKey">parameter key</param>
            <param name="sName">parameter display name</param>
            <param name="sTooltipText">tooltip display value (can be null)</param>
            <param name="lListForbidenValues">list of forbiden values, only valy for these types: Color, Password, String</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.ParameterObject.ToString">
            <summary>
            ToString override
            </summary>
            <returns>string value</returns>
        </member>
        <member name="M:SpaceEyeTools.HMI.ParameterObject.GetControlValueString">
            <summary>
            Get parameter value from control
            </summary>
            <returns>Parameter value as a string</returns>
        </member>
        <member name="M:SpaceEyeTools.HMI.ParameterObject.SplitLongitudeLatitude(System.String,System.Double@,System.Double@)">
            <summary>
            Text is latitude then longitude in decimal degrees
            </summary>
            <param name="text">Text is latitude then longitude in decimal degrees</param>
            <param name="dlon">longitude</param>
            <param name="dlat">latitude</param>
            <returns>true is split succeeded</returns>
        </member>
        <member name="M:SpaceEyeTools.HMI.ParameterObject.TryToConvertCoordinates(System.String,System.String@,System.String@)">
            <summary>
            Try to convert coordinates from any format to decimal degrees
            </summary>
            <param name="ctrltxt">latitude and longitude</param>
            <param name="sLat">valid latitude or #ERR</param>
            <param name="sLon">valid longitude or #ERR</param>
            <returns>True if both coordinates are valid</returns>
        </member>
        <member name="M:SpaceEyeTools.HMI.ParameterObject.UpdateValueFromControl">
            <summary>
            Update value of parameter from the one in the control
            </summary>
            <returns>true is control value is valid</returns>
        </member>
        <member name="T:SpaceEyeTools.HMI.MyMessageBox">
            <summary>
            Custom form to display a message MessageBox replacement) with support
            of icons and type of answer
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.MyMessageBox._iMaxWidth">
            <summary>
            Maximum width for the window
            If larger, scrollbars will be used
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.MyMessageBox._iMaxHeight">
            <summary>
            Maximum height for the window
            If longer, scrollbars will be used
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.MyMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxIcon,SpaceEyeTools.TranslationManager,System.String,System.String,System.Drawing.Image)">
            <summary>
            Create a message box
            </summary>
            <param name="msg">Message</param>
            <param name="title">Title</param>
            <param name="icon">Icon</param>
            <param name="translator">reference to a translator to translate OK and Cancel buttons</param>
            <param name="lblYes">If not null and not empty, label for the Yes button (of key forthis label if translator provided)</param>
            <param name="lblNo">If not null and not empty, label for the No button (of key forthis label if translator provided)</param>
            <param name="img">can replace icon</param>
            <returns>result of user validation</returns>
        </member>
        <member name="M:SpaceEyeTools.HMI.MyMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxIcon,SpaceEyeTools.HMI.ParameterObject,SpaceEyeTools.TranslationManager,System.String,System.String)">
            <summary>
            Create a message box
            </summary>
            <param name="msg">Message</param>
            <param name="title">Title</param>
            <param name="icon">Icon</param>
            <param name="extraCheckBox">Title for an extra checkbox at the bottom of the message box. If NULL or type different of BOOL or label empty, no extra checkbox</param>
            <param name="translator">reference to a translator to translate OK and Cancel buttons</param>
            <param name="lblYes">If not null and not empty, label for the Yes button (of key forthis label if translator provided)</param>
            <param name="lblNo">If not null and not empty, label for the No button (of key forthis label if translator provided)</param>
            <returns>result of user validation</returns>
        </member>
        <member name="M:SpaceEyeTools.HMI.MyMessageBox.Show(System.String,System.String,System.Drawing.Image,SpaceEyeTools.TranslationManager,System.String,System.String)">
            <summary>
            Create a message box
            </summary>
            <param name="msg">Message</param>
            <param name="title">Title</param>
            <param name="img">custom image to display</param>
            <param name="translator">reference to a translator to translate OK and Cancel buttons</param>
            <param name="lblYes">If not null and not empty, label for the Yes button (of key forthis label if translator provided)</param>
            <param name="lblNo">If not null and not empty, label for the No button (of key forthis label if translator provided)</param>
            <returns>result of user validation</returns>
        </member>
        <member name="M:SpaceEyeTools.HMI.MyMessageBox.#ctor(System.String,System.String,System.Windows.Forms.MessageBoxIcon,System.Drawing.Image,SpaceEyeTools.HMI.ParameterObject,SpaceEyeTools.TranslationManager,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="msg">Message</param>
            <param name="title">Title</param>
            <param name="icon">Icon</param>
            <param name="img">custom image to display</param>
            <param name="extraCheckBox">Title for an extra checkbox at the bottom of the message box. If NULL or type different of BOOL or label empty, no extra checkbox</param>
            <param name="translator">reference to a translator to translate OK and Cancel buttons</param>
            <param name="lblYes">If not null and not empty, label for the Yes button (of key forthis label if translator provided)</param>
            <param name="lblNo">If not null and not empty, label for the No button (of key forthis label if translator provided)</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.MyMessageBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Handler to process key pressed
            Deals with CTRL+A to select all text
            </summary>
            <param name="msg">message</param>
            <param name="keyData">key data</param>
            <returns>true</returns>
        </member>
        <member name="F:SpaceEyeTools.HMI.MyMessageBox.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.MyMessageBox.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.MyMessageBox.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.MyMessageBox.button1">
            <summary>
            OK button
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.MyMessageBox.button2">
            <summary>
            Cancel button
            </summary>
        </member>
        <member name="T:SpaceEyeTools.HMI.Splashscreen">
            <summary>
            Lovely splashscreen window used during MGM startup
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.Splashscreen.ExtraInfo">
            <summary>
            Get / Set extra info
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.Splashscreen.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.Splashscreen.AssemblyVersion">
            <summary>
            Get executing assembly version 
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.Splashscreen.AssemblySubVersion">
            <summary>
            Get / Set assembly subversion
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.Splashscreen.AssemblyProduct">
            <summary>
            Get assembly product name
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.Splashscreen.SetMaximumSteps(System.Int32)">
            <summary>
            Set maximum number of steps for progress bar
            </summary>
            <param name="iMax">number of steps</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.Splashscreen.UpdateInfo(System.String,System.Boolean)">
            <summary>
            Update one information and performs a step
            </summary>
            <param name="info">information to display</param>
            <param name="dostep">if true, perform step on progress bar</param>
            <returns>always true</returns>
        </member>
        <member name="M:SpaceEyeTools.HMI.Splashscreen.GetSplashScreen(System.Boolean@)">
            <summary>
            Return full path to splashscreen image
            </summary>
            <param name="bExtra">return true if extra image used</param>
            <returns>full path to splashscreen image</returns>
        </member>
        <member name="F:SpaceEyeTools.HMI.Splashscreen.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.Splashscreen.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.Splashscreen.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpaceEyeTools.HMI.ThreadProgress">
            <summary>
            Custom progress form, using a progress bar with accurate remaining time,
            abort button, or an animated GIF
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ThreadProgress._bAbort">
            <summary>
            If true, progress shall be aborted
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.ThreadProgress.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:SpaceEyeTools.HMI.ThreadProgress.CreateParams">
            <summary>
            Get creation parameters 
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.ThreadProgress.Step(System.Int32)">
            <summary>
            Perform a step of n values and update % label
            </summary>
            <param name="n">number of steps to pass</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.ThreadProgress.Step">
            <summary>
            Perform a step and update % label
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.ThreadProgress.ShowAutomaticProgressBar">
            <summary>
            Display automatic progressbar, used when it is not possible
            to compute steps
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.ThreadProgress.StartEstimate">
            <summary>
            Start time estimate
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.ThreadProgress.ComputeEstimateTitle(System.String)">
            <summary>
            Compute and display estimate to complete using provided string format in title
            </summary>
            <param name="msgFormat">string format (only one parameter)</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.ThreadProgress.ComputeEstimatelblWait(System.String)">
            <summary>
            Compute and display estimate to complete using provided string format in lblWait
            </summary>
            <param name="msgFormat">string format (only one parameter)</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.ThreadProgress.StartTimer(System.String,System.Int32)">
            <summary>
            Start time
            </summary>
            <param name="msgFormat">message format to display remaining time</param>
            <param name="howlong">number of iterations before the timer kills itself</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.ThreadProgress.StopTimer">
            <summary>
            Stop the timer
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ThreadProgress.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:SpaceEyeTools.HMI.ThreadProgress.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:SpaceEyeTools.HMI.ThreadProgress.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ThreadProgress.btnAbort">
            <summary>
            Abort button
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ThreadProgress.progressBar1">
            <summary>
            Progress bar
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ThreadProgress.label1">
            <summary>
            Progress bar label
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ThreadProgress.lblWait">
            <summary>
            Message for waiting time
            </summary>
        </member>
        <member name="F:SpaceEyeTools.HMI.ThreadProgress.pictureBox1">
            <summary>
            Picture box (used for GIF animtion instead of progressbar)
            </summary>
        </member>
        <member name="T:SpaceEyeTools.ExtendedControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:SpaceEyeTools.ExtendedControl.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:SpaceEyeTools.ExtendedControl.IsTransparent">
            <summary>
            Gets or sets the transparency of the control.
            Transparency means you can see the controls beneath this control.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
            
        </member>
        <member name="M:SpaceEyeTools.ExtendedControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SpaceEyeTools.NotificationManager.CloneFont(System.Drawing.Font,System.Single)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="newsize"></param>
            <returns></returns>
        </member>
        <member name="M:SpaceEyeTools.NotificationManager.Show(System.Windows.Forms.Form,System.String,System.Drawing.Color,SpaceEyeTools.NotificationManager.ToastDelay,System.Drawing.Font,System.Boolean)">
            <summary>
            Shows the message to the user.
            </summary>
            <param name="Parent"></param>
            <param name="Message">The message to show.</param>
            <param name="glw">Color of the glow.</param>
            <param name="delay">The time before the message to disappear, in Milliseconds.</param>
            <param name="Fonte"></param>
            <param name="redBackground"></param>
            <remarks></remarks>
        </member>
        <member name="M:SpaceEyeTools.NotificationManager.Show(System.Windows.Forms.Form,System.String,System.Drawing.Color,System.Int32,System.Drawing.Font,System.Boolean)">
            <summary>
            Shows the message to the user.
            </summary>
            <param name="Parent"></param>
            /// <param name="Message">The message to show.</param>
            <param name="glw">Color of the glow.</param>
            <param name="delay">The time before the message to disappear, in Milliseconds.</param>
            <param name="Fonte"></param>
            <param name="redBackground"></param>
            <remarks></remarks>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Escapes.get(System.Char)">
            <summary>
            Gets the escape code for a single character
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Escapes.getInverse(System.String)">
            <summary>
            Gets the character that a hash refers to
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Escapes.BackslashEscapes(System.String)">
            <summary>
            Encodes any escaped characters such as \`, \*, \[ etc
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Escapes.BoldItalic(System.String)">
            <summary>
            Encodes Bold [ * ] and Italic [ _ ] characters
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Escapes.Escape(System.String,System.String)">
            <summary>
            Encodes all chars of the second parameter.
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Escapes.ProblemUrlChars(System.String)">
            <summary>
            encodes problem characters in URLs, such as 
            * _  and optionally ' () []  :
            this is to avoid problems with markup later
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Escapes.Unescape(System.String)">
            <summary>
            swap back in all the special characters we've hidden
            </summary>
        </member>
        <member name="T:SpaceEyeTools.Markdown.MarkdownOptions">
            <summary>
            Markdown is a text-to-HTML conversion tool for web writers
            </summary>
        </member>
        <member name="P:SpaceEyeTools.Markdown.MarkdownOptions.AutoHyperlink">
            <summary>
            when true, (most) bare plain URLs are auto-hyperlinked  
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="P:SpaceEyeTools.Markdown.MarkdownOptions.AutoNewlines">
            <summary>
            when true, RETURN becomes a literal newline  
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="P:SpaceEyeTools.Markdown.MarkdownOptions.EmptyElementSuffix">
            <summary>
            use ">" for HTML output, or " />" for XHTML output
            </summary>
        </member>
        <member name="P:SpaceEyeTools.Markdown.MarkdownOptions.EncodeProblemUrlCharacters">
            <summary>
            when true, problematic URL characters like [, ], (, and so forth will be encoded 
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="P:SpaceEyeTools.Markdown.MarkdownOptions.LinkEmails">
            <summary>
            when false, email addresses will never be auto-linked  
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="P:SpaceEyeTools.Markdown.MarkdownOptions.StrictBoldItalic">
            <summary>
            when true, bold and italic require non-word characters on either side  
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="T:SpaceEyeTools.Markdown.Markdown">
            <summary>
            Markdown is a text-to-HTML conversion tool for web writers. 
            Markdown allows you to write using an easy-to-read, easy-to-write plain text format, 
            then convert it to structurally valid XHTML (or HTML).
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.#ctor">
            <summary>
            Create a new Markdown instance using default options
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.#ctor(System.Boolean)">
            <summary>
            Create a new Markdown instance and optionally load options from a configuration
            file. There they should be stored in the appSettings section, available options are:
            
                Markdown.StrictBoldItalic (true/false)
                Markdown.EmptyElementSuffix (">" or " />" without the quotes)
                Markdown.LinkEmails (true/false)
                Markdown.AutoNewLines (true/false)
                Markdown.AutoHyperlink (true/false)
                Markdown.EncodeProblemUrlCharacters (true/false) 
                
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.#ctor(SpaceEyeTools.Markdown.MarkdownOptions)">
            <summary>
            Create a new Markdown instance and set the options from the MarkdownOptions object.
            </summary>
        </member>
        <member name="P:SpaceEyeTools.Markdown.Markdown.EmptyElementSuffix">
            <summary>
            use ">" for HTML output, or " />" for XHTML output
            </summary>
        </member>
        <member name="P:SpaceEyeTools.Markdown.Markdown.LinkEmails">
            <summary>
            when false, email addresses will never be auto-linked  
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="P:SpaceEyeTools.Markdown.Markdown.StrictBoldItalic">
            <summary>
            when true, bold and italic require non-word characters on either side  
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="P:SpaceEyeTools.Markdown.Markdown.AutoNewLines">
            <summary>
            when true, RETURN becomes a literal newline  
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="P:SpaceEyeTools.Markdown.Markdown.AutoHyperlink">
            <summary>
            when true, (most) bare plain URLs are auto-hyperlinked  
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="P:SpaceEyeTools.Markdown.Markdown.EncodeProblemUrlCharacters">
            <summary>
            when true, problematic URL characters like [, ], (, and so forth will be encoded 
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="F:SpaceEyeTools.Markdown.Markdown._nestDepth">
            <summary>
            maximum nested depth of [] and () supported by the transform; implementation detail
            </summary>
        </member>
        <member name="F:SpaceEyeTools.Markdown.Markdown._tabWidth">
            <summary>
            Tabs are automatically converted to spaces as part of the transform  
            this constant determines how "wide" those tabs become in spaces  
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.#cctor">
            <summary>
            In the static constuctor we'll initialize what stays the same across all transforms.
            </summary>
        </member>
        <member name="P:SpaceEyeTools.Markdown.Markdown.Version">
            <summary>
            current version of MarkdownSharp;  
            see http://code.google.com/p/markdownsharp/ for the latest code or to contribute
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.Transform(System.String)">
            <summary>
            Transforms the provided Markdown-formatted text to HTML;  
            see http://en.wikipedia.org/wiki/Markdown
            </summary>
            <remarks>
            The order in which other subs are called here is
            essential. Link and image substitutions need to happen before
            EscapeSpecialChars(), so that any *'s or _'s in the a
            and img tags get encoded.
            </remarks>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.RunBlockGamut(System.String)">
            <summary>
            Perform transformations that form block-level tags like paragraphs, headers, and list items.
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.RunSpanGamut(System.String)">
            <summary>
            Perform transformations that occur *within* block-level tags like paragraphs, headers, and list items.
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.FormParagraphs(System.String)">
            <summary>
            splits on two or more newlines, to form "paragraphs";    
            each paragraph is then unhashed (if it is a hash) or wrapped in HTML p tag
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.GetNestedBracketsPattern">
            <summary>
            Reusable pattern to match balanced [brackets]. See Friedl's 
            "Mastering Regular Expressions", 2nd Ed., pp. 328-331.
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.GetNestedParensPattern">
            <summary>
            Reusable pattern to match balanced (parens). See Friedl's 
            "Mastering Regular Expressions", 2nd Ed., pp. 328-331.
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.StripLinkDefinitions(System.String)">
            <summary>
            Strips link definitions from text, stores the URLs and titles in hash references.
            </summary>
            <remarks>
            ^[id]: url "optional title"
            </remarks>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.GetBlockPattern">
            <summary>
            derived pretty much verbatim from PHP Markdown
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.HashHTMLBlocks(System.String)">
            <summary>
            replaces any block-level HTML blocks with hash entries
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.TokenizeHTML(System.String)">
            <summary>
            returns an array of HTML tokens comprising the input string. Each token is 
            either a tag (possibly with nested, tags contained therein, such 
            as &lt;a href="&lt;MTFoo&gt;"&gt;, or a run of text between tags. Each element of the 
            array is a two-element array; the first is either 'tag' or 'text'; the second is 
            the actual value.
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.DoAnchors(System.String)">
            <summary>
            Turn Markdown link shortcuts into HTML anchor tags
            </summary>
            <remarks>
            [link text](url "title") 
            [link text][id] 
            [id] 
            </remarks>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.DoImages(System.String)">
            <summary>
            Turn Markdown image shortcuts into HTML img tags. 
            </summary>
            <remarks>
            ![alt text][id]
            ![alt text](url "optional title")
            </remarks>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.DoHeaders(System.String)">
            <summary>
            Turn Markdown headers into HTML header tags
            </summary>
            <remarks>
            Header 1  
            ========  
            
            Header 2  
            --------  
            
            # Header 1  
            ## Header 2  
            ## Header 2 with closing hashes ##  
            ...  
            ###### Header 6  
            </remarks>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.DoHorizontalRules(System.String)">
            <summary>
            Turn Markdown horizontal rules into HTML hr tags
            </summary>
            <remarks>
            ***  
            * * *  
            ---
            - - -
            </remarks>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.DoLists(System.String)">
            <summary>
            Turn Markdown lists into HTML ul and ol and li tags
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.ProcessListItems(System.String,System.String)">
            <summary>
            Process the contents of a single ordered or unordered list, splitting it
            into individual list items.
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.DoCodeBlocks(System.String)">
            <summary>
            /// Turn Markdown 4-space indented code into HTML pre code blocks
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.DoCodeSpans(System.String)">
            <summary>
            Turn Markdown `code spans` into HTML code tags
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.DoItalicsAndBold(System.String)">
            <summary>
            Turn Markdown *italics* and **bold** into HTML strong and em tags
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.DoHardBreaks(System.String)">
            <summary>
            Turn markdown line breaks (two space at end of line) into HTML break tags
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.DoBlockQuotes(System.String)">
            <summary>
            Turn Markdown > quoted blocks into HTML blockquote blocks
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.DoAutoLinks(System.String)">
            <summary>
            Turn angle-delimited URLs into HTML anchor tags
            </summary>
            <remarks>
            &lt;http://www.example.com&gt;
            </remarks>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.Outdent(System.String)">
            <summary>
            Remove one level of line-leading spaces
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.EncodeEmailAddress(System.String)">
            <summary>
            encodes email address randomly  
            roughly 10% raw, 45% hex, 45% dec 
            note that @ is always encoded and : never is
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.EncodeCode(System.String)">
            <summary>
            Encode/escape certain Markdown characters inside code blocks and spans where they are literals
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.EncodeAmpsAndAngles(System.String)">
            <summary>
            Encode any ampersands (that aren't part of an HTML entity) and left or right angle brackets
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.EscapeBackslashes(System.String)">
            <summary>
            Encodes any escaped characters such as \`, \*, \[ etc
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.Unescape(System.String)">
            <summary>
            swap back in all the special characters we've hidden
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.EscapeBoldItalic(System.String)">
            <summary>
            escapes Bold [ * ] and Italic [ _ ] characters
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.EncodeProblemUrlChars(System.String)">
            <summary>
            hex-encodes some unusual "problem" chars in URLs to avoid URL detection problems 
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.EscapeSpecialCharsWithinTagAttributes(System.String)">
            <summary>
            Within tags -- meaning between &lt; and &gt; -- encode [\ ` * _] so they 
            don't conflict with their use in Markdown for code, italics and strong. 
            We're replacing each such character with its corresponding hash 
            value; this is likely overkill, but it should prevent us from colliding 
            with the escape values by accident.
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.Normalize(System.String)">
            <summary>
            convert all tabs to _tabWidth spaces; 
            standardizes line endings from DOS (CR LF) or Mac (CR) to UNIX (LF); 
            makes sure text ends with a couple of newlines; 
            removes any blank lines (only spaces) in the text
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Markdown.Markdown.RepeatString(System.String,System.Int32)">
            <summary>
            this is to emulate what's evailable in PHP
            </summary>
        </member>
        <member name="T:SpaceEyeTools.SimpleCluster">
            <summary>
            A simple cluster to hold mutiple waypoints
            http://fatdevz.blogspot.fr/2013/06/spatial-data-clustering-with-c.html
            </summary>
        </member>
        <member name="P:SpaceEyeTools.SimpleCluster.ID">
            <summary>
            Every cluster has to have an ID. This will be used as means of identification of the current cluster.
            </summary>
        </member>
        <member name="P:SpaceEyeTools.SimpleCluster.NAMES">
            <summary>
            list of product names, in order to represent some additional data that you require.
            This isn't crucial to the clustering algorithm, but you always need some data to tag along with the object.
            </summary>
        </member>
        <member name="P:SpaceEyeTools.SimpleCluster.LAT_LON_CENTER">
            <summary>
            This is the latitude and longitude coordinates of representative point of the cluster (in degrees).
            </summary>
        </member>
        <member name="P:SpaceEyeTools.SimpleCluster.LAT_LON_LIST">
            <summary>
            List of latitude and longitude coordinates participating in the cluster (in degrees)
            </summary>
        </member>
        <member name="M:SpaceEyeTools.SimpleCluster.#ctor(System.Int32,System.String,System.Double,System.Double)">
            <summary>
            Constructor
            The first constructor creates a fresh instance of the cluster. 
            Something to start out with. 
            In the parameters you will see all the data that is needed for the object on first initialization. 
            The "awkward" part of this is adding the name and latitude and longitude in the corresponding lists. 
            On the first run, your cluster center point is the same as the "only" coordinates in the LAT_LON_LIST list. 
            As you remember, this is because at start, each data input entry is treated as a separate cluster. 
            This constructor represents that behavior.
            </summary>
            <param name="id">Identifier</param>
            <param name="name">Name</param>
            <param name="latitude">Center latitude (in degrees)</param>
            <param name="longitude">Center longitude (in degrees)</param>
        </member>
        <member name="M:SpaceEyeTools.SimpleCluster.#ctor(SpaceEyeTools.SimpleCluster)">
            <summary>
            Constructor
            I would like to refer to the second constructor as the "copy" constructor.  
            While iterating through the list I came up to a problem of interfering with object data using the new keyword for an copy of the instance and
            I needed a quick solution for a deep copy of an object. 
            This maybe a bit lazyish to someone, but feel free to implement this any way you want.
            </summary>
            <param name="old">Cluster to copy</param>
        </member>
        <member name="M:SpaceEyeTools.SimpleCluster.ToString">
            <summary>
            ToString override
            </summary>
            <returns>string value</returns>
        </member>
        <member name="M:SpaceEyeTools.SimpleCluster.GetClusterArea">
            <summary>
            Returns area uncluding all clusters elements
            </summary>
            <returns>4 points: UL, UR, BR, BL (in degrees)</returns>
        </member>
        <member name="M:SpaceEyeTools.SimpleCluster.GetClusterCircle(SpaceEyeTools.PointDouble@,System.Double@)">
            <summary>
            Returns englobing circle area of cluster
            </summary>
            <param name="center">circle center (in degrees)</param>
            <param name="radius">circle radius in kilometers</param>
        </member>
        <member name="M:SpaceEyeTools.SimpleCluster.RemoveDuplicates">
            <summary>
            Remove duplicate entries in the cluster
            After a call to ClusterTheData, we have duplicate entries in the cluster
            </summary>
        </member>
        <member name="M:SpaceEyeTools.SimpleCluster.ClusterTheData(System.Collections.Generic.List{SpaceEyeTools.SimpleCluster},System.Double,System.Double)">
            <summary>
            This small piece of code represents the generalized algorithm. 
            The clusterList is loaded from some source, and we have the settings for the latitude and logitude sensitivity. 
            This is the data that is needed to be passed to the ClusterTheData method which will, like the name says, cluster the data. 
            As mentioned, you can surround that method with some kind of a loop if you need multiple clusterizations of the data.
            The latitude and longitude sensitivity represents the means to calculate the outer bounds of the cluster square area. 
            Using the sensitivity variables and the center point of the cluster, it is easy to calculate the outer bounds of the cluster.
            Technically we are going through two loops. 
            One is going through the list of items that we received as a list of data objects and the second one is looping through the temporary dictionary list of clusters. 
            Through each iteration of the first loop we alter the dictionary in some way. 
            In its base, if the current item belongs to a cluster, join the data from the currently inspected item to the cluster, 
            remove the old reference in the dictionary and add the combined object as the new cluster. 
            In case there aren't any cluster that the current item belongs to, create a new item in the dictionary list. 
            Every time a new cluster is created or the current one is altered, recalculate the current latitude and longitude center 
            point of the cluster and set it as the new position in the coordinate system.
            
            I am assuming that you will need new unique IDs when dealing with the resulting list. 
            The only important thing here is for the ID to be unique so the clustering would work. 
            For the unique ID you could implement a function that gives the combined cluster a new ID based on your business logic. 
            Another approach maybe assigning the IDs when looping through the resulting list after the clustering was done. 
            In the end, you may have noticed that you can reiterate through the entire algorithm again with the resulting dictionary cluster list. 
            Of course, that would mean that you are combining those clusters in a bigger cluster, so in accordance to that,
            you would have to change the sensitivity of the clusters, because with the fixed latitude and longitude sensitivities
            you would receive a result that is pretty much the same as previous one.
            The end result of the algorithm gives you a list of items which you can store and edit for later or immediate use.
            
            Complexity
            The time complexity shouldn't be too bad for this algorithm. 
            You are passing through the entire list once and through each iteration you pass through the list of cluster. 
            In worst case scenario it would be something around n*k! where the n is the number of items in the list and k is the number of clusters. 
            In worst case scenario it would be n*n which doesn't make much sense because it would mean that data wasn't clustered at all and we don't want that now, do we?.
            </summary>
            <param name="clusterList">initial source, each element is a cluster</param>
            <param name="latitudeSensitivity">latitude outer bounds of the cluster square area (in degrees)</param>
            <param name="longitutdeSensitivity">longitude outer bounds of the cluster square area (in degrees)</param>
            <returns>final list of clusters</returns>
        </member>
        <member name="M:SpaceEyeTools.SimpleCluster.ClusterTheData(System.Collections.Generic.List{SpaceEyeTools.SimpleCluster},System.Double)">
            <summary>
            This small piece of code represents the generalized algorithm. 
            The clusterList is loaded from some source, and we have the settings for the latitude and logitude sensitivity. 
            This is the data that is needed to be passed to the ClusterTheData method which will, like the name says, cluster the data. 
            As mentioned, you can surround that method with some kind of a loop if you need multiple clusterizations of the data.
            Technically we are going through two loops. 
            One is going through the list of items that we received as a list of data objects and the second one is looping through the temporary dictionary list of clusters. 
            Through each iteration of the first loop we alter the dictionary in some way. 
            In its base, if the current item belongs to a cluster, join the data from the currently inspected item to the cluster, 
            remove the old reference in the dictionary and add the combined object as the new cluster. 
            In case there aren't any cluster that the current item belongs to, create a new item in the dictionary list. 
            Every time a new cluster is created or the current one is altered, recalculate the current latitude and longitude center 
            point of the cluster and set it as the new position in the coordinate system.
            
            I am assuming that you will need new unique IDs when dealing with the resulting list. 
            The only important thing here is for the ID to be unique so the clustering would work. 
            For the unique ID you could implement a function that gives the combined cluster a new ID based on your business logic. 
            Another approach maybe assigning the IDs when looping through the resulting list after the clustering was done. 
            In the end, you may have noticed that you can reiterate through the entire algorithm again with the resulting dictionary cluster list. 
            Of course, that would mean that you are combining those clusters in a bigger cluster, so in accordance to that,
            you would have to change the sensitivity of the clusters, because with the fixed latitude and longitude sensitivities
            you would receive a result that is pretty much the same as previous one.
            The end result of the algorithm gives you a list of items which you can store and edit for later or immediate use.
            
            Complexity
            The time complexity shouldn't be too bad for this algorithm. 
            You are passing through the entire list once and through each iteration you pass through the list of cluster. 
            In worst case scenario it would be something around n*k! where the n is the number of items in the list and k is the number of clusters. 
            In worst case scenario it would be n*n which doesn't make much sense because it would mean that data wasn't clustered at all and we don't want that now, do we?.
            </summary>
            <param name="clusterList">initial source, each element is a cluster</param>
            <param name="radius">radius for outer bounds of the cluster circle area (in degrees)</param>
            <returns>final list of clusters</returns>
        </member>
        <member name="M:SpaceEyeTools.SimpleCluster.CheckIfInCluster(SpaceEyeTools.SimpleCluster,SpaceEyeTools.SimpleCluster,System.Double,System.Double)">
            <summary>
            This is the check I have used for testing if an item belongs to a cluster. 
            In its essence, from the center point of the current cluster in the cluster dictionary list, 
            create an rectangle area using the latitude and longitude sensitivities. 
            The sensitivity is added left and right from the longitude, and up and down to the latitude. 
            A fact that is worth mentioning is that this technique is used quite often in 2D games programming.
            </summary>
            <param name="home">cluster to check if imposter is include in</param>
            <param name="imposter">cluster to check if included in home</param>
            <param name="latitudeSensitivity">latitude outer bounds of the cluster square area</param>
            <param name="longitutdeSensitivity">longitude outer bounds of the cluster square area</param>
            <returns>true if item belongs to a cluster</returns>
        </member>
        <member name="M:SpaceEyeTools.SimpleCluster.CheckIfInCluster(SpaceEyeTools.SimpleCluster,SpaceEyeTools.SimpleCluster,System.Double)">
            <summary>
            This is the check I have used for testing if an item belongs to a cluster. 
            In its essence, from the center point of the current cluster in the cluster dictionary list, 
            create an circle area using the radius. 
            </summary>
            <param name="home">cluster to check if imposter is include in</param>
            <param name="imposter">cluster to check if included in home</param>
            <param name="radius">radius of the cluster circle</param>
            <returns>true if item belongs to a cluster</returns>
        </member>
        <member name="M:SpaceEyeTools.SimpleCluster.CombineClusters(SpaceEyeTools.SimpleCluster,SpaceEyeTools.SimpleCluster)">
            <summary>
            As the method name suggests this is the place where combining of the clusters occurs. 
            This idea is simple. Assign the home cluster as a combined cluster, add the data from the imposter cluster to the combined cluster. 
            Probably some filtering of the data is required, and I am leaving that to the reader to figure that out and design it to his/hers needs. 
            The important part is the re-calibration of the center point of the cluster. 
            You have added new points to the cluster and because of that you have to recalculate the center point. 
            For example, points might be on the one of the edges, and you are just making sure that the cluster is respecting that dynamically, by following the group.
            Also notice that the combined cluster receives the home cluster ID. 
            This ID (even if not unique compared to the original list) is enough for the algorithm to function, and I didn't have the need of special IDs.
            </summary>
            <param name="home">cluster that will be combined with imposter</param>
            <param name="imposter">cluster that will be combined into home</param>
            <returns>compined cluster</returns>
        </member>
        <member name="T:SpaceEyeTools.Coordinate">
            <summary>
            Stupid class to handle coordinates
            </summary>
        </member>
        <member name="P:SpaceEyeTools.Coordinate.Latitude">
            <summary>
            Latitude
            </summary>
        </member>
        <member name="P:SpaceEyeTools.Coordinate.Longitude">
            <summary>
            Longitude
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Coordinate.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.Coordinate.#ctor(System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="latitude">latitude</param>
            <param name="longitude">longitude</param>
        </member>
        <member name="T:SpaceEyeTools.DocumentationReader">
            <summary>
            Parse a documentation file and create a dictionnary
            </summary>
        </member>
        <member name="M:SpaceEyeTools.DocumentationReader.ReadDocumentation(System.String)">
            <summary>
            Read documentation file
            </summary>
            <param name="docfile">documentation file</param>
            <returns>dictionary containing all documentation entries</returns>
        </member>
        <member name="T:SpaceEyeTools.DocumentationElement">
            <summary>
            A documentation element
            </summary>
        </member>
        <member name="F:SpaceEyeTools.DocumentationElement.Name">
            <summary>
            Name of this element
            </summary>
        </member>
        <member name="F:SpaceEyeTools.DocumentationElement.Summary">
            <summary>
            Associated summary
            </summary>
        </member>
        <member name="F:SpaceEyeTools.DocumentationElement.Returns">
            <summary>
            Associated return documentation
            </summary>
        </member>
        <member name="F:SpaceEyeTools.DocumentationElement.Parameters">
            <summary>
            Associated DocumentationElement (parameters of method)
            </summary>
        </member>
        <member name="M:SpaceEyeTools.DocumentationElement.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.DocumentationElement.ToString">
            <summary>
            ToString override
            </summary>
            <returns>stirng value</returns>
        </member>
        <member name="T:SpaceEyeTools.KonamiSequence">
            <summary>
            A class to detected a Konami sequence played with keyoard
            Reminder: up, up, down, down, left, right, left, right, B, A
            </summary>
        </member>
        <member name="P:SpaceEyeTools.KonamiSequence.Position">
            <summary>
            Get / Set position in sequence
            </summary>
        </member>
        <member name="M:SpaceEyeTools.KonamiSequence.IsCompletedBy(System.Windows.Forms.Keys)">
            <summary>
            Check completion of the sequence
            </summary>
            <param name="key">last key pressed</param>
            <returns>true is sequence is completed</returns>
        </member>
        <member name="T:SpaceEyeTools.CRC32">
            <summary>
            Perform CRC32 computation
            </summary>
        </member>
        <member name="F:SpaceEyeTools.CRC32.DefaultPolynomial">
            <summary>
            Default polynomial value (0xedb88320)
            </summary>
        </member>
        <member name="F:SpaceEyeTools.CRC32.DefaultSeed">
            <summary>
            Default seed value (0xffffffff)
            </summary>
        </member>
        <member name="M:SpaceEyeTools.CRC32.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.CRC32.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="polynomial">polynomial value</param>
            <param name="seed">seed value</param>
        </member>
        <member name="M:SpaceEyeTools.CRC32.Initialize">
            <summary>
            Initialize hash
            </summary>
        </member>
        <member name="M:SpaceEyeTools.CRC32.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Calculate Hash
            </summary>
            <param name="buffer">buffer</param>
            <param name="start">start position</param>
            <param name="length">length</param>
        </member>
        <member name="M:SpaceEyeTools.CRC32.HashFinal">
            <summary>
            Performs final hash
            </summary>
            <returns>final hash</returns>
        </member>
        <member name="P:SpaceEyeTools.CRC32.HashSize">
            <summary>
            Get hashsize (32)
            </summary>
        </member>
        <member name="M:SpaceEyeTools.CRC32.Compute(System.Byte[])">
            <summary>
            Compute hash
            </summary>
            <param name="buffer">buffer</param>
            <returns>hash value</returns>
        </member>
        <member name="M:SpaceEyeTools.CRC32.Compute(System.UInt32,System.Byte[])">
            <summary>
            Compute hash
            </summary>
            <param name="seed">seed value</param>
            <param name="buffer">buffer</param>
            <returns>hash value</returns>
        </member>
        <member name="M:SpaceEyeTools.CRC32.Compute(System.UInt32,System.UInt32,System.Byte[])">
            <summary>
            Compute hash
            </summary>
            <param name="polynomial">polynomial value</param>
            <param name="seed">seed value</param>
            <param name="buffer">buffer</param>
            <returns>hash value</returns>
        </member>
        <member name="M:SpaceEyeTools.CRC32.GetCRC(System.String)">
            <summary>
            Get CRC from a file
            </summary>
            <param name="file">file to open (read only)</param>
            <returns>CRC32 value</returns>
        </member>
        <member name="T:SpaceEyeTools.MyTools">
            <summary>
            A lovely "fourre-tout" class that contains various and unrelated functions thet serve my own goals ;-)
            </summary>
        </member>
        <member name="F:SpaceEyeTools.MyTools.random">
            <summary>
            Random generator
            </summary>
        </member>
        <member name="M:SpaceEyeTools.MyTools.StackTraceToString(System.Diagnostics.StackTrace,System.Int32,System.String)">
            <summary>
            Build stacktrace
            </summary>
            <param name="stack">Stacktrace, can be null</param>
            <param name="offset">number of stack frames to ignore</param>
            <param name="prefix">prefix to append in front of each stack line (can be "")</param>
            <returns>stacktrace</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.StackTraceToString(System.Int32,System.String)">
            <summary>
            Build stacktrace
            </summary>
            <param name="offset">number of stack frames to ignore</param>
            <param name="prefix">prefix to append in front of each stack line (can be "")</param>
            <returns>stacktrace</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.Shuffle``1(System.Collections.Generic.List{``0})">
            <summary>
            Shuffle a list
            </summary>
            <typeparam name="T">type of the list</typeparam>
            <param name="deck">list to shuffle</param>
        </member>
        <member name="M:SpaceEyeTools.MyTools.RandomString(System.Int32)">
            <summary>
            Create a random string
            </summary>
            <param name="size">string lentgh</param>
            <returns>random string</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.RandomNumber(System.Int32)">
            <summary>
            Create a random number
            </summary>
            <param name="max">maximum value (included)</param>
            <returns>random number between 0 and max value both included</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.CleanString(System.String)">
            <summary>
            Remove unwanted characters from a string:
            \r\n
            \n
            :
             (space)
            </summary>
            <param name="s">string to clean</param>
            <returns>cleanedc string</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.ConvertUTF8ToNice(System.String)">
            <summary>
            Convert UTF8 text to something readable with lovely accents (ISO-8859-1)
            </summary>
            <param name="s">string to convers</param>
            <returns>converted string</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.ConvertToDoubleFast(System.String)">
            <summary>
            Convert a string to double, regardless the current culture string format
            Will handle . BUT NOT "," as a decimal separator
            </summary>
            <param name="s">string to convert</param>
            <returns>double value</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.ConvertToDouble(System.String)">
            <summary>
            Convert a string to double, regardless the current culture string format
            Will handle . or , as a decimal separator
            </summary>
            <param name="s">string to convert</param>
            <returns>double value</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.GetMD5(System.String)">
            <summary>
            Get MD5 value of a file
            </summary>
            <param name="file">file (read only)</param>
            <returns>MD5 value</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.getNodeValue(System.Xml.XmlNode,System.String)">
            <summary>
            Get node value of an XmlNode
            </summary>
            <param name="node">node</param>
            <param name="key">element key</param>
            <returns>node value</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.getAttributeValue(System.Xml.XmlNode,System.String)">
            <summary>
            Get node attribute value of an XmlNode
            </summary>
            <param name="node">node</param>
            <param name="key">attribute key</param>
            <returns>attribute value</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.getAttributeValue(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Get node attribute value of an XmlNode
            </summary>
            <param name="node">node</param>
            <param name="nodeKey">element key</param>
            <param name="attkey">attribute key</param>
            <returns>attribute value</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.MergeTwoImages(System.Drawing.Image,System.Drawing.Image)">
            <summary>
            Draw first image on top of second image
            </summary>
            <param name="firstImage">first image</param>
            <param name="secondImage">second image</param>
            <returns>new merged image</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.FixedSize(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            Resize an image, preserving aspect ratio and center it on the frame
            </summary>
            <param name="imgPhoto"></param>
            <param name="Width"></param>
            <param name="Height"></param>
            <returns></returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.ResizeImage(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            Resize an image
            </summary>
            <param name="img">image</param>
            <param name="nWidth">new width</param>
            <param name="nHeight">new height</param>
            <returns>resized image</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.Base64ToImage(System.String)">
            <summary>
            Decode base64 string into an image
            </summary>
            <param name="base64String">base64 string</param>
            <returns>decoded image</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.CaseInsensitiveContains(System.String,System.String)">
            <summary>
            Case insensitive contain on a string
            </summary>
            <param name="text">text</param>
            <param name="value">value to search</param>
            <returns>true is value is present in text</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.ImageToBase64(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Encode an image in Base64
            </summary>
            <param name="image">image to encode</param>
            <param name="format">image format</param>
            <returns>encoded image in Base64</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.CreateBitmapImage(System.String)">
            <summary>
            Create an image from a label
            </summary>
            <param name="sImageText">text label</param>
            <returns>created image</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.CreateToolbarImage(System.String,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Create an image from a label
            </summary>
            <param name="sImageText">text label</param>
            <param name="penColor">color for pen (forecolor)</param>
            <param name="backColor">background color</param>
            <returns>created image</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.CreateBitmapImage(System.String,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Create an image from a label
            </summary>
            <param name="sImageText">text label</param>
            <param name="penColor">color for pen (forecolor)</param>
            <param name="backColor">background color</param>
            <returns>created image</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Brush)">
            <summary>
            Draw a rounded rectangle on a Graphic
            </summary>
            <param name="g">graphic</param>
            <param name="p">pen</param>
            <param name="x">x origin in pixels</param>
            <param name="y">y origin in pixels</param>
            <param name="w">width in pixels</param>
            <param name="h">height in pixels</param>
            <param name="rx">round x radius in pixels</param>
            <param name="ry">round y radius in pixels</param>
            <param name="b">brush</param>
        </member>
        <member name="M:SpaceEyeTools.MyTools.FindDuplicateWords(System.String,System.Int32)">
            <summary>
            Find duplicate words in a list
            </summary>
            <param name="v">list of words, separated by a ' ', ',', ';', '.', '\''</param>
            <param name="iMinLength">minimum word length</param>
            <returns>list of duplicate words, separated by '\r\n'</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.GetSnippetFromText(System.String,System.String,System.String)">
            <summary>
            Get a subset from a string, between 2 tags
            exemple:
            "toto is a weird guy"
            tag1 = "is a"
            tag2 = " guy"
            result = " weird"
            If the subset is not found, return ""
            </summary>
            <param name="tag1">beginning tag</param>
            <param name="tag2">end tag (if "", search will only be performed on tag1)</param>
            <param name="text">text to look into</param>
            <returns>If the subset is not found, return "", otherwise a matching subset</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.GetSnippetsFromText(System.String,System.String,System.String)">
            <summary>
            Get all subsets from a string, between 2 tags
            exemple:
            "toto is a weird guy, really is a stupid guy, I think it is a dummy guy"
            tag1 = "is a"
            tag2 = " guy"
            result = " weird", " stupid", " dummy"
            If the subset is not found, return ""
            </summary>
            <param name="tag1">beginning tag</param>
            <param name="tag2">end tag (if "", search will only be performed on tag1)</param>
            <param name="text">text to look into</param>
            <returns>If the subset is not found, return "", otherwise the list of matching subsets</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.DoRegex(System.String,System.String)">
            <summary>
            Execute a regular expression
            </summary>
            <param name="input">input text</param>
            <param name="param">regular expression</param>
            <returns>result</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.PointInPolygon(SpaceEyeTools.PointDouble,SpaceEyeTools.PointDouble[])">
            <summary>
            Check if a point is inside a polygon
            </summary>
            <param name="p">point to check</param>
            <param name="poly">polygon</param>
            <returns>true if point is present inside the polygon</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.CheckWriteAccess(System.String,System.Exception@)">
            <summary>
            Check write access on a path (not a file, a path!)
            </summary>
            <param name="path">path to check</param>
            <param name="exc">return exception</param>
            <returns>true if write access is granted</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.CleanDate(System.String)">
            <summary>
            Clean a date and remove what's after 'T'
            E.g.: yyyy-MM-ddT00:00:1Z ==> yyyy-MM-dd
            </summary>
            <param name="date">date to clean</param>
            <returns>cleaned date</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.CreateBitmapImage(System.String,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>
            Create a bitmap image
            </summary>
            <param name="sImageText">Text of the image</param>
            <param name="penColor">pen color (foreground color)</param>
            <param name="backColor">bckground color</param>
            <param name="bBig">if true, text will use a big font</param>
            <returns>create bitmap</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.WriteCoordinatesToImage(System.String,System.Double,System.Double)">
            <summary>
            Wrtie coordinates into an image exif information
            </summary>
            <param name="Filename">image file</param>
            <param name="dLat">latitude</param>
            <param name="dLong">longitude</param>
        </member>
        <member name="M:SpaceEyeTools.MyTools.LoadExif(System.String)">
            <summary>
            Load exif information from an image
            </summary>
            <param name="FileName">image file</param>
            <returns>raw exif data</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.RemoveDiacritics(System.String)">
            <summary>
            Remove diacritics (accents) from a string
            </summary>
            <param name="stIn">string to clean</param>
            <returns>cleaned strig</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.ChangeFontStyle(System.Drawing.Font,System.Boolean,System.Boolean)">
            <summary>
            Change font style
            </summary>
            <param name="org">font to change</param>
            <param name="bold">true for bold</param>
            <param name="italic">true for italic</param>
            <returns>new font</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.GetCoordinate(System.Net.WebProxy,System.String,SpaceEyeTools.Coordinate@,System.String@)">
            <summary>
            Get coordinate of a city, using http://maps.google.com/maps/api/geocode/json?address={0}
            </summary>
            <param name="proxy">web proxy (can be null)</param>
            <param name="cityName">city name</param>
            <param name="coord"></param>
            <param name="cityFound"></param>
            <returns>true if found</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.FirstCharToUpper(System.String)">
            <summary>
            Convert first character of a string to uppercase
            </summary>
            <param name="s">string</param>
            <returns>converted string</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.ParseDate(System.String)">
            <summary>
            Convert a date into a string
            Date format shall be yyyy-dd-MMTHH:mm:ss
            </summary>
            <param name="de">date (format yyyy-dd-MMTHH:mm:ss)</param>
            <returns>converted date</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.DistanceBetweenPoints(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns approximate distance in kilometers between two points
            </summary>
            <param name="lat1">first point latitude</param>
            <param name="lon1">first point longitude</param>
            <param name="lat2">second point latitude</param>
            <param name="lon2">second point longitude</param>
            <returns>distance in kilometers</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.DegreeToKilometer(System.Double,System.Double)">
            <summary>
            Convert a distance (longitude_distance) expressed in degrees, expressed on a longitude direction,
            in kilometers, assuming your are at latitude latitude_position
            </summary>
            <param name="longitude_distance">distance in degreees to convert</param>
            <param name="latitude_position">position in latitude (degrees) at which computation shall be done</param>
            <returns>distance in kilometers</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.KilometerToDegree(System.Double,System.Double)">
            <summary>
            Convert a distance (kilometer_distance) expressed in kilometers, expressed on a longitude direction,
            in degrees, assuming your are at latitude latitude_position
            </summary>
            <param name="kilometer_distance">distance in kilometers to convert</param>
            <param name="latitude_position">position in latitude (degrees) at which computation shall be done</param>
            <returns>distance in degrees</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.SanitizeFilename(System.String)">
            <summary>
            Replace invalid characters in a filename with ' '
            </summary>
            <param name="filename">filename to clean</param>
            <returns>clean filename</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.GetRequestWithEncoding(System.Uri,System.Net.WebProxy,System.Int32)">
            <summary>
            Get url content (ISO-8859-1 format)
            </summary>
            <param name="uri">url</param>
            <param name="proxy">web proxy (can be null)</param>
            <param name="timeoutMilliseconds">timout delay in milliseconds</param>
            <returns>url content</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.GetHttpRequestWithEncoding(System.String,System.Net.WebProxy,System.Int32)">
            <summary>
            Get url content (ISO-8859-1 format)
            </summary>
            <param name="url">url</param>
            <param name="proxy">web proxy (can be null)</param>
            <param name="timeoutMilliseconds">timout delay in milliseconds</param>
            <returns>HttpWebResponse</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.GetRequest(System.Uri,System.Net.WebProxy,System.Int32)">
            <summary>
            Get url content (standard encoding)
            </summary>
            <param name="uri">url</param>
            <param name="proxy">web proxy (can be null)</param>
            <param name="timeoutMilliseconds">timout delay in milliseconds</param>
            <returns>url content</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.Rating(System.Double,System.Double)">
            <summary >
            Ratings (Lower bound of Wilson score confidence interval for a Bernoulli parameter)
            </summary>    
            <param name="positive">Positive ratings</param>
            <param name="negative">Negative ratings</param>
            <returns>rating</returns>    
        </member>
        <member name="M:SpaceEyeTools.MyTools.RatingSimple(System.Double,System.Double)">
            <summary>
            Rating (simple formula)
            rating = positive / (positive + negative)
            </summary>
            <param name="positive">Positive ratings</param>
            <param name="negative">Negative ratings</param>
            <returns>rating</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.HtmlToXml(System.String)">
            <summary>
            Convert HTML to XML (replace ampersand, inferior and superior)
            </summary>
            <param name="s">HTML</param>
            <returns>XML</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.InsensitiveContainsInStringList(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Insensitive search in string list
            </summary>
            <param name="liste">list of string</param>
            <param name="keyword">string to search</param>
            <returns>true if string is present in list</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.PointInCircle(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            check if a point is inside a circle
            </summary>
            <param name="center_x">Center X</param>
            <param name="center_y">Center Y</param>
            <param name="radius">Radius</param>
            <param name="x">Point X</param>
            <param name="y">Point Y</param>
            <returns>true if point is inside a circle or center Center and radius Radius</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.DownloadFile(System.String,System.Net.WebProxy,System.Net.CookieContainer,System.String)">
            <summary>
            Download a binary file
            </summary>
            <param name="url">Url of file</param>
            <param name="proxy">Proxy (can be null)</param>
            <param name="cookie">Cookie (can be null)</param>
            <param name="localFile">Local file to download url in</param>
        </member>
        <member name="M:SpaceEyeTools.MyTools.FindControl(System.Windows.Forms.ContextMenuStrip,System.String)">
            <summary>
            Recursively find the named control within a ContextMenuStrip
            </summary>
            <param name="parent">Parent ContextMenuStrip to look for within</param>
            <param name="name">Name of the control to look for</param>
            <returns>Found ToolStripMenuItem (or null)</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.FindControl(System.Windows.Forms.ToolStripMenuItem,System.String)">
            <summary>
            Recursively find the named control within a ToolStripMenuItem
            </summary>
            <param name="parent">Parent ToolStripMenuItem to look for within</param>
            <param name="name">Name of the control to look for</param>
            <returns>Found ToolStripMenuItem (or null)</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.FindControl(System.Windows.Forms.Control,System.String)">
            <summary>
            Recursively find the named control. Including within MenuStrip
            </summary>
            <param name="parent">Parent to look for within</param>
            <param name="name">Name of the control to look for</param>
            <returns>Found object (or null)</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.ListControls(System.Object,System.Collections.Generic.List{System.Object}@)">
            <summary>
            Recursively list controls. Including within MenuStrip
            </summary>
            <param name="parent">Parent to look for within. Can be a control, menustrip or toolstripmenuitem</param>
            <param name="lobjs">List of objects to complete. CANNOT BE NULL!</param>
        </member>
        <member name="M:SpaceEyeTools.MyTools.ScrambledEquals``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Check if lists are equal
            </summary>
            <typeparam name="T">Type</typeparam>
            <param name="list1">First list</param>
            <param name="list2">Second list</param>
            <returns>True if list equals</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.IsInstanceOfGenericType(System.Type,System.Object)">
            <summary>
            Check if a type is generic
            </summary>
            <param name="genericType">Type to check against</param>
            <param name="instance">instance</param>
            <returns>true if genetic type</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.ObjectDetails(System.Object,System.String)">
            <summary>
            Full details of this object
            </summary>
            <param name="o">object to inspect</param>
            <param name="prefix">added in front of each line</param>
            <returns>Return full details on object</returns>;
        </member>
        <member name="M:SpaceEyeTools.MyTools.DeleteDirectory(System.String,System.Boolean)">
            <summary>
            Delete (really) a directory, even if not empty
            </summary>
            <param name="path">path to delete</param>
            <param name="recursive">// Delete all files from the folder 'path', but keep all sub-folders and its files</param>
        </member>
        <member name="M:SpaceEyeTools.MyTools.GetBuildDateTime(System.Reflection.Assembly)">
            <summary>
            Usage var buildTime = BuildDate.GetBuildDateTime(Assembly.GetExecutingAssembly());
            </summary>
            <param name="assembly">assembly to inspect</param>
            <returns></returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.GetRegValue(System.String,System.String)">
            <summary>
            Get value of a regedit key
            </summary>
            <param name="path">path in HKEY_LOCAL_MACHINE</param>
            <param name="key">key</param>
            <returns>value or null if not found</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.GetHighestInstalledFramework">
            <summary>
            Returns highest installed framework
            </summary>
            <returns>highest installed framework (such as 4.5.2)</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.GetOSAssembliesFrameworkInfo">
            <summary>
            Return various informations on OS and installed frameworks
            </summary>
            <returns>info</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.VerifyMinFrameworkVersion(System.String)">
            <summary>
            Check if provided framework version is >= 4.5
            </summary>
            <param name="dotnet">version to check</param>
            <returns>true if dotnet >= 4.5</returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.StartCmd(System.String)">
            <summary>
            Start a command with Process.Start
            </summary>
            <param name="cmd">command</param>
        </member>
        <member name="M:SpaceEyeTools.MyTools.StartInNewThread(System.String)">
            <summary>
            Start a command with Process.Start in a new thread
            </summary>
            <param name="cmd">command</param>
        </member>
        <member name="M:SpaceEyeTools.MyTools.getExifCoords(System.String,System.Nullable{System.Double}@,System.Nullable{System.Double}@)">
            <summary>
            
            </summary>
            <param name="filename"></param>
            <param name="latitude"></param>
            <param name="longitude"></param>
        </member>
        <member name="M:SpaceEyeTools.MyTools.StripHtmlTags(System.String,HtmlAgilityPack.HtmlDocument)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.CleanStringOfNonDigits(System.String)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.GetMiddleDate(System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
            <param name="deb"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.DecimateList``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            
            </summary>
            <param name="list"></param>
            <param name="decimation"></param>
            <returns></returns>
        </member>
        <member name="M:SpaceEyeTools.MyTools.ExecuteCommandSync(System.Object)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="T:SpaceEyeTools.TranslationManager">
            <summary>
            Class to manage available translations for MGM
            </summary>
        </member>
        <member name="P:SpaceEyeTools.TranslationManager.Keys">
            <summary>
            Get all available keys for translations
            </summary>
        </member>
        <member name="P:SpaceEyeTools.TranslationManager.Locale">
            <summary>
            Get current language locale
            </summary>
        </member>
        <member name="P:SpaceEyeTools.TranslationManager.Name">
            <summary>
            Get current language name in native language
            </summary>
        </member>
        <member name="P:SpaceEyeTools.TranslationManager.EnglishName">
            <summary>
            Get current language name in english
            </summary>
        </member>
        <member name="M:SpaceEyeTools.TranslationManager.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="filename">translation language file</param>
            <param name="bToLower">if true, keys will be lowered</param>
        </member>
        <member name="M:SpaceEyeTools.TranslationManager.GetInfo(System.String,System.String@,System.String@,System.String@)">
            <summary>
            Retrieve language information from a language file
            </summary>
            <param name="filename">Language file</param>
            <param name="name">Language name in target language (i.e. Français)</param>
            <param name="ename">Language name in English (i.e. French)</param>
            <param name="locale">Language locale (i.e. fr-FR)</param>
        </member>
        <member name="M:SpaceEyeTools.TranslationManager.GetString(System.String)">
            <summary>
            Get a translation from a key (key will be lowered)
            </summary>
            <param name="key">key</param>
            <returns>associated translation for the key</returns>
        </member>
        <member name="M:SpaceEyeTools.TranslationManager.GetStringM(System.String)">
            <summary>
            Get a translation from a key (key will be lowered) and replace # with a return \r\n
            </summary>
            <param name="key">key</param>
            <returns>associated translation for the key</returns>
        </member>
        <member name="M:SpaceEyeTools.TranslationManager.GetStringMV(System.String)">
            <summary>
            Get a translation from a key (key will be lowered) and replace # with a return \r\n
            THIS IS CASE SENSITIVE!
            </summary>
            <param name="key">key</param>
            <returns>associated translation for the key or null if not found!</returns>
        </member>
        <member name="M:SpaceEyeTools.TranslationManager.GetStringU(System.String)">
            <summary>
            Get a translation from a key (key will ***NOT*** be lowered)
            </summary>
            <param name="key">key</param>
            <returns>associated translation for the key</returns>
        </member>
        <member name="T:SpaceEyeTools.PointDouble">
            <summary>
            Stupid class to describe a point with "Double" coordinates
            </summary>
        </member>
        <member name="F:SpaceEyeTools.PointDouble.X">
            <summary>
            X coordinate
            </summary>
        </member>
        <member name="F:SpaceEyeTools.PointDouble.Y">
            <summary>
            Y coordinate
            </summary>
        </member>
        <member name="M:SpaceEyeTools.PointDouble.#ctor">
            <summary>
            Constructor
            Initialise point to (0.0, 0.0)
            </summary>
        </member>
        <member name="M:SpaceEyeTools.PointDouble.#ctor(System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:SpaceEyeTools.PointDouble.ToString">
            <summary>
            ToString override
            </summary>
            <returns>string value</returns>
        </member>
        <member name="T:SpaceEyeTools.StringCipher">
            <summary>
            Class to perform simple and portable string cyphering / decyphering
            </summary>
        </member>
        <member name="M:SpaceEyeTools.StringCipher.CustomEncrypt(System.String)">
            <summary>
            Performs string encryption with padding
            </summary>
            <param name="plainText">plain text</param>
            <returns>encrypted text</returns>
        </member>
        <member name="M:SpaceEyeTools.StringCipher.CustomEncryptNoPadding(System.String)">
            <summary>
            Performs string encryption without padding
            </summary>
            <param name="plainText">plain text</param>
            <returns>encrypted text</returns>
        </member>
        <member name="M:SpaceEyeTools.StringCipher.Encrypt(System.String,System.String)">
            <summary>
            Performs string encryption
            </summary>
            <param name="plainText">plain text</param>
            <param name="passPhrase">pass phrase to authenticate encrypted string</param>
            <returns>encrypted string</returns>
        </member>
        <member name="M:SpaceEyeTools.StringCipher.CustomDecryptNoPadding(System.String,System.String@)">
            <summary>
            Performs string decryption without padding
            </summary>
            <param name="cipherText">encrypted text</param>
            <param name="res">decrypted text</param>
            <returns>true if decryption succeeded</returns>
        </member>
        <member name="M:SpaceEyeTools.StringCipher.CustomDecrypt(System.String,System.String@)">
            <summary>
            Performs string decryption with padding
            </summary>
            <param name="cipherText">encrypted text</param>
            <param name="res">decrypted text</param>
            <returns>true if decryption succeeded</returns>
        </member>
        <member name="M:SpaceEyeTools.StringCipher.Decrypt(System.String,System.String)">
            <summary>
            Performs string decryption
            </summary>
            <param name="cipherText">encrypted text</param>
            <param name="passPhrase">pass phrase to authenticate decrypted text</param>
            <returns>decrypted text</returns>
        </member>
        <member name="T:SpaceEyeTools.EXControls.ComboBoxItem">
            <summary>
            This class represents an ComboBox item of the ImagedComboBox which may contains an image and value.
            </summary>
        </member>
        <member name="P:SpaceEyeTools.EXControls.ComboBoxItem.Value">
            <summary>
            Get / Set Value
            </summary>
        </member>
        <member name="P:SpaceEyeTools.EXControls.ComboBoxItem.Tag">
            <summary>
            Get / Set Tag.
            </summary>
        </member>
        <member name="P:SpaceEyeTools.EXControls.ComboBoxItem.Image">
            <summary>
            Get / Set Item image.
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.ComboBoxItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.ComboBoxItem.#ctor(System.Object)">
            <summary>
            Constructor item without image.
            </summary>
            <param name="value">Item value.</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.ComboBoxItem.#ctor(System.Object,System.Drawing.Image)">
            <summary>
             Constructor item with image.
            </summary>
            <param name="value">Item value.</param>
            <param name="image">Item image.</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.ComboBoxItem.ToString">
            <summary>
            ToString override
            </summary>
            <returns>returns _value</returns>
        </member>
        <member name="T:SpaceEyeTools.EXControls.ComboCollection`1">
            <summary>
            Collections of ComboBoxItem.
            </summary>
            <typeparam name="TComboBoxItem">ComboBoxItem.</typeparam>
        </member>
        <member name="F:SpaceEyeTools.EXControls.ComboCollection`1.UpdateItems">
            <summary>
            EvenHandler called to update items
            </summary>
        </member>
        <member name="P:SpaceEyeTools.EXControls.ComboCollection`1.ItemsBase">
            <summary>
            Get / Set items collection
            </summary>
        </member>
        <member name="P:SpaceEyeTools.EXControls.ComboCollection`1.Item(System.Int32)">
            <summary>
            Accessor
            </summary>
            <param name="index">item index</param>
            <returns>ComboBoxItem at specified index</returns>
        </member>
        <member name="M:SpaceEyeTools.EXControls.ComboCollection`1.Add(SpaceEyeTools.EXControls.ComboBoxItem)">
            <summary>
            Add an item
            </summary>
            <param name="value">new item</param>
            <returns>item index</returns>
        </member>
        <member name="M:SpaceEyeTools.EXControls.ComboCollection`1.IndexOf(SpaceEyeTools.EXControls.ComboBoxItem)">
            <summary>
            Returns index of an item
            </summary>
            <param name="value">item</param>
            <returns>item index</returns>
        </member>
        <member name="M:SpaceEyeTools.EXControls.ComboCollection`1.Insert(System.Int32,SpaceEyeTools.EXControls.ComboBoxItem)">
            <summary>
            Insert an item at a specific position
            </summary>
            <param name="index">position</param>
            <param name="value">item</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.ComboCollection`1.Remove(SpaceEyeTools.EXControls.ComboBoxItem)">
            <summary>
            Remove an item
            </summary>
            <param name="value">item to remove</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.ComboCollection`1.Contains(SpaceEyeTools.EXControls.ComboBoxItem)">
            <summary>
            Check if item is contained
            </summary>
            <param name="value">item</param>
            <returns>true if item is contained</returns>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXComboBox">
            <summary>
            Custom ComboBox control
            Used in EXListView
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXComboBox.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXComboBox.MyHighlightBrush">
            <summary>
            Get / Set custom Highlight brush
            </summary>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXComboBox.EXItem">
            <summary>
            Custom ComboBox item
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXComboBox.EXItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXComboBox.EXItem.#ctor(System.String)">
            <summary>
            Constructor with label
            </summary>
            <param name="text">label</param>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXComboBox.EXItem.Text">
            <summary>
            Get / Set label
            </summary>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXComboBox.EXItem.MyValue">
            <summary>
            Get / Set value
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXComboBox.EXItem.ToString">
            <summary>
            ToString override
            </summary>
            <returns>String version of object</returns>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXComboBox.EXImageItem">
            <summary>
            Custom item with an image
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXComboBox.EXImageItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXComboBox.EXImageItem.#ctor(System.String)">
            <summary>
            Constructor with label
            </summary>
            <param name="text">label</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXComboBox.EXImageItem.#ctor(System.Drawing.Image)">
            <summary>
            Constructor with image
            </summary>
            <param name="image">image</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXComboBox.EXImageItem.#ctor(System.String,System.Drawing.Image)">
            <summary>
            Constructor with label and image
            </summary>
            <param name="text">label</param>
            <param name="image">image</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXComboBox.EXImageItem.#ctor(System.Drawing.Image,System.String)">
            <summary>
            Constructor with value and image
            </summary>
            <param name="image">image</param>
            <param name="value">valye</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXComboBox.EXImageItem.#ctor(System.String,System.Drawing.Image,System.String)">
            <summary>
            Constructor with value, label and image
            </summary>
            <param name="text">label</param>
            <param name="image">image</param>
            <param name="value">value</param>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXComboBox.EXImageItem.MyImage">
            <summary>
            Get / Set image
            </summary>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXComboBox.EXMultipleImagesItem">
            <summary>
            Item with multiple images
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXComboBox.EXMultipleImagesItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXComboBox.EXMultipleImagesItem.#ctor(System.String)">
            <summary>
            Constructor with label
            </summary>
            <param name="text">label</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXComboBox.EXMultipleImagesItem.#ctor(System.Collections.ArrayList)">
            <summary>
            Constructor with images
            </summary>
            <param name="images">images</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXComboBox.EXMultipleImagesItem.#ctor(System.String,System.Collections.ArrayList)">
            <summary>
            Constructor with label and images
            </summary>
            <param name="text">label</param>
            <param name="images">images</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXComboBox.EXMultipleImagesItem.#ctor(System.Collections.ArrayList,System.String)">
            <summary>
            Constructor with value and images
            </summary>
            <param name="images">images</param>
            <param name="value">value</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXComboBox.EXMultipleImagesItem.#ctor(System.String,System.Collections.ArrayList,System.String)">
            <summary>
            Constructor with value, label and images
            </summary>
            <param name="text">label</param>
            <param name="images">images</param>
            <param name="value">value</param>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXComboBox.EXMultipleImagesItem.MyImages">
            <summary>
            Get / Set images
            </summary>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXListView">
            <summary>
            Custom listview with many enhanced features
            This is the one used in MGM MainForm
            </summary>
        </member>
        <member name="F:SpaceEyeTools.EXControls.EXListView._bUseHighlightOnly">
            <summary>
            If true, selected items will not be highlighted, only manually selected items will be highlighted
            If false, selected items and manually selected items will be highlighted
            </summary>
        </member>
        <member name="F:SpaceEyeTools.EXControls.EXListView._clickedsubitem">
            <summary>
            clicked ListViewSubItem
            </summary>
        </member>
        <member name="F:SpaceEyeTools.EXControls.EXListView._clickeditem">
            <summary>
            clicked ListViewItem
            </summary>
        </member>
        <member name="F:SpaceEyeTools.EXControls.EXListView._sortcol">
            <summary>
            Index of clicked columnheader, indicates which column is currently sorted
            </summary>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXListView.EmbeddedControl">
            <summary>
            Used for embedded control inside EXListView
            </summary>
        </member>
        <member name="F:SpaceEyeTools.EXControls.EXListView.EmbeddedControl.MyControl">
            <summary>
            Embedded control reference
            </summary>
        </member>
        <member name="F:SpaceEyeTools.EXControls.EXListView.EmbeddedControl.MySubItem">
            <summary>
            Reference to EXControlListViewSubItem
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Horrible reference to this ol' fuck' WndProc handler
            </summary>
            <param name="m">message</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.AddControlToSubItem(System.Windows.Forms.Control,SpaceEyeTools.EXControls.EXControlListViewSubItem)">
            <summary>
            Add a control to a sub item
            </summary>
            <param name="control">control to add</param>
            <param name="subitem">subitem to host this control</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.RemoveControlFromSubItem(SpaceEyeTools.EXControls.EXControlListViewSubItem)">
            <summary>
            Remove a control from a sub item
            </summary>
            <param name="subitem">reference to a subitem</param>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXListView.ControlPadding">
            <summary>
            Get / Set ControlPadding
            </summary>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXListView.MySortBrush">
            <summary>
            Get / Set brush used for sorting
            </summary>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXListView.MyHighlightBrush">
            <summary>
            Get / Set brush used for highlight
            </summary>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXListView.MySelectBrush">
            <summary>
            Get / Set brush used for selection
            </summary>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXListView.ListViewComparer">
            <summary>
            Custom IComparer used to sort EXListView
            </summary>
        </member>
        <member name="F:SpaceEyeTools.EXControls.EXListView.ListViewComparer._col">
            <summary>
            Index of sorted column
            </summary>
        </member>
        <member name="F:SpaceEyeTools.EXControls.EXListView.ListViewComparer._order">
            <summary>
            Sort order
            </summary>
        </member>
        <member name="F:SpaceEyeTools.EXControls.EXListView.ListViewComparer._nextComparer">
            <summary>
            Comparers are chained.
            Reference to the next comparer in the chain
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.ListViewComparer.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.ListViewComparer.#ctor(System.Int32,System.Windows.Forms.SortOrder)">
            <summary>
            Constructor
            </summary>
            <param name="col">column index</param>
            <param name="order">sort order</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.ListViewComparer.Compare(System.Object,System.Object)">
            <summary>
            Compare method.
            shall not be used, always returns -1
            </summary>
            <param name="x">first object</param>
            <param name="y">second object</param>
            <returns>always -1</returns>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.ListViewComparer.ToString">
            <summary>
            ToString override
            </summary>
            <returns>string value</returns>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.ListViewComparer.GetLastComparer">
            <summary>
            Returns last comparer of the chained list of comparers
            </summary>
            <returns>last comparer of the chained list of comparers</returns>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXListView.ListViewSubItemComparerText">
            <summary>
            Daughter class of ListViewComparer
            Specialized for subitem text comparison
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.ListViewSubItemComparerText.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.ListViewSubItemComparerText.#ctor(System.Int32,System.Windows.Forms.SortOrder)">
            <summary>
            Constructor
            </summary>
            <param name="col">column index</param>
            <param name="order">sort order</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.ListViewSubItemComparerText.Compare(System.Object,System.Object)">
            <summary>
            Compare method
            </summary>
            <param name="x">first object ListViewItem</param>
            <param name="y">second object ListViewItem</param>
            <returns>-1 if x inferior to Y, 0 if equals, +1 if superior to y</returns>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXListView.ListViewSubItemComparerValue">
            <summary>
            Daughter class of ListViewComparer
            Specialized for sub item value comparison
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.ListViewSubItemComparerValue.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.ListViewSubItemComparerValue.#ctor(System.Int32,System.Windows.Forms.SortOrder)">
            <summary>
            Constructor
            </summary>
            <param name="col">column index</param>
            <param name="order">sort order</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.ListViewSubItemComparerValue.Compare(System.Object,System.Object)">
            <summary>
            Compare method
            </summary>
            <param name="x">first object EXListViewSubItemAB</param>
            <param name="y">second object EXListViewSubItemAB</param>
            <returns>-1 if x inferior to Y, 0 if equals, +1 if superior to y</returns>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXListView.ListViewItemComparerText">
            <summary>
            Specialized comparer for item text
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.ListViewItemComparerText.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.ListViewItemComparerText.#ctor(System.Int32,System.Windows.Forms.SortOrder)">
            <summary>
            Constructor
            </summary>
            <param name="col">column index</param>
            <param name="order">sort order</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.ListViewItemComparerText.Compare(System.Object,System.Object)">
            <summary>
            Compare method
            </summary>
            <param name="x">first object ListViewItem</param>
            <param name="y">second object ListViewItem</param>
            <returns>-1 if x inferior to Y, 0 if equals, +1 if superior to y</returns>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXListView.ListViewItemComparerValue">
            <summary>
            Comparer sepcialized for item value
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.ListViewItemComparerValue.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.ListViewItemComparerValue.#ctor(System.Int32,System.Windows.Forms.SortOrder)">
            <summary>
            Constructor
            </summary>
            <param name="col">column index</param>
            <param name="order">sort order</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListView.ListViewItemComparerValue.Compare(System.Object,System.Object)">
            <summary>
            Compare method
            </summary>
            <param name="x">first object EXListViewItem</param>
            <param name="y">second object EXListViewItem</param>
            <returns>-1 if x inferior to Y, 0 if equals, +1 if superior to y</returns>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXColumnHeader">
            <summary>
            Specialization of ColumnHeader
            </summary>
        </member>
        <member name="F:SpaceEyeTools.EXControls.EXColumnHeader._bHidden">
            <summary>
            True if column is hiden (not displayed)
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXColumnHeader.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXColumnHeader.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">column label</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXColumnHeader.#ctor(System.String,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="text">column label</param>
            <param name="width">column width</param>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXEditableColumnHeader">
            <summary>
            Specialized EXColumnHeader : editable column
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXEditableColumnHeader.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXEditableColumnHeader.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">column label</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXEditableColumnHeader.#ctor(System.String,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="text">column label</param>
            <param name="width">column width</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXEditableColumnHeader.#ctor(System.String,System.Windows.Forms.Control)">
            <summary>
            Constructor
            </summary>
            <param name="text">column label</param>
            <param name="control">column specific control for edition</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXEditableColumnHeader.#ctor(System.String,System.Windows.Forms.Control,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="text">colum label</param>
            <param name="control">column specific control for edition</param>
            <param name="width">column width</param>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXEditableColumnHeader.MyControl">
            <summary>
            Get / Set control for edition
            </summary>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXBoolColumnHeader">
            <summary>
            specialized column for handling boolean values only
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXBoolColumnHeader.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXBoolColumnHeader.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">column label</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXBoolColumnHeader.#ctor(System.String,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="text">column label</param>
            <param name="width">column width</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXBoolColumnHeader.#ctor(System.String,System.Drawing.Image,System.Drawing.Image)">
            <summary>
            Constructor
            </summary>
            <param name="text">column label</param>
            <param name="trueimage">column image for TRUE value</param>
            <param name="falseimage">column image for FALSE value</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXBoolColumnHeader.#ctor(System.String,System.Drawing.Image,System.Drawing.Image,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="text">column label</param>
            <param name="trueimage">column image for TRUE value</param>
            <param name="falseimage">column image for FALSE value</param>
            <param name="width">column width</param>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXBoolColumnHeader.TrueImage">
            <summary>
            Get / Set image for TRUE value
            </summary>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXBoolColumnHeader.FalseImage">
            <summary>
            Get / Set image for FALSE value
            </summary>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXBoolColumnHeader.Editable">
            <summary>
            Get / Set scolumn status
            If true, column can be edited
            </summary>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXListViewSubItemAB">
            <summary>
            Abstract class for owner drawn sub item
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListViewSubItemAB.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListViewSubItemAB.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">sub item label</param>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXListViewSubItemAB.MyValue">
            <summary>
            Get / Set sub item value
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListViewSubItemAB.DoDraw(System.Windows.Forms.DrawListViewSubItemEventArgs,System.Int32,SpaceEyeTools.EXControls.EXColumnHeader)">
            <summary>
            Owner drawn method
            </summary>
            <param name="e">event</param>
            <param name="x">x coordinate</param>
            <param name="ch">column header</param>
            <returns>return the new x coordinate</returns>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXListViewSubItem">
            <summary>
            Custom sub item
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListViewSubItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListViewSubItem.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">sub item label</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListViewSubItem.DoDraw(System.Windows.Forms.DrawListViewSubItemEventArgs,System.Int32,SpaceEyeTools.EXControls.EXColumnHeader)">
            <summary>
            Owner drawn method
            </summary>
            <param name="e">event</param>
            <param name="x">x coordinate</param>
            <param name="ch">column header</param>
            <returns>return the new x coordinate</returns>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXControlListViewSubItem">
            <summary>
            Custom sub item holding a control
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXControlListViewSubItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXControlListViewSubItem.MyControl">
            <summary>
            Set / Get control
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXControlListViewSubItem.DoDraw(System.Windows.Forms.DrawListViewSubItemEventArgs,System.Int32,SpaceEyeTools.EXControls.EXColumnHeader)">
            <summary>
            Owner drawn method
            </summary>
            <param name="e">event</param>
            <param name="x">x coordinate</param>
            <param name="ch">column header</param>
            <returns>return the new x coordinate</returns>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXImageListViewSubItem">
            <summary>
            Custom sub item with one image
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXImageListViewSubItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXImageListViewSubItem.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">sub item text</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXImageListViewSubItem.#ctor(System.Drawing.Image)">
            <summary>
            Constructor
            </summary>
            <param name="image">sub item image</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXImageListViewSubItem.#ctor(System.Drawing.Image,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="image">sub item image</param>
            <param name="value">sub item value</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXImageListViewSubItem.#ctor(System.String,System.Drawing.Image,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">sub item label</param>
            <param name="image">sub item image</param>
            <param name="value">sub item value</param>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXImageListViewSubItem.MyImage">
            <summary>
            Get / Set sub item image
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXImageListViewSubItem.DoDraw(System.Windows.Forms.DrawListViewSubItemEventArgs,System.Int32,SpaceEyeTools.EXControls.EXColumnHeader)">
            <summary>
            Owner drawn method
            </summary>
            <param name="e">event</param>
            <param name="x">x coordinate</param>
            <param name="ch">column header</param>
            <returns>return the new x coordinate</returns>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXMultipleImagesListViewSubItem">
            <summary>
            Custom sub item with multiple images
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXMultipleImagesListViewSubItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXMultipleImagesListViewSubItem.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">sub item label</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXMultipleImagesListViewSubItem.#ctor(System.Collections.ArrayList)">
            <summary>
            Constructor
            </summary>
            <param name="images">sub item images</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXMultipleImagesListViewSubItem.#ctor(System.Collections.ArrayList,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="images">sub item images</param>
            <param name="value">sub item value</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXMultipleImagesListViewSubItem.#ctor(System.String,System.Collections.ArrayList,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">sub item label</param>
            <param name="images">sub item images</param>
            <param name="value">sub item value</param>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXMultipleImagesListViewSubItem.MyImages">
            <summary>
            Get / Set sub item images
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXMultipleImagesListViewSubItem.DoDraw(System.Windows.Forms.DrawListViewSubItemEventArgs,System.Int32,SpaceEyeTools.EXControls.EXColumnHeader)">
            <summary>
            Owner drawn method
            </summary>
            <param name="e">event</param>
            <param name="x">x coordinate</param>
            <param name="ch">column header</param>
            <returns>return the new x coordinate</returns>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXBoolListViewSubItem">
            <summary>
            Custom sub item for boolean display
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXBoolListViewSubItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXBoolListViewSubItem.#ctor(System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="val">sub item value</param>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXBoolListViewSubItem.BoolValue">
            <summary>
            Get / Set sub item value
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXBoolListViewSubItem.DoDraw(System.Windows.Forms.DrawListViewSubItemEventArgs,System.Int32,SpaceEyeTools.EXControls.EXColumnHeader)">
            <summary>
            Owner drawn method
            </summary>
            <param name="e">event</param>
            <param name="x">x coordinate</param>
            <param name="ch">column header</param>
            <returns>return the new x coordinate</returns>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXListViewItem">
            <summary>
            Custom standard listviewitem
            </summary>
        </member>
        <member name="F:SpaceEyeTools.EXControls.EXListViewItem._bHighlighted">
            <summary>
            True if item shall be highlighted
            </summary>
        </member>
        <member name="F:SpaceEyeTools.EXControls.EXListViewItem._safeTag">
            <summary>
            Thread safe tag attribute to store miscellaneaous values
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListViewItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXListViewItem.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">item label</param>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXListViewItem.MyValue">
            <summary>
            Get / Set item value
            </summary>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXImageListViewItem">
            <summary>
            Custom item with an image
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXImageListViewItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXImageListViewItem.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">item label</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXImageListViewItem.#ctor(System.Drawing.Image)">
            <summary>
            Constructor
            </summary>
            <param name="image">item image</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXImageListViewItem.#ctor(System.String,System.Drawing.Image)">
            <summary>
            Constructor
            </summary>
            <param name="text">item label</param>
            <param name="image">item image</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXImageListViewItem.#ctor(System.String,System.Drawing.Image,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">item label</param>
            <param name="image">item image</param>
            <param name="value">item value</param>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXImageListViewItem.MyImage">
            <summary>
            Get / Set item image
            </summary>
        </member>
        <member name="T:SpaceEyeTools.EXControls.EXMultipleImagesListViewItem">
            <summary>
            Custom item with multiple images
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXMultipleImagesListViewItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXMultipleImagesListViewItem.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">item label</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXMultipleImagesListViewItem.#ctor(System.Collections.ArrayList)">
            <summary>
            Constructor
            </summary>
            <param name="images">item images</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXMultipleImagesListViewItem.#ctor(System.String,System.Collections.ArrayList)">
            <summary>
            Constructor
            </summary>
            <param name="text">item label</param>
            <param name="images">item images</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.EXMultipleImagesListViewItem.#ctor(System.String,System.Collections.ArrayList,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">item label</param>
            <param name="images">item images</param>
            <param name="value">item value</param>
        </member>
        <member name="P:SpaceEyeTools.EXControls.EXMultipleImagesListViewItem.MyImages">
            <summary>
            Get / Set item images
            </summary>
        </member>
        <member name="T:SpaceEyeTools.EXControls.ImagedComboBox">
            <summary>
            This is a special ComboBox that each item may contains an image.
            </summary>
        </member>
        <member name="P:SpaceEyeTools.EXControls.ImagedComboBox.MyHighlightBrush">
            <summary>
            Get / Set brush used to highlight item
            </summary>
        </member>
        <member name="P:SpaceEyeTools.EXControls.ImagedComboBox.Items">
            <summary>
            The imaged ComboBox items.
            this property is invisibile for design serializer.
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.ImagedComboBox.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:SpaceEyeTools.EXControls.ImagedComboBox.CreateControlsInstance">
            <summary>
            Create controls instances
            </summary>
            <returns>collection of controls</returns>
        </member>
        <member name="M:SpaceEyeTools.EXControls.ImagedComboBox.UpdateItems(System.Object,System.EventArgs)">
            <summary>
            Handles UpdateItems event which fired when an item, added, removed or inserted.
            </summary>
            <param name="sender">sender</param>
            <param name="e">event</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.ImagedComboBox.ComboBox1_MeasureItem(System.Object,System.Windows.Forms.MeasureItemEventArgs)">
            <summary>
            I have set the Draw property to DrawMode.OwnerDrawVariable, so I must caluclate the item measurement.  
            I will set the height and width of each item before it is drawn. 
            </summary>
            <param name="sender">sender</param>
            <param name="e">event</param>
        </member>
        <member name="M:SpaceEyeTools.EXControls.ImagedComboBox.ComboBoxDrawItemEvent(System.Object,System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Draws overrided items.
            </summary>
            <param name="sender">sender</param>
            <param name="e">event</param>
        </member>
        <member name="T:Microsoft.Translation">
            <summary>
            Class used for Bing translation
            </summary>
        </member>
        <member name="P:Microsoft.Translation.Text">
            <summary>
            Get / Set translation text
            </summary>
        </member>
        <member name="T:Microsoft.Language">
            <summary>
            Class used for Bing translation
            </summary>
        </member>
        <member name="P:Microsoft.Language.Code">
            <summary>
            Get / Set language code
            </summary>
        </member>
        <member name="T:Microsoft.DetectedLanguage">
            <summary>
            Class used for Bing translation
            </summary>
        </member>
        <member name="P:Microsoft.DetectedLanguage.Code">
            <summary>
            Get / Set detected language code
            </summary>
        </member>
        <member name="T:Microsoft.TranslatorContainer">
            <summary>
            Class that performs bing translation
            </summary>
        </member>
        <member name="M:Microsoft.TranslatorContainer.#ctor(System.Uri)">
            <summary>
            Constructor
            </summary>
            <param name="serviceRoot">web service URI</param>
        </member>
        <member name="M:Microsoft.TranslatorContainer.Translate(System.String,System.String,System.String)">
            <summary>
            Performs translation
            </summary>
            <param name="Text">the text to translate Sample Values : hello</param>
            <param name="To">the language code to translate the text into Sample Values : nl</param>
            <param name="From">the language code of the translation text Sample Values : en</param>
        </member>
        <member name="M:Microsoft.TranslatorContainer.GetLanguagesForTranslation">
            <summary>
            Get available languages for translation
            </summary>
            <returns>available language</returns>
        </member>
        <member name="M:Microsoft.TranslatorContainer.Detect(System.String)">
            <summary>
            Detect language from text
            </summary>
            <param name="Text">the text whose language is to be identified Sample Values : hello</param>
            <returns>detected language</returns>
        </member>
        <member name="T:Microsoft.BingTranslator">
            <summary>
            Easy to use class to perform Bing translation
            </summary>
        </member>
        <member name="M:Microsoft.BingTranslator.TranslateMethod(System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            Translate a text
            </summary>
            <param name="accountKey">Bing account key</param>
            <param name="sourceLng">source language</param>
            <param name="targetLng">target language</param>
            <param name="inputString">text to translate</param>
            <param name="outputString">translated text</param>
            <returns>error code:
            0 : translation successful
            -1: inputstring is empty
            -2: text cannot be translated (invalid source language or not detected source language)
            -3: error during translation
            </returns>
        </member>
        <member name="M:Microsoft.BingTranslator.InitializeTranslatorContainer(System.String)">
            <summary>
            Creates an instance of a TranslatorContainer that calls the public 
            production MicrosoftTranslator service
            </summary>
            <returns>The generated TranslatorContainer</returns>
        </member>
        <member name="M:Microsoft.BingTranslator.DetectSourceLanguage(Microsoft.TranslatorContainer,System.String)">
            <summary>
            Uses the TranslatorContainer to identify the Language in which inputString was written
            </summary>
            <param name="tc">The TranslatorContainer to use</param>
            <param name="inputString">The string to identify</param>
            <returns>The Language Code for a language that this string could represent,
            or null if one is not found.</returns>
        </member>
        <member name="M:Microsoft.BingTranslator.GetSupportedLanguages(System.String)">
            <summary>
            Asks the service represented by the TranslatorContainer for a list
            of all supported languages.
            </summary>
            <returns>All supported Languages.</returns>
        </member>
        <member name="M:Microsoft.BingTranslator.PickRandomLanguage(Microsoft.TranslatorContainer)">
            <summary>
            Asks the service represented by the TranslatorContainer for a list
            of all supported languages and then picks one at random.
            </summary>
            <param name="tc">The TranslatorContainer to use.</param>
            <returns>A randomly selected Language.</returns>
        </member>
        <member name="M:Microsoft.BingTranslator.TranslateString(Microsoft.TranslatorContainer,System.String,Microsoft.DetectedLanguage,Microsoft.Language)">
            <summary>
            Uses the TranslatorContainer to translate inputString from sourceLanguage
            to targetLanguage.
            </summary>
            <param name="tc">The TranslatorContainer to use</param>
            <param name="inputString">The string to translate</param>
            <param name="sourceLanguage">The Language Code to use in interpreting the input string.</param>
            <param name="targetLanguage">The Language Code to translate the input string to.</param>
            <returns>The translated string, or null if no translation results were found.</returns>
        </member>
        <member name="T:Tsp.Cities">
            <summary>
            This class contains the list of cities for this test.
            Each city has a location and the distance information to every other city.
            </summary>
        </member>
        <member name="M:Tsp.Cities.CalculateCityDistances(System.Int32)">
            <summary>
            Determine the distances between each city.
            </summary>
            <param name="numberOfCloseCities">When creating the initial population of tours, this is a greater chance
            that a nearby city will be chosen for a link. This is the number of nearby cities that will be considered close.</param>
        </member>
        <member name="M:Tsp.Cities.OpenCityList(System.String)">
            <summary>
            Open the XML file that contains the list of cities.
            </summary>
            <param name="fileName">Name of the XML file.</param>
            <returns>The city list.</returns>
            <exception cref="T:System.IO.FileNotFoundException">fileName parameter is invalid.</exception>
            <exception cref="T:System.InvalidCastException">XML File is not properly formatted.</exception>
        </member>
        <member name="M:Tsp.Cities.OpenCityList(System.Collections.Generic.List{MyGeocachingManager.Geocaching.Geocache})">
            <summary>
            Replace the list of cities with the ones created from the provide Geocache list
            </summary>
            <param name="r">list of geocaches</param>
        </member>
        <member name="T:Tsp.City">
            <summary>
            An individual City in our tour.
            </summary>
        </member>
        <member name="M:Tsp.City.#ctor(MyGeocachingManager.Geocaching.Geocache,System.Single,System.Single)">
            <summary>
            Constructor
            </summary>
            <param name="g">geocache</param>
            <param name="x">x coordinate</param>
            <param name="y">y coordinate</param>
        </member>
        <member name="P:Tsp.City.Cache">
            <summary>
            Geocache associated to a city
            </summary>
        </member>
        <member name="F:Tsp.City.location">
            <summary>
            Private copy of the location of this city.
            </summary>
        </member>
        <member name="P:Tsp.City.Location">
            <summary>
            The location of this city.
            </summary>
        </member>
        <member name="F:Tsp.City.distances">
            <summary>
            Private copy of the distance from this city to every other city.
            The index in this array is the number of the city linked to.
            </summary>
        </member>
        <member name="P:Tsp.City.Distances">
            <summary>
            The distance from this city to every other city.
            </summary>
        </member>
        <member name="F:Tsp.City.closeCities">
            <summary>
            Private copy of the list of the cities that are closest to this one.
            </summary>
        </member>
        <member name="P:Tsp.City.CloseCities">
            <summary>
            A list of the cities that are closest to this one.
            </summary>
        </member>
        <member name="M:Tsp.City.FindClosestCities(System.Int32)">
            <summary>
            Find the cities that are closest to this one.
            </summary>
            <param name="numberOfCloseCities">When creating the initial population of tours, this is a greater chance
            that a nearby city will be chosen for a link. This is the number of nearby cities that will be considered close.</param>
        </member>
        <member name="T:Tsp.Link">
            <summary>
            An individual link between 2 cities in a tour.
            This city connects to 2 other cities.
            </summary>
        </member>
        <member name="F:Tsp.Link.connection1">
            <summary>
            Connection to the first city.
            </summary>
        </member>
        <member name="P:Tsp.Link.Connection1">
            <summary>
            Connection to the first city.
            </summary>
        </member>
        <member name="F:Tsp.Link.connection2">
            <summary>
            Connection to the second city.
            </summary>
        </member>
        <member name="P:Tsp.Link.Connection2">
            <summary>
            Connection to the second city.
            </summary>
        </member>
        <member name="T:Tsp.Population">
            <summary>
            Class to hold tour information
            </summary>
        </member>
        <member name="F:Tsp.Population.bestTour">
            <summary>
            Private copy of the best tour found so far by the Genetic Algorithm.
            </summary>
        </member>
        <member name="P:Tsp.Population.BestTour">
            <summary>
            The best tour found so far by the Genetic Algorithm.
            </summary>
        </member>
        <member name="M:Tsp.Population.CreateRandomPopulation(System.Int32,Tsp.Cities,System.Random,System.Int32)">
            <summary>
            Create the initial set of random tours.
            </summary>
            <param name="populationSize">Number of tours to create.</param>
            <param name="cityList">The list of cities in this tour.</param>
            <param name="rand">Random number generator. We pass around the same random number generator, so that results between runs are consistent.</param>
            <param name="chanceToUseCloseCity">The odds (out of 100) that a city that is known to be close will be used in any given link.</param>
        </member>
        <member name="T:Tsp.Tour">
            <summary>
            This class represents one instance of a tour through all the cities.
            </summary>
        </member>
        <member name="M:Tsp.Tour.#ctor(System.Int32)">
            <summary>
            Constructor that takes a default capacity.
            </summary>
            <param name="capacity">Initial size of the tour. Should be the number of cities in the tour.</param>
        </member>
        <member name="F:Tsp.Tour.fitness">
            <summary>
            Private copy of this fitness of this tour.
            </summary>
        </member>
        <member name="P:Tsp.Tour.Fitness">
            <summary>
            The fitness (total tour length) of this tour.
            </summary>
        </member>
        <member name="M:Tsp.Tour.resetTour(System.Int32)">
            <summary>
            Creates the tour with the correct number of cities and creates initial connections of all -1.
            </summary>
            <param name="numberOfCities">number of cities</param>
        </member>
        <member name="M:Tsp.Tour.DetermineFitness(Tsp.Cities)">
            <summary>
            Determine the fitness (total length) of an individual tour.
            </summary>
            <param name="cities">The cities in this tour. Used to get the distance between each city.</param>
        </member>
        <member name="M:Tsp.Tour.joinCities(Tsp.Tour,System.Int32[],System.Int32,System.Int32)">
            <summary>
            Creates a link between 2 cities in a tour, and then updates the city usage.
            </summary>
            <param name="tour">The incomplete child tour.</param>
            <param name="cityUsage">Number of times each city has been used in this tour. Is updated when cities are joined.</param>
            <param name="city1">The first city in the link.</param>
            <param name="city2">The second city in the link.</param>
        </member>
        <member name="M:Tsp.Tour.findNextCity(Tsp.Tour,Tsp.Tour,Tsp.Cities,System.Int32[],System.Int32)">
            <summary>
            Find a link from a given city in the parent tour that can be placed in the child tour.
            If both links in the parent aren't valid links for the child tour, return -1.
            </summary>
            <param name="parent">The parent tour to get the link from.</param>
            <param name="child">The child tour that the link will be placed in.</param>
            <param name="cityList">The list of cities in this tour.</param>
            <param name="cityUsage">Number of times each city has been used in the child.</param>
            <param name="city">City that we want to link from.</param>
            <returns>The city to link to in the child tour, or -1 if none are valid.</returns>
        </member>
        <member name="M:Tsp.Tour.testConnectionValid(Tsp.Tour,Tsp.Cities,System.Int32[],System.Int32,System.Int32)">
            <summary>
            Determine if it is OK to connect 2 cities given the existing connections in a child tour.
            If the two cities can be connected already (witout doing a full tour) then it is an invalid link.
            </summary>
            <param name="tour">The incomplete child tour.</param>
            <param name="cityList">The list of cities in this tour.</param>
            <param name="cityUsage">Array that contains the number of times each city has been linked.</param>
            <param name="city1">The first city in the link.</param>
            <param name="city2">The second city in the link.</param>
            <returns>True if the connection can be made.</returns>
        </member>
        <member name="M:Tsp.Tour.Crossover(Tsp.Tour,Tsp.Tour,Tsp.Cities,System.Random)">
            <summary>
            Perform the crossover operation on 2 parent tours to create a new child tour.
            This function should be called twice to make the 2 children.
            In the second call, the parent parameters should be swapped.
            </summary>
            <param name="parent1">The first parent tour.</param>
            <param name="parent2">The second parent tour.</param>
            <param name="cityList">The list of cities in this tour.</param>
            <param name="rand">Random number generator. We pass around the same random number generator, so that results between runs are consistent.</param>
            <returns>The child tour.</returns>
        </member>
        <member name="M:Tsp.Tour.Mutate(System.Random)">
            <summary>
            Randomly change one of the links in this tour.
            </summary>
            <param name="rand">Random number generator. We pass around the same random number generator, so that results between runs are consistent.</param>
        </member>
        <member name="T:Tsp.Tsp">
            <summary>
            This class performs the Travelling Salesman Problem algorithm.
            </summary>
        </member>
        <member name="T:Tsp.Tsp.NewBestTourEventHandler">
            <summary>
            Delegate used to raise an event when a new best tour is found.
            </summary>
            <param name="sender">Object that generated this event.</param>
            <param name="e">Event arguments. Contains information about the best tour.</param>
        </member>
        <member name="E:Tsp.Tsp.foundNewBestTour">
            <summary>
            Event fired when a new best tour is found.
            </summary>
        </member>
        <member name="F:Tsp.Tsp.rand">
            <summary>
            Random number generator object.
            We allow the GUI to set the seed for the random number generator to assist in debugging.
            This allows errors to be easily reproduced.
            </summary>
        </member>
        <member name="F:Tsp.Tsp.cityList">
            <summary>
            The list of cities. This is only used to calculate the distances between the cities.
            </summary>
        </member>
        <member name="F:Tsp.Tsp.population">
            <summary>
            The complete list of all the tours.
            </summary>
        </member>
        <member name="F:Tsp.Tsp.halt">
            <summary>
            Private copy of a flag that will stop the TSP from calculating any more generations.
            </summary>
        </member>
        <member name="P:Tsp.Tsp.Halt">
            <summary>
            The GUI sets this flag to true to stop the TSP algorithm and allow the Begin() function to return.
            </summary>
        </member>
        <member name="M:Tsp.Tsp.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Tsp.Tsp.Begin(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Tsp.Cities)">
            <summary>
            Starts the TSP algorithm.
            To stop before all generations are calculated, set <see cref="P:Tsp.Tsp.Halt"/> to true.
            </summary>
            <param name="populationSize">Number of random tours to create before starting the algorithm.</param>
            <param name="maxGenerations">Number of times to perform the crossover operation before stopping.</param>
            <param name="groupSize">Number of tours to examine in each generation. Top 2 are chosen as the parent tours whose children replace the worst 2 tours in the group.</param>
            <param name="mutation">Odds that a child tour will be mutated..</param>
            <param name="seed">Seed for the random number generator.</param>
            <param name="chanceToUseCloseCity">The odds (out of 100) that a city that is known to be close will be used in any given link.</param>
            <param name="cityList">List of cities in the tour.</param>
        </member>
        <member name="M:Tsp.Tsp.makeChildren(System.Int32,System.Int32)">
            <summary>
            Randomly select a group of tours from the population. 
            The top 2 are chosen as the parent tours.
            Crossover is performed on these 2 tours.
            The childred tours from this process replace the worst 2 tours in the group.
            </summary>
            <param name="groupSize">Number of tours in this group.</param>
            <param name="mutation">Odds that a child will be mutated.</param>
        </member>
        <member name="M:Tsp.Tsp.displayTour(Tsp.Tour,System.Int32,System.Boolean)">
            <summary>
            Raise an event to the GUI listener to display a tour.
            </summary>
            <param name="bestTour">The best tour the algorithm has found so far.</param>
            <param name="generationNumber">How many generations have been performed.</param>
            <param name="complete">Is the TSP algorithm complete.</param>
        </member>
        <member name="T:Tsp.TspEventArgs">
            <summary>
            Event arguments when the TSP class wants the GUI to draw a tour.
            </summary>
        </member>
        <member name="M:Tsp.TspEventArgs.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Tsp.TspEventArgs.#ctor(Tsp.Cities,Tsp.Tour,System.Int32,System.Boolean)">
            <summary>
            Constructor that sets all the properties.
            </summary>
            <param name="cityList">The list of cities to draw.</param>
            <param name="bestTour">The tour that connects all the cities.</param>
            <param name="generation">Which generation is this.</param>
            <param name="complete">Is this the last update before we are done.</param>
        </member>
        <member name="F:Tsp.TspEventArgs.cityList">
            <summary>Private copy of the list of cities.</summary>
        </member>
        <member name="P:Tsp.TspEventArgs.CityList">
            <summary>Public property for list of cities.</summary>
        </member>
        <member name="F:Tsp.TspEventArgs.bestTour">
            <summary>Private copy of the tour of the cities.</summary>
        </member>
        <member name="P:Tsp.TspEventArgs.BestTour">
            <summary>Public property for the tour of the cities.</summary>
        </member>
        <member name="F:Tsp.TspEventArgs.generation">
            <summary>Private copy for which generation this tour came from.</summary>
        </member>
        <member name="P:Tsp.TspEventArgs.Generation">
            <summary>Public property for which generation this tour came from.</summary>
        </member>
        <member name="F:Tsp.TspEventArgs.complete">
            <summary>Private copy indicating if the TSP algorithm is complete.</summary>
        </member>
        <member name="P:Tsp.TspEventArgs.Complete">
            <summary>Public property indicating if the TSP algorithm is complete.</summary>
        </member>
        <member name="T:PreRemoveTab">
            <summary>
            Delegate used to indicate if a TabPage can be closed
            Called right before potential closure of a TabPage
            </summary>
            <param name="indx">TabPage index</param>
            <returns>True if TabPage can be closed</returns>
        </member>
    </members>
</doc>
